clear vars; clc;
data = niftiread('AAL.nii');

n = length(data);
count = 1;

for i = 1:n
    tmp_data = data;
        tmp_data(tmp_data~=(i)) = 0;
        tmp_data(tmp_data==(i)) = 1;
        smoth_data = smooth3(tmp_data);
        iss_data = isosurface(smoth_data);
        if ~isempty(iss_data.faces) && ~isempty(iss_data.vertices)            
            brs{count} = BrainRegion('ID', num2str(i), ...
                'Label', num2str(i), ...
                'X', mean(iss_data.vertices(:, 1)), ...
                'Y', mean(iss_data.vertices(:, 2)), ...
                'Z', mean(iss_data.vertices(:, 3))); %#ok<SAGROW>
            count = count + 1;
            
            % centroid maybe useful to convert to atlas?
%             h = plot3(mean(iss_data.vertices(:, 1)), ...
%                 mean(iss_data.vertices(:, 2)), ...
%                 mean(iss_data.vertices(:, 3)), ...
%                 'MARKER', 'o');
%             hold on;
            
        end
end


ba = BrainAtlas( ...
    'ID', 'TestToSaveCoolID', ...
    'LABEL', 'Brain Atlas', ...
    'NOTES', 'Brain atlas notes', ...
    'BR_DICT', IndexedDictionary('IT_CLASS', 'BrainRegion', 'IT_KEY', 1, 'IT_LIST', brs) ...
    );

for i = 1:10
    subs{i} = SubjectST( ...
    'ID', ['SUB ST' num2str(i)], ...
    'LABEL', 'Subejct ST', ...
    'NOTES', 'Notes on subject ST', ...
    'BA', ba, ...
    'age', randi(10), ...
    'sex', 'male', ...
    'ST', rand(ba.get('BR_DICT').length(), 1) ...
    ); %#ok<SAGROW>
end

gr = Group( ...
    'ID', 'GR ST', ...
    'LABEL', 'Group label', ...
    'NOTES', 'Group notes', ...
    'SUB_CLASS', 'SubjectST', ...
    'SUB_DICT', IndexedDictionary('IT_CLASS', 'SubjectST', 'IT_KEY', 1, 'IT_LIST', subs) ...
    );

a_WU = AnalyzeGroup_ST_WU('GR', gr);
GUIElement('pe', a_WU).draw()
