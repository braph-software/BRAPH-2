clear variables %#ok<*NASGU>

%%
load('FUN_communities.mat')

%% create a pipeline
pipeline = Pipeline();
pipeline.set('LABEL', 'Pipeline Functional Group Average WU');
pipeline.set('NOTES', 'Pipeline Functional Group Average WU to calculate the functional group communities');
pipeline.set('PS_DICT', Pipeline.getPropDefault('PS_DICT'))

% atlas
ps1 = PipelineSection('ID', int2str(1), 'LABEL', 'Brain Atlas');
pipeline.get('PS_DICT').get('ADD', ps1);
ps1.set('PC_DICT', PipelineSection.getPropDefault('PC_DICT'));
pc1 = PipelineCode( ...
    'ID', int2str(1), ...
    'MONIKER', 'ba', ...
    'TEXT_BEFORE_EXEC', 'Load Brain Atlas', ...
    'TEXT_AFTER_EXEC', 'Brain Atlas', ...
    'CODE', char("ImporterBrainAtlasXLS('WAITBAR', true).get('GET_FILE').get('BA')"), ...
    'EL', ba ...
    );
ps1.get('PC_DICT').get('ADD', pc1);

% Functional groups
ps2 = PipelineSection('ID', int2str(2), 'LABEL', 'Functional Groups');

pipeline.get('PS_DICT').get('ADD', ps2);
ps2.set('PC_DICT', PipelineSection.getPropDefault('PC_DICT'));
pc2 = PipelineCode( ...
    'ID', int2str(1), ...
    'MONIKER', 'gr1_women_FUN', ...
    'TEXT_BEFORE_EXEC', 'Load Group FUN 1', ...
    'TEXT_AFTER_EXEC', 'Group FUN 1', ...
    'CODE', char("ImporterGroupSubjectFUN_XLS('BA', ba, 'WAITBAR', true).get('GET_DIR').get('GR')"), ...
    'EL', gr1_women_FUN ...
    );
ps2.get('PC_DICT').get('ADD', pc2);

pc3 = PipelineCode( ...
    'ID', int2str(2), ...
    'MONIKER', 'gr2_men_FUN', ...
    'TEXT_BEFORE_EXEC', 'Load Group FUN 2', ...
    'TEXT_AFTER_EXEC', 'Group FUN 2', ...
    'CODE', char("ImporterGroupSubjectFUN_XLS('BA', ba, 'WAITBAR', true).get('GET_DIR').get('GR')"), ...
    'EL', gr2_men_FUN ...
    );
ps2.get('PC_DICT').get('ADD', pc3);

% Analysis
ps3 = PipelineSection('ID', int2str(3), 'LABEL', 'Analysis');

pipeline.get('PS_DICT').get('ADD', ps3);
ps3.set('PC_DICT', PipelineSection.getPropDefault('PC_DICT'));
pc4 = PipelineCode( ...
    'ID', int2str(1), ...
    'MONIKER', 'analysis_women', ...
    'TEXT_BEFORE_EXEC', 'Analyze Group 1', ...
    'TEXT_AFTER_EXEC', 'Group 1 Analysis', ...
    'CODE', char("AnalyzeGroup_FUN_GA_WU('GR', gr1_women_FUN)"), ...
    'EL', analysis_women ...
    );
ps3.get('PC_DICT').get('ADD', pc4);

pc5 = PipelineCode( ...
    'ID', int2str(2), ...
    'MONIKER', 'analysis_men', ...
    'TEXT_BEFORE_EXEC', 'Analyze Group 2', ...
    'TEXT_AFTER_EXEC', 'Group 2 Analysis', ...
    'CODE', char("AnalyzeGroup_FUN_GA_WU('GR', gr2_men_FUN)"), ...
    'EL', analysis_men ...
    );
ps3.get('PC_DICT').get('ADD', pc5);

%% Open the pipeline
gui = GUIElement('PE', pipeline);
gui.get('DRAW');
gui.get('SHOW')

%% Save the pipeline
fprintf('pipeline saving...\n')
tic
Element.save(pipeline, 'pipeline_Communities_FUN.b2')
toc
fprintf('pipeline saved\n')