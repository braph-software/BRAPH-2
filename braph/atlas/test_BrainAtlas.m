% test BrainAtlas
br1 = BrainRegion('BR1', 'brain region 1', 1, 11, 111);
br2 = BrainRegion('BR2', 'brain region 2', 2, 22, 222);
br3 = BrainRegion('BR3', 'brain region 3', 3, 33, 333);
br4 = BrainRegion('BR4', 'brain region 4', 4, 44, 444);
br5 = BrainRegion('BR5', 'brain region 5', 5, 55, 555);
br6 = BrainRegion('BR6', 'brain region 6', 6, 66, 666);
br7 = BrainRegion('BR7', 'brain region 7', 7, 77, 777);
br8 = BrainRegion('BR8', 'brain region 8', 8, 88, 888);
br9 = BrainRegion('BR9', 'brain region 9', 9, 99, 999);

%% Test 1: Instantiation
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

%% Test 2: Basic functionalities
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

assert(atlas.brainregionnumber()==5, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.brainregionnumber does not work')
assert(atlas.contains_brain_region(1), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.contains_brain_region does not work')
assert(~atlas.contains_brain_region(6), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.contains_brain_region does not work')
assert(isequal(atlas.getBrainRegion(1).getLabel(), 'BR1'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.getBrainRegion does not work')

%% Test 3: Add
atlas = BrainAtlas('brain atlas', {br1, br2, br4, br5});

atlas.addBrainRegion(br3, 3)

assert(atlas.brainregionnumber()==5, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.addBrainRegion does not work')
assert(isequal(atlas.getBrainRegion(3).getLabel(), 'BR3'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.getBrainRegion does not work')

atlas.addBrainRegion(br6)

assert(atlas.brainregionnumber()==6, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.addBrainRegion does not work')
assert(isequal(atlas.getBrainRegion(6).getLabel(), 'BR6'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.addBrainRegion does not work')

%% Test 4: Remove
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

atlas.removeBrainRegion(3)

assert(atlas.brainregionnumber()==4, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.removeBrainRegion does not work')
assert(isequal(atlas.getBrainRegion(2).getLabel(), 'BR2'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.removeBrainRegion does not work')
assert(isequal(atlas.getBrainRegion(3).getLabel(), 'BR4'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.removeBrainRegion does not work')

atlas.removeBrainRegion(1)

assert(atlas.brainregionnumber()==3, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.removeBrainRegion does not work')
assert(isequal(atlas.getBrainRegion(1).getLabel(), 'BR2'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.removeBrainRegion does not work')

%% Test 5: Replace
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

atlas.replaceBrainRegion(3, br9)

assert(atlas.brainregionnumber()==5, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.replaceBrainRegion does not work')
assert(isequal(atlas.getBrainRegion(3).getLabel(), 'BR9'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.replaceBrainRegion does not work')

%% Test 6: Invert
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

atlas.invertBrainRegions(2, 4)

assert(atlas.brainregionnumber()==5, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.invertBrainRegions does not work')
assert(isequal(atlas.getBrainRegion(2).getLabel(), 'BR4'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.invertBrainRegions does not work')
assert(isequal(atlas.getBrainRegion(4).getLabel(), 'BR2'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.invertBrainRegions does not work')

%% Test 7: MoveTo
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

atlas.movetoBrainRegion(4, 2)

assert(atlas.brainregionnumber()==5, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.movetoBrainRegion does not work')
assert(isequal(atlas.getBrainRegion(2).getLabel(), 'BR4'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.movetoBrainRegion does not work')

atlas.movetoBrainRegion(1, 5)

assert(atlas.brainregionnumber()==5, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.movetoBrainRegion does not work')
assert(isequal(atlas.getBrainRegion(5).getLabel(), 'BR1'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.movetoBrainRegion does not work')

%% Test 8: Remove All
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

selected = atlas.removeBrainRegions([2, 4]);

assert(atlas.brainregionnumber()==3, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.removeBrainRegions does not work')
assert(isequal(atlas.getBrainRegion(3).getLabel(), 'BR5'), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.removeBrainRegions does not work')
assert(isempty(selected), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.removeBrainRegions does not work')

%% Test 9: Add Above
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

[selected, added] = atlas.addaboveBrainRegions([1 3 5]);

assert(atlas.brainregionnumber()==8, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.addaboveBrainRegions does not work')
for i = [1 4 7]
    assert(isequal(atlas.getBrainRegion(i).getLabel(), 'BR'), ...
        'BRAPH:BrainAtlas:Bug', ...
        'BrainAtlas.addaboveBrainRegions does not work')
end
assert(isequal(selected, [2 5 8]), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.addaboveBrainRegions does not work')
assert(isequal(added, [1 4 7]), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.addaboveBrainRegions does not work')

%% Test 10: Add Below
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

[selected, added] = atlas.addbelowBrainRegions([1 3 5]);

assert(atlas.brainregionnumber()==8, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.addbelowBrainRegions does not work')
for i = [2 5 8]
    assert(isequal(atlas.getBrainRegion(i).getLabel(), 'BR'), ...
        'BRAPH:BrainAtlas:Bug', ...
        'BrainAtlas.addbelowBrainRegions does not work')
end
assert(isequal(selected, [1 4 7]), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.addbelowBrainRegions does not work')
assert(isequal(added, [2 5 8]), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.addbelowBrainRegions does not work')

%% Test 10: Move Up
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

selected = atlas.moveupBrainRegions([1 3 5]);

assert(atlas.brainregionnumber()==5, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.moveupBrainRegions does not work')
assert(isequal(selected, [1 2 4]), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.moveupBrainRegions does not work')

%% Test 11: Move Down
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

selected = atlas.movedownBrainRegions([1 3 5]);

assert(atlas.brainregionnumber()==5, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.moveupBrainRegions does not work')
assert(isequal(selected, [2 4 5]), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.moveupBrainRegions does not work')

%% Test 12: Move to Top
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

selected = atlas.move2topBrainRegions([1 3 5]);

assert(atlas.brainregionnumber()==5, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.move2topBrainRegions does not work')
assert(isequal(selected, [1 2 3]), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.move2topBrainRegions does not work')

%% Test 12: Move to Bottom
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

selected = atlas.move2bottomBrainRegions([1 3 5]);

assert(atlas.brainregionnumber()==5, ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.move2bottomBrainRegions does not work')
assert(isequal(selected, [3 4 5]), ...
    'BRAPH:BrainAtlas:Bug', ...
    'BrainAtlas.move2bottomBrainRegions does not work')