% test copy_varargin
g = GraphBU(randn(3), 'hg', 1);
m = Degree(g, 'hm', 2);
varargin = {1, 2, 3, 'Four', 'Five', m, g};

%% Test 1: General functionality
varargin_copy = copy_varargin(varargin{:});
for i = 1:1:length(varargin)
    assert(isequal(varargin(i), varargin_copy(i)), ...
        'BRAPH:copy_varargin:Bug', ...
        'Element not copied correctly.')
end

varargin_copy = copy_varargin(varargin);
for i = 1:1:length(varargin)
    assert(isequal(varargin(i), varargin_copy(i)), ...
        'BRAPH:copy_varargin:Bug', ...
        'Element not copied correctly.')
end

%% Test 2: Handle objects shallow-copied
varargin_copy = copy_varargin(varargin);

m_copy = varargin_copy{6};  % should NOT make a deep copy of the Measure

assert(m.is_value_calculated() == false, ...
        'BRAPH:copy_varargin:Bug', ...
        'Object not copied correctly.')
assert(m_copy.is_value_calculated() == false, ...
        'BRAPH:copy_varargin:Bug', ...
        'Object not copied correctly.')

m.getValue();
assert(m.is_value_calculated() == true, ...
        'BRAPH:copy_varargin:Bug', ...
        'Handle object not copied correctly.')
assert(m_copy.is_value_calculated() == true, ...
        'BRAPH:copy_varargin:Bug', ...
        'Handle object not copied correctly.')

%% Test 3: Copiable objects deep-copied
varargin_copy = copy_varargin(varargin);

g_copy = varargin_copy{7};  % should make a deep copy of the Graph

assert(g.getMeasure('Degree').is_value_calculated() == false, ...
        'BRAPH:copy_varargin:Bug', ...
        'Copiable object not copied correctly.')
assert(g_copy.getMeasure('Degree').is_value_calculated() == false, ...
        'BRAPH:copy_varargin:Bug', ...
        'Copiable object not copied correctly.')

g.getMeasure('Degree').getValue();
assert(g.getMeasure('Degree').is_value_calculated() == true, ...
        'BRAPH:copy_varargin:Bug', ...
        'Copiable object not copied correctly.')
assert(g_copy.getMeasure('Degree').is_value_calculated() == false, ...
        'BRAPH:copy_varargin:Bug', ...
        'Copiable object not copied correctly.')