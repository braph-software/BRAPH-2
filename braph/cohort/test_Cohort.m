% test Cohort
br1 = BrainRegion('BR1', 'brain region 1', 1, 11, 111);
br2 = BrainRegion('BR2', 'brain region 2', 2, 22, 222);
br3 = BrainRegion('BR3', 'brain region 3', 3, 33, 333);
br4 = BrainRegion('BR4', 'brain region 4', 4, 44, 444);
br5 = BrainRegion('BR5', 'brain region 5', 5, 55, 555);
atlas = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});

sub_class_list = Subject.getList();

%% Test 1: Instantiation Empty
for i = 1:1:length(sub_class_list)
    sub_class = sub_class_list{i};
    cohort = Cohort('cohort', sub_class, {});
end

%% Test 2: Instantiation with Subjects
for i = 1:1:length(sub_class_list)
    sub_class = sub_class_list{i};
    
    sub1 = eval(['Subject.getSubject(sub_class' repmat(', atlas', 1, Subject.getBrainAtlasNumber(sub_class)) ')']);
    sub2 = eval(['Subject.getSubject(sub_class' repmat(', atlas', 1, Subject.getBrainAtlasNumber(sub_class)) ')']);
    sub3 = eval(['Subject.getSubject(sub_class' repmat(', atlas', 1, Subject.getBrainAtlasNumber(sub_class)) ')']);
    
    cohort = Cohort('cohort', sub_class, {sub1, sub2, sub3});
end

%% Test 3: Basic functionalities
for i = 1:1:length(sub_class_list)
    sub_class = sub_class_list{i};
    
    sub1 = eval(['Subject.getSubject(sub_class' repmat(', atlas', 1, Subject.getBrainAtlasNumber(sub_class)) ', ''SubID'', ''1'')']);
    sub2 = eval(['Subject.getSubject(sub_class' repmat(', atlas', 1, Subject.getBrainAtlasNumber(sub_class)) ', ''SubID'', ''2'')']);
    sub3 = eval(['Subject.getSubject(sub_class' repmat(', atlas', 1, Subject.getBrainAtlasNumber(sub_class)) ', ''SubID'', ''3'')']);
    
    cohort = Cohort('cohort', sub_class, {sub1, sub2, sub3});

    assert(cohort.subjectnumber()==3, ...
        'BRAPH:Cohort:Bug', ...
        'Cohort.subjectnumber does not work')
    assert(cohort.contains_subject(1), ...
        'BRAPH:Cohort:Bug', ...
        'Cohort.contains_subject does not work')
    assert(~cohort.contains_subject(4), ...
        'BRAPH:Cohort:Bug', ...
        'Cohort.contains_subject does not work')
    assert(isequal(cohort.getSubject(2).getID(), '2'), ...
        'BRAPH:Cohort:Bug', ...
        'Cohort.getSubject does not work')
end

% %% Test 3: Add
% ba = BrainAtlas('brain atlas', {br1, br2, br4, br5});
% ba.addBrainRegion(br3, 3)
% 
% assert(ba.brainregionnumber()==5, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(ba.getBrainRegion(3).getLabel(), 'BR3'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% ba.addBrainRegion(br6)
% 
% assert(ba.brainregionnumber()==6, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(ba.getBrainRegion(6).getLabel(), 'BR6'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 4: Remove
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% ba.removeBrainRegion(3)
% 
% assert(ba.brainregionnumber()==4, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(ba.getBrainRegion(2).getLabel(), 'BR2'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% assert(isequal(ba.getBrainRegion(3).getLabel(), 'BR4'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% ba.removeBrainRegion(1)
% 
% assert(ba.brainregionnumber()==3, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(ba.getBrainRegion(1).getLabel(), 'BR2'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 5: Replace
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% ba.replaceBrainRegion(3, br9)
% 
% assert(ba.brainregionnumber()==5, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(ba.getBrainRegion(3).getLabel(), 'BR9'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 6: Invert
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% ba.invertBrainRegions(2, 4)
% 
% assert(ba.brainregionnumber()==5, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(ba.getBrainRegion(2).getLabel(), 'BR4'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% assert(isequal(ba.getBrainRegion(4).getLabel(), 'BR2'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 7: MoveTo
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% ba.movetoBrainRegion(4, 2)
% 
% assert(ba.brainregionnumber()==5, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(ba.getBrainRegion(2).getLabel(), 'BR4'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% ba.movetoBrainRegion(1, 5)
% 
% assert(ba.brainregionnumber()==5, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(ba.getBrainRegion(5).getLabel(), 'BR1'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 8: Remove All
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% selected = ba.removeBrainRegions([2, 4]);
% 
% assert(ba.brainregionnumber()==3, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(ba.getBrainRegion(3).getLabel(), 'BR5'), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% assert(isempty(selected), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 9: Add Above
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% [selected, added] = ba.addaboveBrainRegions([1 3 5]);
% 
% assert(ba.brainregionnumber()==8, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% for i = [1 4 7]
%     assert(isequal(ba.getBrainRegion(i).getLabel(), 'BR'), ...
%         'BRAPH:BrainAtlas:Bug', ...
%         'BrainAtlas.getBrainRegion does not work')
% end
% assert(isequal(selected, [2 5 8]), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% assert(isequal(added, [1 4 7]), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 9: Add Below
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% [selected, added] = ba.addbelowBrainRegions([1 3 5]);
% 
% assert(ba.brainregionnumber()==8, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% for i = [2 5 8]
%     assert(isequal(ba.getBrainRegion(i).getLabel(), 'BR'), ...
%         'BRAPH:BrainAtlas:Bug', ...
%         'BrainAtlas.getBrainRegion does not work')
% end
% assert(isequal(selected, [1 4 7]), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% assert(isequal(added, [2 5 8]), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 10: Move Up
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% selected = ba.moveupBrainRegions([1 3 5]);
% 
% assert(ba.brainregionnumber()==5, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(selected, [1 2 4]), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 11: Move Down
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% selected = ba.movedownBrainRegions([1 3 5]);
% 
% assert(ba.brainregionnumber()==5, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(selected, [2 4 5]), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 12: Move to Top
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% selected = ba.move2topBrainRegions([1 3 5]);
% 
% assert(ba.brainregionnumber()==5, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(selected, [1 2 3]), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')
% 
% %% Test 12: Move to Bottom
% ba = BrainAtlas('brain atlas', {br1, br2, br3, br4, br5});
% 
% selected = ba.move2bottomBrainRegions([1 3 5]);
% 
% assert(ba.brainregionnumber()==5, ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.brainregionnumber does not work')
% assert(isequal(selected, [3 4 5]), ...
%     'BRAPH:BrainAtlas:Bug', ...
%     'BrainAtlas.getBrainRegion does not work')