%TEST_SETTINGSSURFACEPP

%% Test 1: Inspection Methods
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	categories = num2cell(Category.getCategories());
	pr = SettingsSurfacePP();
	 
	% get('ELCLASS')
	if isa(SettingsSurfacePP, 'ConcreteElement')
		assert(strcmp(SettingsSurfacePP().get('ELCLASS'), 'SettingsSurfacePP'), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP().get(''ELCLASS'') should return ''SettingsSurfacePP''.')
	end
	 
	% getClass
	assert(strcmp(SettingsSurfacePP.getClass(), 'SettingsSurfacePP'), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.getClass() should return ''SettingsSurfacePP''.')
	assert(strcmp(pr.getClass(), 'SettingsSurfacePP'), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'pr.getClass() should return ''SettingsSurfacePP''.')
	assert(strcmp(Element.getClass(pr), 'SettingsSurfacePP'), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getClass(pr) should return ''SettingsSurfacePP''.')
	assert(strcmp(Element.getClass('SettingsSurfacePP'), 'SettingsSurfacePP'), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getClass(''SettingsSurfacePP'') should return ''SettingsSurfacePP''.')
	 
	% getSubclasses()
	assert(isequal(SettingsSurfacePP.getSubclasses(), subclasses('SettingsSurfacePP', [], [], true)), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.getSubclasses() should return the same result as subclasses(''SettingsSurfacePP'', [], [], true).')
	assert(isequal(pr.getSubclasses(), subclasses('SettingsSurfacePP', [], [], true)), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'el.getSubclasses() should return the same result as subclasses(''SettingsSurfacePP'', [], [], true).')
	assert(isequal(Element.getSubclasses(pr), subclasses('SettingsSurfacePP', [], [], true)), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getSubclasses(pr) should return the same result as subclasses(''SettingsSurfacePP'', [], [], true).')
	assert(isequal(Element.getSubclasses('SettingsSurfacePP'), subclasses('SettingsSurfacePP', [], [], true)), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getSubclasses(''SettingsSurfacePP'') should return the same result as subclasses(''SettingsSurfacePP'', [], [], true).')
	 
	% getProps()
	assert(isempty(SettingsSurfacePP.getProps()) || isequal(SettingsSurfacePP.getProps(), 1:1:length(SettingsSurfacePP.getProps())), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.getProps() should return a row vector [1:1:N].')
	assert(isempty(SettingsSurfacePP.getProps()) || isequal(pr.getProps(), 1:1:length(SettingsSurfacePP.getProps())), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'pr.getProps() should return a row vector [1:1:N].')
	assert(isempty(SettingsSurfacePP.getProps()) || isequal(Element.getProps(pr), 1:1:length(SettingsSurfacePP.getProps())), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(pr) should return a row vector [1:1:N].')
	assert(isempty(SettingsSurfacePP.getProps()) || isequal(Element.getProps('SettingsSurfacePP'), 1:1:length(SettingsSurfacePP.getProps())), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(''SettingsSurfacePP'') should return a row vector [1:1:N].')
	 
	% getProps(category)
	tmp = cellfun(@(category) SettingsSurfacePP.getProps(category), categories, 'UniformOutput', false);
	assert(isempty(SettingsSurfacePP.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(SettingsSurfacePP.getProps())), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.getProps(category) does not work.')
	tmp = cellfun(@(category) pr.getProps(category), categories, 'UniformOutput', false);
	assert(isempty(SettingsSurfacePP.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(SettingsSurfacePP.getProps())), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'pr.getProps(category) does not work.')
	tmp = cellfun(@(category) Element.getProps(pr, category), categories, 'UniformOutput', false);
	assert(isempty(SettingsSurfacePP.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(SettingsSurfacePP.getProps())), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(pr, category) does not work.')
	tmp = cellfun(@(category) Element.getProps('SettingsSurfacePP', category), categories, 'UniformOutput', false);
	assert(isempty(SettingsSurfacePP.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(SettingsSurfacePP.getProps())), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(''SettingsSurfacePP'', category) does not work.')
	 
	% getPropNumber()
	assert(SettingsSurfacePP.getPropNumber() == length(SettingsSurfacePP.getProps()), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.getPropNumber() should return the number of properties.')
	assert(pr.getPropNumber() == length(SettingsSurfacePP.getProps()), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'pr.getPropNumber() should return the number of properties.')
	assert(Element.getPropNumber(pr) == length(SettingsSurfacePP.getProps()), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(pr) should return the number of properties.')
	assert(Element.getPropNumber('SettingsSurfacePP') == length(SettingsSurfacePP.getProps()), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(''SettingsSurfacePP'') should return the number of properties.')
	 
	% getPropNumber(category)
	assert(sum(cellfun(@(category) SettingsSurfacePP.getPropNumber(category), categories)) == SettingsSurfacePP.getPropNumber(), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.getPropNumber(category) does not work.')
	assert(sum(cellfun(@(category) pr.getPropNumber(category), categories)) == SettingsSurfacePP.getPropNumber(), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'pr.getPropNumber(category) does not work.')
	assert(sum(cellfun(@(category) Element.getPropNumber(pr, category), categories)) == SettingsSurfacePP.getPropNumber(), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(pr, category) does not work.')
	assert(sum(cellfun(@(category) Element.getPropNumber('SettingsSurfacePP', category), categories)) == SettingsSurfacePP.getPropNumber(), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(''SettingsSurfacePP'', category) does not work.')
	 
	% existsProp(prop)
	assert(~SettingsSurfacePP.existsProp(NaN), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.existsProp(prop) does not work.')
	assert(~pr.existsProp(NaN), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'pr.existsProp(prop) does not work.')
	assert(~Element.existsProp(pr, NaN), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.existsProp(pr, prop) does not work.')
	assert(~Element.existsProp('SettingsSurfacePP', NaN), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.existsProp(''SettingsSurfacePP'', prop) does not work.')
	 
	assert_with_error('SettingsSurfacePP.existsProp(NaN)', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT])
	assert_with_error('varargin{1}.existsProp(NaN)', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], pr)
	assert_with_error('Element.existsProp(varargin{1}, NaN)', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], pr)
	assert_with_error('Element.existsProp(''SettingsSurfacePP'', NaN)', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT])
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		assert(SettingsSurfacePP.existsProp(prop), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.existsProp(prop) does not work.')
		assert(pr.existsProp(prop), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.existsProp(prop) does not work.')
		assert(Element.existsProp(pr, prop), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.existsProp(pr, prop) does not work.')
		assert(Element.existsProp('SettingsSurfacePP', prop), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.existsProp(''SettingsSurfacePP'', prop) does not work.')
	end
	 
	% existsTag(tag)
	assert(~SettingsSurfacePP.existsTag(''), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.existsTag(tag) does not work.')
	assert(~pr.existsTag(''), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'pr.existsTag(tag) does not work.')
	assert(~Element.existsTag(pr, ''), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.existsTag(pr, tag) does not work.')
	assert(~Element.existsTag('SettingsSurfacePP', ''), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'Element.existsTag(''SettingsSurfacePP'', tag) does not work.')
	 
	assert_with_error('SettingsSurfacePP.existsTag('''')', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT])
	assert_with_error('varargin{1}.existsTag('''')', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], pr)
	assert_with_error('Element.existsTag(varargin{1}, '''')', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], pr)
	assert_with_error('Element.existsTag(''SettingsSurfacePP'', '''')', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT])
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		tag = pr.getPropTag(prop);
		assert(SettingsSurfacePP.existsTag(tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.existsTag(tag) does not work.')
		assert(pr.existsTag(tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.existsTag(tag) does not work.')
		assert(Element.existsTag(pr, tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.existsTag(pr, tga) does not work.')
		assert(Element.existsTag('SettingsSurfacePP', tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.existsTag(''SettingsSurfacePP'', tag) does not work.')
	end
	 
	% getPropProp(pointer)
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		assert(SettingsSurfacePP.getPropProp(prop) == prop, ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.getPropProp(prop) does not work.')
		assert(pr.getPropProp(prop) == prop, ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.getPropProp(prop) does not work.')
		assert(Element.getPropProp(pr, prop) == prop, ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(pr, prop) does not work.')
		assert(Element.getPropProp('SettingsSurfacePP', prop) == prop, ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(''SettingsSurfacePP'', prop) does not work.')
	 
		tag = pr.getPropTag(prop);
		assert(SettingsSurfacePP.getPropProp(tag) == prop, ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.getPropProp(tag) does not work.')
		assert(pr.getPropProp(tag) == prop, ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.getPropProp(tag) does not work.')
		assert(Element.getPropProp(pr, tag) == prop, ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(pr, tag) does not work.')
		assert(Element.getPropProp('SettingsSurfacePP', prop) == prop, ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(''SettingsSurfacePP'', tag) does not work.')
	end
	 
	% getPropTag(pointer)
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		tag = pr.getPropTag(prop);
	 
		assert(strcmp(SettingsSurfacePP.getPropTag(prop), tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.getPropTag(prop) does not work.')
		assert(strcmp(pr.getPropTag(prop), tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.getPropTag(prop) does not work.')
		assert(strcmp(Element.getPropTag(pr, prop), tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(pr, prop) does not work.')
		assert(strcmp(Element.getPropTag('SettingsSurfacePP', prop), tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(''SettingsSurfacePP'', prop) does not work.')
	 
		assert(strcmp(SettingsSurfacePP.getPropTag(tag), tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.getPropTag(tag) does not work.')
		assert(strcmp(pr.getPropTag(tag), tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.getPropTag(tag) does not work.')
		assert(strcmp(Element.getPropTag(pr, tag), tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(pr, tag) does not work.')
		assert(strcmp(Element.getPropTag('SettingsSurfacePP', prop), tag), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(''SettingsSurfacePP'', tag) does not work.')
	end
	 
	% getPropCategory(pointer)
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		tag = pr.getPropTag(prop);
	 
		assert(Category.existsCategory(SettingsSurfacePP.getPropCategory(prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.getPropCategory(prop) does not work.')
		assert(Category.existsCategory(pr.getPropCategory(prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.getPropCategory(prop) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(pr, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(pr, prop) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(pr, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(''SettingsSurfacePP'', prop) does not work.')
	 
		assert(Category.existsCategory(SettingsSurfacePP.getPropCategory(tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.getPropCategory(tag) does not work.')
		assert(Category.existsCategory(pr.getPropCategory(tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.getPropCategory(tag) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(pr, tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(pr, tag) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(pr, tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(''SettingsSurfacePP'', tag) does not work.')
	end
	 
	% getPropFormat(pointer)
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		tag = pr.getPropTag(prop);
	 
		assert(Format.existsFormat(SettingsSurfacePP.getPropFormat(prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.getPropFormat(prop) does not work.')
		assert(Format.existsFormat(pr.getPropFormat(prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.getPropFormat(prop) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(pr, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(pr, prop) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(pr, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(''SettingsSurfacePP'', prop) does not work.')
	 
		assert(Format.existsFormat(SettingsSurfacePP.getPropFormat(tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.getPropFormat(tag) does not work.')
		assert(Format.existsFormat(pr.getPropFormat(tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.getPropFormat(tag) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(pr, tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(pr, tag) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(pr, tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(''SettingsSurfacePP'', tag) does not work.')
	end
	 
	% getPropDescription(pointer)
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		tag = pr.getPropTag(prop);
	 
		assert(ischar(SettingsSurfacePP.getPropDescription(prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.getPropDescription(prop) does not work.')
		assert(ischar(pr.getPropDescription(prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.getPropDescription(prop) does not work.')
		assert(ischar(Element.getPropDescription(pr, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(pr, prop) does not work.')
		assert(ischar(Element.getPropDescription(pr, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(''SettingsSurfacePP'', prop) does not work.')
	 
		assert(ischar(SettingsSurfacePP.getPropDescription(tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.getPropDescription(tag) does not work.')
		assert(ischar(pr.getPropDescription(tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.getPropDescription(tag) does not work.')
		assert(ischar(Element.getPropDescription(pr, tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(pr, tag) does not work.')
		assert(ischar(Element.getPropDescription(pr, tag)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(''SettingsSurfacePP'', tag) does not work.')
	end
	 
	% getPropSettings(pointer)
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		tag = pr.getPropTag(prop);
	 
		settings = SettingsSurfacePP.getPropSettings(prop);
		settings = pr.getPropSettings(prop);
		settings = Element.getPropSettings(pr, prop);
		settings = Element.getPropSettings('SettingsSurfacePP', prop);
	 
		settings = SettingsSurfacePP.getPropSettings(tag);
		settings = pr.getPropSettings(tag);
		settings = Element.getPropSettings(pr, tag);
		settings = Element.getPropSettings('SettingsSurfacePP', tag);
	end
	 
	% getPropDefault(pointer)
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		tag = pr.getPropTag(prop);
	 
		default = SettingsSurfacePP.getPropDefault(prop);
		default = pr.getPropDefault(prop);
		default = Element.getPropDefault(pr, prop);
		default = Element.getPropDefault('SettingsSurfacePP', prop);
	 
		default = SettingsSurfacePP.getPropDefault(tag);
		default = pr.getPropDefault(tag);
		default = Element.getPropDefault(pr, tag);
		default = Element.getPropDefault('SettingsSurfacePP', tag);
	end
	 
	% getPropDefaultConditioned(pointer)
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		tag = pr.getPropTag(prop);
	 
		conditioned_default = SettingsSurfacePP.getPropDefaultConditioned(prop);
		conditioned_default = pr.getPropDefaultConditioned(prop);
		conditioned_default = Element.getPropDefaultConditioned(pr, prop);
		conditioned_default = Element.getPropDefaultConditioned('SettingsSurfacePP', prop);
	 
		conditioned_default = SettingsSurfacePP.getPropDefaultConditioned(tag);
		conditioned_default = pr.getPropDefaultConditioned(tag);
		conditioned_default = Element.getPropDefaultConditioned(pr, tag);
		conditioned_default = Element.getPropDefaultConditioned('SettingsSurfacePP', tag);
	end
	 
	% checkProp(pointer, value)
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		tag = pr.getPropTag(prop);
	 
		assert(~SettingsSurfacePP.checkProp(prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.checkProp(prop, value) does not work.')
		assert(~pr.checkProp(prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.checkProp(prop, value) does not work.')
		assert(~Element.checkProp(pr, prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(pr, prop, value) does not work.')
		assert(~Element.checkProp('SettingsSurfacePP', prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''SettingsSurfacePP'', prop, value) does not work.')
	 
		assert_with_error('SettingsSurfacePP.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], prop)
		assert_with_error('varargin{2}.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], prop, pr)
		assert_with_error('Element.checkProp(varargin{2}, varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], prop, pr)
		assert_with_error('Element.checkProp(''SettingsSurfacePP'', varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], prop)
	 
		assert(~SettingsSurfacePP.checkProp(tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.checkProp(tag, value) does not work.')
		assert(~pr.checkProp(tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.checkProp(tag, value) does not work.')
		assert(~Element.checkProp(pr, tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(pr, tag, value) does not work.')
		assert(~Element.checkProp('SettingsSurfacePP', tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''SettingsSurfacePP'', tag, value) does not work.')
	 
		assert_with_error('SettingsSurfacePP.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], tag)
		assert_with_error('varargin{2}.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], tag, pr)
		assert_with_error('Element.checkProp(varargin{2}, varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], tag, pr)
		assert_with_error('Element.checkProp(''SettingsSurfacePP'', varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.WRONG_INPUT], tag)
	 
		assert(SettingsSurfacePP.checkProp(prop, Element.getPropDefaultConditioned(SettingsSurfacePP, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.checkProp(prop, <conditioned default value>) does not work.')
		assert(pr.checkProp(prop, Element.getPropDefaultConditioned(SettingsSurfacePP, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.checkProp(prop, <conditioned default value>) does not work.')
		assert(Element.checkProp(pr, prop, Element.getPropDefaultConditioned(SettingsSurfacePP, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(pr, prop, <conditioned default value>) does not work.')
		assert(Element.checkProp('SettingsSurfacePP', prop, Element.getPropDefaultConditioned(SettingsSurfacePP, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''SettingsSurfacePP'', prop, <conditioned default value>) does not work.')
	 
		assert(SettingsSurfacePP.checkProp(tag, Element.getPropDefaultConditioned(SettingsSurfacePP, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.checkProp(tag, <conditioned default value>) does not work.')
		assert(pr.checkProp(tag, Element.getPropDefaultConditioned(SettingsSurfacePP, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'pr.checkProp(tag, <conditioned default value>) does not work.')
		assert(Element.checkProp(pr, tag, Element.getPropDefaultConditioned(SettingsSurfacePP, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(pr, tag, <conditioned default value>) does not work.')
		assert(Element.checkProp('SettingsSurfacePP', tag, Element.getPropDefaultConditioned(SettingsSurfacePP, prop)), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''SettingsSurfacePP'', tag, <conditioned default value>) does not work.')
	 
	end
	 
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 2: Instantiation - defaults
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	pr = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TEMPLATE), ...
		SettingsSurfacePP.ID, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ID), ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.WAITBAR), ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PARENT), ...
		SettingsSurfacePP.BKGCOLOR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.BKGCOLOR), ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.EL), ...
		SettingsSurfacePP.PROP, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PROP), ...
		SettingsSurfacePP.HEIGHT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.HEIGHT), ...
		SettingsSurfacePP.TITLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TITLE), ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.GUI_CB), ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ENABLE), ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
	 
		% excluded props
		if any(prop == [SettingsSurfacePP.PARENT SettingsSurfacePP.H SettingsSurfacePP.LISTENER_CB SettingsSurfacePP.BUTTON_FACECOLOR SettingsSurfacePP.EDITFIELD_FACEALPHA SettingsSurfacePP.SLIDER_FACEALPHA SettingsSurfacePP.BUTTON_EDGECOLOR SettingsSurfacePP.EDITFIELD_EDGEALPHA SettingsSurfacePP.SLIDER_EDGEALPHA])
			continue
		end
	 
		TAG = upper(SettingsSurfacePP.getPropTag(prop));
		switch SettingsSurfacePP.getPropCategory(prop)
			case {Category.CONSTANT, Category.RESULT, Category.QUERY}
				% getr
				assert( ...
					pr.getr(prop) == SettingsSurfacePP.getNoValue(), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['Being a ' SettingsSurfacePP.getCategoryName(SettingsSurfacePP.getPropCategory(prop)) ', SettingsSurfacePP.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in SettingsSurfacePP.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					pr.getr(TAG) == SettingsSurfacePP.getNoValue(), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['Being a ' SettingsSurfacePP.getCategoryName(SettingsSurfacePP.getPropCategory(prop)) ', SettingsSurfacePP.getr(' TAG ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in SettingsSurfacePP.getr(' TAG ').'] ...
					)
				% get
				assert( ...
					~isa(pr.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				if isempty(pr.getPropSettings(prop))
					assert( ...
						pr.checkFormat(pr.getPropFormat(prop), pr.get(prop)), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						['SettingsSurfacePP.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				else
					assert( ...
						pr.checkFormat(pr.getPropFormat(prop), pr.get(prop), pr.getPropSettings(prop)), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						['SettingsSurfacePP.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				end
			case Category.EVANESCENT
				% getr
				assert( ...
					pr.getr(prop) == SettingsSurfacePP.getNoValue(), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['Being a ' SettingsSurfacePP.getCategoryName(SettingsSurfacePP.getPropCategory(prop)) ', SettingsSurfacePP.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in SettingsSurfacePP.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					pr.getr(TAG) == SettingsSurfacePP.getNoValue(), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['Being a ' SettingsSurfacePP.getCategoryName(SettingsSurfacePP.getPropCategory(prop)) ', SettingsSurfacePP.getr(' TAG ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in SettingsSurfacePP.getr(' TAG ').'] ...
					)
				% get
				warning_backup = warning('off', [BRAPH2.STR ':SettingsSurfacePP']);
				assert( ...
					~isa(pr.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				if isempty(pr.getPropSettings(prop))
					assert( ...
						pr.checkFormat(pr.getPropFormat(prop), pr.get(prop)), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						['SettingsSurfacePP.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				else
					assert( ...
						pr.checkFormat(pr.getPropFormat(prop), pr.get(prop), pr.getPropSettings(prop)), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						['SettingsSurfacePP.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				end
				warning(warning_backup)
			otherwise % case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isequal(pr.getr(prop), SettingsSurfacePP.getPropDefaultConditioned(prop)), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must be inizialized to its default value ' ...
					'given by SettingsSurfacePP.getPropDefaultConditioned(' int2str(prop) '). ' ...
					'Or there could be an error in SettingsSurfacePP.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					isequal(pr.getr(TAG), SettingsSurfacePP.getPropDefaultConditioned(prop)), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' TAG ') must be inizialized to its default value ' ...
					'given by SettingsSurfacePP.getPropDefaultConditioned(' int2str(prop) '). ' ...
					'Or there could be an error in SettingsSurfacePP.getr(' TAG ').'] ...
					)
		end
	end
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 3: Memorize
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	pr = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TEMPLATE), ...
		SettingsSurfacePP.ID, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ID), ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.WAITBAR), ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PARENT), ...
		SettingsSurfacePP.BKGCOLOR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.BKGCOLOR), ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.EL), ...
		SettingsSurfacePP.PROP, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PROP), ...
		SettingsSurfacePP.HEIGHT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.HEIGHT), ...
		SettingsSurfacePP.TITLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TITLE), ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.GUI_CB), ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ENABLE), ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
	 
		% excluded props
		if any(prop == [SettingsSurfacePP.PARENT SettingsSurfacePP.H SettingsSurfacePP.LISTENER_CB SettingsSurfacePP.BUTTON_FACECOLOR SettingsSurfacePP.EDITFIELD_FACEALPHA SettingsSurfacePP.SLIDER_FACEALPHA SettingsSurfacePP.BUTTON_EDGECOLOR SettingsSurfacePP.EDITFIELD_EDGEALPHA SettingsSurfacePP.SLIDER_EDGEALPHA])
			continue
		end
	 
		TAG = upper(SettingsSurfacePP.getPropTag(prop));
		switch SettingsSurfacePP.getPropCategory(prop)
			case Category.RESULT
				assert( ...
					~isa(pr.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					isa(pr.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
				assert( ...
					~isa(pr.memorize(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					~isa(pr.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
					)
				assert( ...
					pr.checkFormat(pr.getPropFormat(prop), pr.getr(prop),pr.getPropSettings(prop)), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			case Category.QUERY
	% 			warning_backup = warning('off', [BRAPH2.STR ':SettingsSurfacePP']);
				assert( ...
					~isa(pr.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					isa(pr.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
	% following tests excluded because properties QUERY should not be memorized
	% 			warning_backup = warning('off', [BRAPH2.STR ':SettingsSurfacePP']);
	% 			assert( ...
	% 				~isa(pr.memorize(prop), 'NoValue'), ...
	% 				[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
	% 				['SettingsSurfacePP.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
	% 				)
	% 			warning(warning_backup)
	% 			assert( ...
	% 				~isa(pr.getr(prop), 'NoValue'), ...
	% 				[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
	% 				['SettingsSurfacePP.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
	% 				)
	% 			assert( ...
	% 				pr.checkFormat(pr.getPropFormat(prop), pr.getr(prop),pr.getPropSettings(prop)), ...
	% 				[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
	% 				['SettingsSurfacePP.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
	% 				)
	% 			warning(warning_backup)
			case Category.EVANESCENT
				warning_backup = warning('off', [BRAPH2.STR ':SettingsSurfacePP']);
				assert( ...
					~isa(pr.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				warning(warning_backup)
				assert( ...
					isa(pr.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
				assert( ...
					~isa(pr.memorize(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					~isa(pr.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
					)
				assert( ...
					pr.checkFormat(pr.getPropFormat(prop), pr.getr(prop),pr.getPropSettings(prop)), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
				if pr.getPropFormat(prop) == Format.HANDLE
					warning_backup = warning('off', 'BRAPH2:SettingsSurfacePP');
					delete(ancestor(pr.get(prop), 'figure'))
					warning(warning_backup)
				end
		end
	end
	 
	if ~isempty(SettingsSurfacePP.getProps(Category.RESULT))
		for prop = 1:1:SettingsSurfacePP.getPropNumber()
	 
			% excluded props
			if any(prop == [SettingsSurfacePP.PARENT SettingsSurfacePP.H SettingsSurfacePP.LISTENER_CB SettingsSurfacePP.BUTTON_FACECOLOR SettingsSurfacePP.EDITFIELD_FACEALPHA SettingsSurfacePP.SLIDER_FACEALPHA SettingsSurfacePP.BUTTON_EDGECOLOR SettingsSurfacePP.EDITFIELD_EDGEALPHA SettingsSurfacePP.SLIDER_EDGEALPHA])
				continue
			end
	 
			switch SettingsSurfacePP.getPropCategory(prop)
				case {Category.PARAMETER, Category.DATA}
					assert( ...
						pr.isLocked(prop), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						['SettingsSurfacePP.isLocked(' int2str(prop) ') must be locked because a result has been calculated.'] ...
						)
				otherwise
					assert( ...
						~pr.isLocked(prop), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						['SettingsSurfacePP.isLocked(' int2str(prop) ') must NOT be locked even though a result has been calculated.'] ...
						)
			end
		end
	end
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 4: Lock 1
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	pr = SettingsSurfacePP();
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		TAG = upper(SettingsSurfacePP.getPropTag(prop));
		assert( ...
			~pr.isLocked(prop), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			['SettingsSurfacePP.isLocked(' int2str(prop) ') must NOT be locked when it is instantiated.'] ...
			)
		assert( ...
			~pr.isLocked(TAG), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			['SettingsSurfacePP.isLocked(' TAG ') must NOT be locked when it is instantiated.'] ...
			)
	end
	 
	pr.lock()
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		switch SettingsSurfacePP.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA}
				assert( ...
					pr.isLocked(prop), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.isLocked(' int2str(prop) ') must be locked because the element is now locked.'] ...
					)
			case {Category.CONSTANT, Category.METADATA, Category.RESULT, Category.QUERY, Category.EVANESCENT, Category.FIGURE, Category.GUI}
				assert( ...
					~pr.isLocked(prop), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.isLocked(' int2str(prop) ') must NOT be locked even though the element is now locked.'] ...
					)
		end
	end
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 5: Lock 2
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	pr = SettingsSurfacePP();
	 
	warning_backup = warning('off', 'BRAPH2:SettingsSurfacePP');
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		pr.lock(prop)
		switch SettingsSurfacePP.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					pr.isLocked(prop), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.isLocked(' int2str(prop) ') must be locked.'] ...
					)
			case {Category.CONSTANT, Category.METADATA, Category.RESULT, Category.QUERY, Category.EVANESCENT}
				assert( ...
					~pr.isLocked(prop), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.isLocked(' int2str(prop) ') must NOT be locked even though locking has been attempted.'] ...
					)
		end
	end
	warning(warning_backup)
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 6: Check
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	pr = SettingsSurfacePP();
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		TAG = upper(SettingsSurfacePP.getPropTag(prop));
		assert( ...
			pr.isChecked(prop), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			['SettingsSurfacePP.isChecked(' int2str(prop) ') must be checked when it is instantiated.'] ...
			)
		assert( ...
			pr.isChecked(TAG), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			['SettingsSurfacePP.isChecked(' TAG ') must be checked when it is instantiated.'] ...
			)
	end
	 
	pr.unchecked()
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		assert( ...
			~pr.isChecked(prop), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			['SettingsSurfacePP.isChecked(' int2str(prop) ') must NOT be checked because it has been set to unchecked.'] ...
			)
	end
	 
	pr.checked()
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		assert( ...
			pr.isChecked(prop), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			['SettingsSurfacePP.isChecked(' int2str(prop) ') must be checked because it has been set to checked.'] ...
			)
	end
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 7: Callbacks
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	% basic SettingsSurfacePP
	pr_0 = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TEMPLATE), ...
		SettingsSurfacePP.ID, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ID), ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.WAITBAR), ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PARENT), ...
		SettingsSurfacePP.BKGCOLOR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.BKGCOLOR), ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.EL), ...
		SettingsSurfacePP.PROP, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PROP), ...
		SettingsSurfacePP.HEIGHT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.HEIGHT), ...
		SettingsSurfacePP.TITLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TITLE), ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.GUI_CB), ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ENABLE), ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	% SettingsSurfacePP with 1st callbacks
	pr_1 = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, pr_0.getCallback(4), ..., ...
		SettingsSurfacePP.ID, pr_0.getCallback(5), ..., ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, pr_0.getCallback(9), ..., ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, pr_0.getCallback(13), ..., ...
		SettingsSurfacePP.BKGCOLOR, pr_0.getCallback(14), ..., ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, pr_0.getCallback(23), ..., ...
		SettingsSurfacePP.PROP, pr_0.getCallback(24), ..., ...
		SettingsSurfacePP.HEIGHT, pr_0.getCallback(25), ..., ...
		SettingsSurfacePP.TITLE, pr_0.getCallback(26), ..., ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, pr_0.getCallback(29), ..., ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, pr_0.getCallback(36), ..., ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	prop_number = SettingsSurfacePP.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(SettingsSurfacePP.getPropTag(prop));
		switch SettingsSurfacePP.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(pr_1.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(pr_1.get(prop), pr_0.get(prop)) && ~isa(pr_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(pr_1.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
	% SettingsSurfacePP with 2nd callbacks
	pr_2 = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, pr_1.getCallback(4), ..., ...
		SettingsSurfacePP.ID, pr_1.getCallback(5), ..., ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, pr_1.getCallback(9), ..., ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, pr_1.getCallback(13), ..., ...
		SettingsSurfacePP.BKGCOLOR, pr_1.getCallback(14), ..., ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, pr_1.getCallback(23), ..., ...
		SettingsSurfacePP.PROP, pr_1.getCallback(24), ..., ...
		SettingsSurfacePP.HEIGHT, pr_1.getCallback(25), ..., ...
		SettingsSurfacePP.TITLE, pr_1.getCallback(26), ..., ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, pr_1.getCallback(29), ..., ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, pr_1.getCallback(36), ..., ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	prop_number = SettingsSurfacePP.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(SettingsSurfacePP.getPropTag(prop));
		switch SettingsSurfacePP.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(pr_2.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(pr_2.get(prop), pr_0.get(prop)) && ~isa(pr_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(pr_2.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
	% SettingsSurfacePP with 3rd callbacks
	pr_3 = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, pr_2.getCallback(4), ..., ...
		SettingsSurfacePP.ID, pr_2.getCallback(5), ..., ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, pr_2.getCallback(9), ..., ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, pr_2.getCallback(13), ..., ...
		SettingsSurfacePP.BKGCOLOR, pr_2.getCallback(14), ..., ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, pr_2.getCallback(23), ..., ...
		SettingsSurfacePP.PROP, pr_2.getCallback(24), ..., ...
		SettingsSurfacePP.HEIGHT, pr_2.getCallback(25), ..., ...
		SettingsSurfacePP.TITLE, pr_2.getCallback(26), ..., ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, pr_2.getCallback(29), ..., ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, pr_2.getCallback(36), ..., ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	prop_number = SettingsSurfacePP.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(SettingsSurfacePP.getPropTag(prop));
		switch SettingsSurfacePP.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(pr_3.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(pr_3.get(prop), pr_0.get(prop)) && ~isa(pr_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(pr_3.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 8: Copy
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	% copy empty element
	pr = SettingsSurfacePP();
	 
	pr_copy = pr.copy();
	 
	assert(pr_copy ~= pr, ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.copy() does not work. A copied element must point to a copied element.')
	assert(isequal(pr_copy, pr), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.copy() does not work. A copied element must have the same property values of the original element.')
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		value = pr.getr(prop);
		value_copy = pr_copy.getr(prop);
		switch SettingsSurfacePP.getPropCategory(prop)
			case {Category.EVANESCENT}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					'SettingsSurfacePP.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
							'SettingsSurfacePP.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
							'SettingsSurfacePP.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
				assert( ...
					pr_copy.isLocked(prop) == pr.isLocked(prop), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					'SettingsSurfacePP.copy() does not work. The locked status of the copied and original elements must be the same.' ...
					)
				assert( ...
					pr_copy.isChecked(prop) == pr.isChecked(prop), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					'SettingsSurfacePP.copy() does not work. The checked status of the copied and original elements must be the same.' ...
					)
				assert( ...
					pr_copy.getPropSeed(prop) == pr.getPropSeed(prop), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					'SettingsSurfacePP.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
					)
		end
	end
	 
	% copy element with default initialization and memorization
	pr = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TEMPLATE), ...
		SettingsSurfacePP.ID, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ID), ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.WAITBAR), ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PARENT), ...
		SettingsSurfacePP.BKGCOLOR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.BKGCOLOR), ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.EL), ...
		SettingsSurfacePP.PROP, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PROP), ...
		SettingsSurfacePP.HEIGHT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.HEIGHT), ...
		SettingsSurfacePP.TITLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TITLE), ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.GUI_CB), ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ENABLE), ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		if SettingsSurfacePP.getPropCategory(prop) == Category.QUERY
			% properties QUERY should not be memorized
			% warning_backup = warning('off', [BRAPH2.STR ':SettingsSurfacePP']);
			% pr.memorize(prop);
			% warning(warning_backup)
		elseif SettingsSurfacePP.getPropCategory(prop) == Category.EVANESCENT && pr.getPropFormat(prop) == Format.HANDLE
			pr.memorize(prop);
			warning_backup = warning('off', 'BRAPH2:SettingsSurfacePP');
			delete(ancestor(pr.get(prop), 'figure'))
			warning(warning_backup)
		else
			pr.memorize(prop);
		end
	end
	 
	% copy element with default initialization
	pr_copy = pr.copy();
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		value = pr.getr(prop);
		value_copy = pr_copy.getr(prop);
		switch SettingsSurfacePP.getPropCategory(prop)
			case {Category.EVANESCENT Category.QUERY}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					'SettingsSurfacePP.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
							'SettingsSurfacePP.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
							'SettingsSurfacePP.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
	 
					assert( ...
						pr_copy.isLocked(prop) == pr.isLocked(prop), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The locked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						pr_copy.isChecked(prop) == pr.isChecked(prop), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The checked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						pr_copy.getPropSeed(prop) == pr.getPropSeed(prop), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
						)
		end
	end
	 
	% copy element with callbacks
	pr_0 = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TEMPLATE), ...
		SettingsSurfacePP.ID, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ID), ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.WAITBAR), ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PARENT), ...
		SettingsSurfacePP.BKGCOLOR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.BKGCOLOR), ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.EL), ...
		SettingsSurfacePP.PROP, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PROP), ...
		SettingsSurfacePP.HEIGHT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.HEIGHT), ...
		SettingsSurfacePP.TITLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TITLE), ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.GUI_CB), ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ENABLE), ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	pr = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, pr_0.getCallback(4), ..., ...
		SettingsSurfacePP.ID, pr_0.getCallback(5), ..., ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, pr_0.getCallback(9), ..., ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, pr_0.getCallback(13), ..., ...
		SettingsSurfacePP.BKGCOLOR, pr_0.getCallback(14), ..., ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, pr_0.getCallback(23), ..., ...
		SettingsSurfacePP.PROP, pr_0.getCallback(24), ..., ...
		SettingsSurfacePP.HEIGHT, pr_0.getCallback(25), ..., ...
		SettingsSurfacePP.TITLE, pr_0.getCallback(26), ..., ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, pr_0.getCallback(29), ..., ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, pr_0.getCallback(36), ..., ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	pr_copy = pr.copy();
	pr_0_copy = pr_copy.getr('ID').get('EL');
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
		value = pr.getr(prop);
		value_copy = pr_copy.getr(prop);
		switch SettingsSurfacePP.getPropCategory(prop)
			case {Category.EVANESCENT}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					'SettingsSurfacePP.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
							'SettingsSurfacePP.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
							'SettingsSurfacePP.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
				if isa(value, 'Callback')
					assert( ...
						value == pr_0.getCallback(prop), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The callback should be obtained from SettingsSurfacePP.getCallback().' ...
						)
					assert( ...
						value_copy == pr_0_copy.getCallback(prop), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The callback should be obtained from SettingsSurfacePP.getCallback().' ...
						)
				end
	 
					assert( ...
						pr_copy.isLocked(prop) == pr.isLocked(prop), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The locked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						pr_copy.isChecked(prop) == pr.isChecked(prop), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The checked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						pr_copy.getPropSeed(prop) == pr.getPropSeed(prop), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
						)
		end
	end
	 
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 9: Template
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	pr_template = SettingsSurfacePP();
	pr = SettingsSurfacePP('TEMPLATE', pr_template);
	 
	for prop = 1:1:SettingsSurfacePP.getPropNumber()
	 
		% excluded props
		if any(prop == [SettingsSurfacePP.PARENT SettingsSurfacePP.H SettingsSurfacePP.LISTENER_CB SettingsSurfacePP.BUTTON_FACECOLOR SettingsSurfacePP.EDITFIELD_FACEALPHA SettingsSurfacePP.SLIDER_FACEALPHA SettingsSurfacePP.BUTTON_EDGECOLOR SettingsSurfacePP.EDITFIELD_EDGEALPHA SettingsSurfacePP.SLIDER_EDGEALPHA])
			continue
		end
	 
		TAG = upper(SettingsSurfacePP.getPropTag(prop));
		switch SettingsSurfacePP.getPropCategory(prop)
			case {Category.PARAMETER}
				if prop == SettingsSurfacePP.TEMPLATE
					assert( ...
						isa(pr.getr(prop), 'SettingsSurfacePP'), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP TEMPLATE does not work. SettingsSurfacePP.getr(''TEMPLATE'') should be a SettingsSurfacePP element.' ...
						)
					assert( ...
						isa(pr_template.getr(prop), 'NoValue'), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						'SettingsSurfacePP TEMPLATE does not work. SettingsSurfacePP_template.getr(''TEMPLATE'') should be a NoValue.' ...
						)
				else
					assert( ...
						isa(pr.getr(prop), 'Callback'), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						['SettingsSurfacePP TEMPLATE does not work. SettingsSurfacePP.getr(' TAG ') should be a Callback.'] ...
						)
					assert( ...
						pr.getr(prop).get('EL') == pr_template && pr.getr(prop).get('PROP') == prop && strcmp(pr.getr(prop).get('TAG'), TAG), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						['SettingsSurfacePP TEMPLATE does not work. SettingsSurfacePP.getr(' TAG ') should be a Callback to pr_template.' TAG '.'] ...
						)
					assert( ...
						isa(pr_template.getr(prop), 'NoValue'), ...
						[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
						['SettingsSurfacePP TEMPLATE does not work. SettingsSurfacePP_template.getr(' TAG ') should be a NoValue.'] ...
						)
				end
			otherwise
				assert( ...
					isa(pr.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP TEMPLATE does not work. SettingsSurfacePP.getr(' TAG ') should be a NoValue.'] ...
					)
				assert( ...
					isa(pr_template.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
					['SettingsSurfacePP TEMPLATE does not work. SettingsSurfacePP_template.getr(' TAG ') should be a NoValue.'] ...
					)
		end
	end
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 10: Save Load
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	pr = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TEMPLATE), ...
		SettingsSurfacePP.ID, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ID), ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.WAITBAR), ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PARENT), ...
		SettingsSurfacePP.BKGCOLOR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.BKGCOLOR), ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.EL), ...
		SettingsSurfacePP.PROP, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PROP), ...
		SettingsSurfacePP.HEIGHT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.HEIGHT), ...
		SettingsSurfacePP.TITLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TITLE), ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.GUI_CB), ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ENABLE), ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	filename = [fileparts(which('test_braph2')) filesep 'settingssurfacepp_to_be_erased.b2'];
	 
	Element.save(pr, filename)
	 
	pr_loaded = Element.load(filename);
	 
	assert( ...
		isequal(pr.copy(), pr_loaded), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.save(pr) and/or SettingsSurfacePP.load() do not work.' ...
		)
	 
	delete(filename)
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 11: JSON
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	pr = SettingsSurfacePP( ...
		SettingsSurfacePP.ELCLASS, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.NAME, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DESCRIPTION, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.TEMPLATE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TEMPLATE), ...
		SettingsSurfacePP.ID, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ID), ...
		SettingsSurfacePP.LABEL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.LABEL), ...
		SettingsSurfacePP.NOTES, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.NOTES), ...
		SettingsSurfacePP.TOSTRING, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.WAITBAR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.WAITBAR), ...
		SettingsSurfacePP.H_WAITBAR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DRAWN, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.PARENT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PARENT), ...
		SettingsSurfacePP.BKGCOLOR, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.BKGCOLOR), ...
		SettingsSurfacePP.H, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SHOW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.HIDE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.DELETE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.CLOSE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.X_DRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.UPDATE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.REDRAW, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EL, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.EL), ...
		SettingsSurfacePP.PROP, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.PROP), ...
		SettingsSurfacePP.HEIGHT, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.HEIGHT), ...
		SettingsSurfacePP.TITLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.TITLE), ...
		SettingsSurfacePP.LABEL_TITLE, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.GUI_CB, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.GUI_CB), ...
		SettingsSurfacePP.LISTENER_CB, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_CALC, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_DEL, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_SET, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_MEMORIZED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.LISTENER_LOCKED, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.ENABLE, SettingsSurfacePP.getPropDefault(SettingsSurfacePP.ENABLE), ...
		SettingsSurfacePP.BUTTON_FACECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_FACEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.BUTTON_EDGECOLOR, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.EDITFIELD_EDGEALPHA, SettingsSurfacePP.getNoValue(), ...
		SettingsSurfacePP.SLIDER_EDGEALPHA, SettingsSurfacePP.getNoValue() ...
		);
	 
	[json, struct, el_list] = encodeJSON(pr);
	[pr_dec, struct_dec, el_list_dec] = Element.decodeJSON(json);
	 
	assert(pr_dec ~= pr, ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		'SettingsSurfacePP.encodeJSON() or SettingsSurfacePP.decodeJSON() does not work. A JSON encoded/decoded element must point to an element other than the original one.' ...
		)
	if all(cellfun(@(prop) SettingsSurfacePP.getPropFormat(prop), num2cell(SettingsSurfacePP.getProps())) == Format.HANDLE) && all(cellfun(@(prop) SettingsSurfacePP.getPropFormat(prop), num2cell(SettingsSurfacePP.getProps())) == Format.NET)
		assert(isequal(pr_dec, pr), ...
			[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
			'SettingsSurfacePP.encodeJSON() or SettingsSurfacePP.decodeJSON() does not work. A JSON encoded/decoded element must have the same property values of the original element.' ...
			)
	end
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 12: Remove Figures
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	assert(length(findall(0, 'type', 'figure')) == 1)
	delete(findall(0, 'type', 'figure'))
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 13: No Figures Left
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	assert(isempty(findall(0, 'type', 'figure')), ...
		[BRAPH2.STR ':SettingsSurfacePP:' BRAPH2.FAIL_TEST], ...
		[' When testing SettingsSurfacePP no figures should be left over, either visible or not. ' ...
		int2str(length(findall(0, 'type', 'figure'))) ' figure(s) were left over.'] ...
		)
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

%% Test 14: Delete Figures
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':SettingsSurfacePP'])
	
	delete(findall(0, 'type', 'figure'))
	
	warning('on', [BRAPH2.STR ':SettingsSurfacePP'])
end

