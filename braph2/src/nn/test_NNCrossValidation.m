%TEST_NNCROSSVALIDATION

%% Test 1: Inspection Methods
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	categories = num2cell(Category.getCategories());
	nncv = NNCrossValidation();
	 
	% get('ELCLASS')
	if isa(NNCrossValidation, 'ConcreteElement')
		assert(strcmp(NNCrossValidation().get('ELCLASS'), 'NNCrossValidation'), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation().get(''ELCLASS'') should return ''NNCrossValidation''.')
	end
	 
	% getClass
	assert(strcmp(NNCrossValidation.getClass(), 'NNCrossValidation'), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.getClass() should return ''NNCrossValidation''.')
	assert(strcmp(nncv.getClass(), 'NNCrossValidation'), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getClass() should return ''NNCrossValidation''.')
	assert(strcmp(Element.getClass(nncv), 'NNCrossValidation'), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getClass(nncv) should return ''NNCrossValidation''.')
	assert(strcmp(Element.getClass('NNCrossValidation'), 'NNCrossValidation'), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getClass(''NNCrossValidation'') should return ''NNCrossValidation''.')
	 
	% getSubclasses()
	assert(isequal(NNCrossValidation.getSubclasses(), subclasses('NNCrossValidation', [], [], true)), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.getSubclasses() should return the same result as subclasses(''NNCrossValidation'', [], [], true).')
	assert(isequal(nncv.getSubclasses(), subclasses('NNCrossValidation', [], [], true)), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'el.getSubclasses() should return the same result as subclasses(''NNCrossValidation'', [], [], true).')
	assert(isequal(Element.getSubclasses(nncv), subclasses('NNCrossValidation', [], [], true)), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getSubclasses(nncv) should return the same result as subclasses(''NNCrossValidation'', [], [], true).')
	assert(isequal(Element.getSubclasses('NNCrossValidation'), subclasses('NNCrossValidation', [], [], true)), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getSubclasses(''NNCrossValidation'') should return the same result as subclasses(''NNCrossValidation'', [], [], true).')
	 
	% getProps()
	assert(isempty(NNCrossValidation.getProps()) || isequal(NNCrossValidation.getProps(), 1:1:length(NNCrossValidation.getProps())), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.getProps() should return a row vector [1:1:N].')
	assert(isempty(NNCrossValidation.getProps()) || isequal(nncv.getProps(), 1:1:length(NNCrossValidation.getProps())), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getProps() should return a row vector [1:1:N].')
	assert(isempty(NNCrossValidation.getProps()) || isequal(Element.getProps(nncv), 1:1:length(NNCrossValidation.getProps())), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(nncv) should return a row vector [1:1:N].')
	assert(isempty(NNCrossValidation.getProps()) || isequal(Element.getProps('NNCrossValidation'), 1:1:length(NNCrossValidation.getProps())), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(''NNCrossValidation'') should return a row vector [1:1:N].')
	 
	% getProps(category)
	tmp = cellfun(@(category) NNCrossValidation.getProps(category), categories, 'UniformOutput', false);
	assert(isempty(NNCrossValidation.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(NNCrossValidation.getProps())), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.getProps(category) does not work.')
	tmp = cellfun(@(category) nncv.getProps(category), categories, 'UniformOutput', false);
	assert(isempty(NNCrossValidation.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(NNCrossValidation.getProps())), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getProps(category) does not work.')
	tmp = cellfun(@(category) Element.getProps(nncv, category), categories, 'UniformOutput', false);
	assert(isempty(NNCrossValidation.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(NNCrossValidation.getProps())), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(nncv, category) does not work.')
	tmp = cellfun(@(category) Element.getProps('NNCrossValidation', category), categories, 'UniformOutput', false);
	assert(isempty(NNCrossValidation.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(NNCrossValidation.getProps())), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(''NNCrossValidation'', category) does not work.')
	 
	% getPropNumber()
	assert(NNCrossValidation.getPropNumber() == length(NNCrossValidation.getProps()), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.getPropNumber() should return the number of properties.')
	assert(nncv.getPropNumber() == length(NNCrossValidation.getProps()), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getPropNumber() should return the number of properties.')
	assert(Element.getPropNumber(nncv) == length(NNCrossValidation.getProps()), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(nncv) should return the number of properties.')
	assert(Element.getPropNumber('NNCrossValidation') == length(NNCrossValidation.getProps()), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(''NNCrossValidation'') should return the number of properties.')
	 
	% getPropNumber(category)
	assert(sum(cellfun(@(category) NNCrossValidation.getPropNumber(category), categories)) == NNCrossValidation.getPropNumber(), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.getPropNumber(category) does not work.')
	assert(sum(cellfun(@(category) nncv.getPropNumber(category), categories)) == NNCrossValidation.getPropNumber(), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getPropNumber(category) does not work.')
	assert(sum(cellfun(@(category) Element.getPropNumber(nncv, category), categories)) == NNCrossValidation.getPropNumber(), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(nncv, category) does not work.')
	assert(sum(cellfun(@(category) Element.getPropNumber('NNCrossValidation', category), categories)) == NNCrossValidation.getPropNumber(), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(''NNCrossValidation'', category) does not work.')
	 
	% existsProp(prop)
	assert(~NNCrossValidation.existsProp(NaN), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.existsProp(prop) does not work.')
	assert(~nncv.existsProp(NaN), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.existsProp(prop) does not work.')
	assert(~Element.existsProp(nncv, NaN), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.existsProp(nncv, prop) does not work.')
	assert(~Element.existsProp('NNCrossValidation', NaN), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.existsProp(''NNCrossValidation'', prop) does not work.')
	 
	assert_with_error('NNCrossValidation.existsProp(NaN)', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT])
	assert_with_error('varargin{1}.existsProp(NaN)', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], nncv)
	assert_with_error('Element.existsProp(varargin{1}, NaN)', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], nncv)
	assert_with_error('Element.existsProp(''NNCrossValidation'', NaN)', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT])
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		assert(NNCrossValidation.existsProp(prop), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.existsProp(prop) does not work.')
		assert(nncv.existsProp(prop), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.existsProp(prop) does not work.')
		assert(Element.existsProp(nncv, prop), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.existsProp(nncv, prop) does not work.')
		assert(Element.existsProp('NNCrossValidation', prop), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.existsProp(''NNCrossValidation'', prop) does not work.')
	end
	 
	% existsTag(tag)
	assert(~NNCrossValidation.existsTag(''), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.existsTag(tag) does not work.')
	assert(~nncv.existsTag(''), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.existsTag(tag) does not work.')
	assert(~Element.existsTag(nncv, ''), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.existsTag(nncv, tag) does not work.')
	assert(~Element.existsTag('NNCrossValidation', ''), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.existsTag(''NNCrossValidation'', tag) does not work.')
	 
	assert_with_error('NNCrossValidation.existsTag('''')', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT])
	assert_with_error('varargin{1}.existsTag('''')', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], nncv)
	assert_with_error('Element.existsTag(varargin{1}, '''')', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], nncv)
	assert_with_error('Element.existsTag(''NNCrossValidation'', '''')', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT])
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
		assert(NNCrossValidation.existsTag(tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.existsTag(tag) does not work.')
		assert(nncv.existsTag(tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.existsTag(tag) does not work.')
		assert(Element.existsTag(nncv, tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.existsTag(nncv, tga) does not work.')
		assert(Element.existsTag('NNCrossValidation', tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.existsTag(''NNCrossValidation'', tag) does not work.')
	end
	 
	% getPropProp(pointer)
	for prop = 1:1:NNCrossValidation.getPropNumber()
		assert(NNCrossValidation.getPropProp(prop) == prop, ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.getPropProp(prop) does not work.')
		assert(nncv.getPropProp(prop) == prop, ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropProp(prop) does not work.')
		assert(Element.getPropProp(nncv, prop) == prop, ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(nncv, prop) does not work.')
		assert(Element.getPropProp('NNCrossValidation', prop) == prop, ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(''NNCrossValidation'', prop) does not work.')
	 
		tag = nncv.getPropTag(prop);
		assert(NNCrossValidation.getPropProp(tag) == prop, ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.getPropProp(tag) does not work.')
		assert(nncv.getPropProp(tag) == prop, ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropProp(tag) does not work.')
		assert(Element.getPropProp(nncv, tag) == prop, ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(nncv, tag) does not work.')
		assert(Element.getPropProp('NNCrossValidation', prop) == prop, ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(''NNCrossValidation'', tag) does not work.')
	end
	 
	% getPropTag(pointer)
	for prop = 1:1:NNCrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		assert(strcmp(NNCrossValidation.getPropTag(prop), tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.getPropTag(prop) does not work.')
		assert(strcmp(nncv.getPropTag(prop), tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropTag(prop) does not work.')
		assert(strcmp(Element.getPropTag(nncv, prop), tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(nncv, prop) does not work.')
		assert(strcmp(Element.getPropTag('NNCrossValidation', prop), tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(''NNCrossValidation'', prop) does not work.')
	 
		assert(strcmp(NNCrossValidation.getPropTag(tag), tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.getPropTag(tag) does not work.')
		assert(strcmp(nncv.getPropTag(tag), tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropTag(tag) does not work.')
		assert(strcmp(Element.getPropTag(nncv, tag), tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(nncv, tag) does not work.')
		assert(strcmp(Element.getPropTag('NNCrossValidation', prop), tag), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(''NNCrossValidation'', tag) does not work.')
	end
	 
	% getPropCategory(pointer)
	for prop = 1:1:NNCrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		assert(Category.existsCategory(NNCrossValidation.getPropCategory(prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.getPropCategory(prop) does not work.')
		assert(Category.existsCategory(nncv.getPropCategory(prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropCategory(prop) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(nncv, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(nncv, prop) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(nncv, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(''NNCrossValidation'', prop) does not work.')
	 
		assert(Category.existsCategory(NNCrossValidation.getPropCategory(tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.getPropCategory(tag) does not work.')
		assert(Category.existsCategory(nncv.getPropCategory(tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropCategory(tag) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(nncv, tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(nncv, tag) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(nncv, tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(''NNCrossValidation'', tag) does not work.')
	end
	 
	% getPropFormat(pointer)
	for prop = 1:1:NNCrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		assert(Format.existsFormat(NNCrossValidation.getPropFormat(prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.getPropFormat(prop) does not work.')
		assert(Format.existsFormat(nncv.getPropFormat(prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropFormat(prop) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(nncv, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(nncv, prop) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(nncv, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(''NNCrossValidation'', prop) does not work.')
	 
		assert(Format.existsFormat(NNCrossValidation.getPropFormat(tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.getPropFormat(tag) does not work.')
		assert(Format.existsFormat(nncv.getPropFormat(tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropFormat(tag) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(nncv, tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(nncv, tag) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(nncv, tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(''NNCrossValidation'', tag) does not work.')
	end
	 
	% getPropDescription(pointer)
	for prop = 1:1:NNCrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		assert(ischar(NNCrossValidation.getPropDescription(prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.getPropDescription(prop) does not work.')
		assert(ischar(nncv.getPropDescription(prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropDescription(prop) does not work.')
		assert(ischar(Element.getPropDescription(nncv, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(nncv, prop) does not work.')
		assert(ischar(Element.getPropDescription(nncv, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(''NNCrossValidation'', prop) does not work.')
	 
		assert(ischar(NNCrossValidation.getPropDescription(tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.getPropDescription(tag) does not work.')
		assert(ischar(nncv.getPropDescription(tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropDescription(tag) does not work.')
		assert(ischar(Element.getPropDescription(nncv, tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(nncv, tag) does not work.')
		assert(ischar(Element.getPropDescription(nncv, tag)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(''NNCrossValidation'', tag) does not work.')
	end
	 
	% getPropSettings(pointer)
	for prop = 1:1:NNCrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		settings = NNCrossValidation.getPropSettings(prop);
		settings = nncv.getPropSettings(prop);
		settings = Element.getPropSettings(nncv, prop);
		settings = Element.getPropSettings('NNCrossValidation', prop);
	 
		settings = NNCrossValidation.getPropSettings(tag);
		settings = nncv.getPropSettings(tag);
		settings = Element.getPropSettings(nncv, tag);
		settings = Element.getPropSettings('NNCrossValidation', tag);
	end
	 
	% getPropDefault(pointer)
	for prop = 1:1:NNCrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		default = NNCrossValidation.getPropDefault(prop);
		default = nncv.getPropDefault(prop);
		default = Element.getPropDefault(nncv, prop);
		default = Element.getPropDefault('NNCrossValidation', prop);
	 
		default = NNCrossValidation.getPropDefault(tag);
		default = nncv.getPropDefault(tag);
		default = Element.getPropDefault(nncv, tag);
		default = Element.getPropDefault('NNCrossValidation', tag);
	end
	 
	% getPropDefaultConditioned(pointer)
	for prop = 1:1:NNCrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		conditioned_default = NNCrossValidation.getPropDefaultConditioned(prop);
		conditioned_default = nncv.getPropDefaultConditioned(prop);
		conditioned_default = Element.getPropDefaultConditioned(nncv, prop);
		conditioned_default = Element.getPropDefaultConditioned('NNCrossValidation', prop);
	 
		conditioned_default = NNCrossValidation.getPropDefaultConditioned(tag);
		conditioned_default = nncv.getPropDefaultConditioned(tag);
		conditioned_default = Element.getPropDefaultConditioned(nncv, tag);
		conditioned_default = Element.getPropDefaultConditioned('NNCrossValidation', tag);
	end
	 
	% checkProp(pointer, value)
	for prop = 1:1:NNCrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		assert(~NNCrossValidation.checkProp(prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.checkProp(prop, value) does not work.')
		assert(~nncv.checkProp(prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.checkProp(prop, value) does not work.')
		assert(~Element.checkProp(nncv, prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(nncv, prop, value) does not work.')
		assert(~Element.checkProp('NNCrossValidation', prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''NNCrossValidation'', prop, value) does not work.')
	 
		assert_with_error('NNCrossValidation.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], prop)
		assert_with_error('varargin{2}.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], prop, nncv)
		assert_with_error('Element.checkProp(varargin{2}, varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], prop, nncv)
		assert_with_error('Element.checkProp(''NNCrossValidation'', varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], prop)
	 
		assert(~NNCrossValidation.checkProp(tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.checkProp(tag, value) does not work.')
		assert(~nncv.checkProp(tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.checkProp(tag, value) does not work.')
		assert(~Element.checkProp(nncv, tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(nncv, tag, value) does not work.')
		assert(~Element.checkProp('NNCrossValidation', tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''NNCrossValidation'', tag, value) does not work.')
	 
		assert_with_error('NNCrossValidation.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], tag)
		assert_with_error('varargin{2}.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], tag, nncv)
		assert_with_error('Element.checkProp(varargin{2}, varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], tag, nncv)
		assert_with_error('Element.checkProp(''NNCrossValidation'', varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNCrossValidation:' BRAPH2.WRONG_INPUT], tag)
	 
		assert(NNCrossValidation.checkProp(prop, Element.getPropDefaultConditioned(NNCrossValidation, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.checkProp(prop, <conditioned default value>) does not work.')
		assert(nncv.checkProp(prop, Element.getPropDefaultConditioned(NNCrossValidation, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.checkProp(prop, <conditioned default value>) does not work.')
		assert(Element.checkProp(nncv, prop, Element.getPropDefaultConditioned(NNCrossValidation, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(nncv, prop, <conditioned default value>) does not work.')
		assert(Element.checkProp('NNCrossValidation', prop, Element.getPropDefaultConditioned(NNCrossValidation, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''NNCrossValidation'', prop, <conditioned default value>) does not work.')
	 
		assert(NNCrossValidation.checkProp(tag, Element.getPropDefaultConditioned(NNCrossValidation, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.checkProp(tag, <conditioned default value>) does not work.')
		assert(nncv.checkProp(tag, Element.getPropDefaultConditioned(NNCrossValidation, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.checkProp(tag, <conditioned default value>) does not work.')
		assert(Element.checkProp(nncv, tag, Element.getPropDefaultConditioned(NNCrossValidation, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(nncv, tag, <conditioned default value>) does not work.')
		assert(Element.checkProp('NNCrossValidation', tag, Element.getPropDefaultConditioned(NNCrossValidation, prop)), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''NNCrossValidation'', tag, <conditioned default value>) does not work.')
	 
	end
	 
end

%% Test 2: Instantiation - defaults
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.TEMPLATE), ...
		NNCrossValidation.ID, NNCrossValidation.getPropDefault(NNCrossValidation.ID), ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, NNCrossValidation.getPropDefault(NNCrossValidation.WAITBAR), ...
		NNCrossValidation.KFOLDS, NNCrossValidation.getPropDefault(NNCrossValidation.KFOLDS), ...
		NNCrossValidation.SPLIT, NNCrossValidation.getPropDefault(NNCrossValidation.SPLIT), ...
		NNCrossValidation.D, NNCrossValidation.getPropDefault(NNCrossValidation.D), ...
		NNCrossValidation.NN_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NN_TEMPLATE), ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, NNCrossValidation.getPropDefault(NNCrossValidation.EPOCHS), ...
		NNCrossValidation.BATCH, NNCrossValidation.getPropDefault(NNCrossValidation.BATCH), ...
		NNCrossValidation.SHUFFLE, NNCrossValidation.getPropDefault(NNCrossValidation.SHUFFLE), ...
		NNCrossValidation.SOLVER, NNCrossValidation.getPropDefault(NNCrossValidation.SOLVER), ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
	 
		% excluded props
		if any(prop == [])
			continue
		end
	 
		TAG = upper(NNCrossValidation.getPropTag(prop));
		switch NNCrossValidation.getPropCategory(prop)
			case {Category.CONSTANT, Category.RESULT, Category.QUERY}
				% getr
				assert( ...
					nncv.getr(prop) == NNCrossValidation.getNoValue(), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['Being a ' NNCrossValidation.getCategoryName(NNCrossValidation.getPropCategory(prop)) ', NNCrossValidation.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in NNCrossValidation.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					nncv.getr(TAG) == NNCrossValidation.getNoValue(), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['Being a ' NNCrossValidation.getCategoryName(NNCrossValidation.getPropCategory(prop)) ', NNCrossValidation.getr(' TAG ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in NNCrossValidation.getr(' TAG ').'] ...
					)
				% get
				assert( ...
					~isa(nncv.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				if isempty(nncv.getPropSettings(prop))
					assert( ...
						nncv.checkFormat(nncv.getPropFormat(prop), nncv.get(prop)), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNCrossValidation.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				else
					assert( ...
						nncv.checkFormat(nncv.getPropFormat(prop), nncv.get(prop), nncv.getPropSettings(prop)), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNCrossValidation.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				end
			case Category.EVANESCENT
				% getr
				assert( ...
					nncv.getr(prop) == NNCrossValidation.getNoValue(), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['Being a ' NNCrossValidation.getCategoryName(NNCrossValidation.getPropCategory(prop)) ', NNCrossValidation.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in NNCrossValidation.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					nncv.getr(TAG) == NNCrossValidation.getNoValue(), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['Being a ' NNCrossValidation.getCategoryName(NNCrossValidation.getPropCategory(prop)) ', NNCrossValidation.getr(' TAG ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in NNCrossValidation.getr(' TAG ').'] ...
					)
				% get
				warning_backup = warning('off', [BRAPH2.STR ':NNCrossValidation']);
				assert( ...
					~isa(nncv.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				if isempty(nncv.getPropSettings(prop))
					assert( ...
						nncv.checkFormat(nncv.getPropFormat(prop), nncv.get(prop)), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNCrossValidation.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				else
					assert( ...
						nncv.checkFormat(nncv.getPropFormat(prop), nncv.get(prop), nncv.getPropSettings(prop)), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNCrossValidation.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				end
				warning(warning_backup)
			otherwise % case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isequal(nncv.getr(prop), NNCrossValidation.getPropDefaultConditioned(prop)), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must be inizialized to its default value ' ...
					'given by NNCrossValidation.getPropDefaultConditioned(' int2str(prop) '). ' ...
					'Or there could be an error in NNCrossValidation.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					isequal(nncv.getr(TAG), NNCrossValidation.getPropDefaultConditioned(prop)), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' TAG ') must be inizialized to its default value ' ...
					'given by NNCrossValidation.getPropDefaultConditioned(' int2str(prop) '). ' ...
					'Or there could be an error in NNCrossValidation.getr(' TAG ').'] ...
					)
		end
	end
end

%% Test 3: Memorize
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.TEMPLATE), ...
		NNCrossValidation.ID, NNCrossValidation.getPropDefault(NNCrossValidation.ID), ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, NNCrossValidation.getPropDefault(NNCrossValidation.WAITBAR), ...
		NNCrossValidation.KFOLDS, NNCrossValidation.getPropDefault(NNCrossValidation.KFOLDS), ...
		NNCrossValidation.SPLIT, NNCrossValidation.getPropDefault(NNCrossValidation.SPLIT), ...
		NNCrossValidation.D, NNCrossValidation.getPropDefault(NNCrossValidation.D), ...
		NNCrossValidation.NN_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NN_TEMPLATE), ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, NNCrossValidation.getPropDefault(NNCrossValidation.EPOCHS), ...
		NNCrossValidation.BATCH, NNCrossValidation.getPropDefault(NNCrossValidation.BATCH), ...
		NNCrossValidation.SHUFFLE, NNCrossValidation.getPropDefault(NNCrossValidation.SHUFFLE), ...
		NNCrossValidation.SOLVER, NNCrossValidation.getPropDefault(NNCrossValidation.SOLVER), ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
	 
		% excluded props
		if any(prop == [])
			continue
		end
	 
		TAG = upper(NNCrossValidation.getPropTag(prop));
		switch NNCrossValidation.getPropCategory(prop)
			case Category.RESULT
				assert( ...
					~isa(nncv.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
				assert( ...
					~isa(nncv.memorize(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					~isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
					)
				assert( ...
					nncv.checkFormat(nncv.getPropFormat(prop), nncv.getr(prop),nncv.getPropSettings(prop)), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			case Category.QUERY
	% 			warning_backup = warning('off', [BRAPH2.STR ':NNCrossValidation']);
				assert( ...
					~isa(nncv.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
	% following tests excluded because properties QUERY should not be memorized
	% 			warning_backup = warning('off', [BRAPH2.STR ':NNCrossValidation']);
	% 			assert( ...
	% 				~isa(nncv.memorize(prop), 'NoValue'), ...
	% 				[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
	% 				['NNCrossValidation.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
	% 				)
	% 			warning(warning_backup)
	% 			assert( ...
	% 				~isa(nncv.getr(prop), 'NoValue'), ...
	% 				[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
	% 				['NNCrossValidation.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
	% 				)
	% 			assert( ...
	% 				nncv.checkFormat(nncv.getPropFormat(prop), nncv.getr(prop),nncv.getPropSettings(prop)), ...
	% 				[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
	% 				['NNCrossValidation.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
	% 				)
	% 			warning(warning_backup)
			case Category.EVANESCENT
				warning_backup = warning('off', [BRAPH2.STR ':NNCrossValidation']);
				assert( ...
					~isa(nncv.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				warning(warning_backup)
				assert( ...
					isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
				assert( ...
					~isa(nncv.memorize(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					~isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
					)
				assert( ...
					nncv.checkFormat(nncv.getPropFormat(prop), nncv.getr(prop),nncv.getPropSettings(prop)), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
				if nncv.getPropFormat(prop) == Format.HANDLE
					warning_backup = warning('off', 'BRAPH2:NNCrossValidation');
					delete(ancestor(nncv.get(prop), 'figure'))
					warning(warning_backup)
				end
		end
	end
	 
	if ~isempty(NNCrossValidation.getProps(Category.RESULT))
		for prop = 1:1:NNCrossValidation.getPropNumber()
	 
			% excluded props
			if any(prop == [])
				continue
			end
	 
			switch NNCrossValidation.getPropCategory(prop)
				case {Category.PARAMETER, Category.DATA}
					assert( ...
						nncv.isLocked(prop), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNCrossValidation.isLocked(' int2str(prop) ') must be locked because a result has been calculated.'] ...
						)
				otherwise
					assert( ...
						~nncv.isLocked(prop), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNCrossValidation.isLocked(' int2str(prop) ') must NOT be locked even though a result has been calculated.'] ...
						)
			end
		end
	end
end

%% Test 4: Lock 1
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNCrossValidation();
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		TAG = upper(NNCrossValidation.getPropTag(prop));
		assert( ...
			~nncv.isLocked(prop), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNCrossValidation.isLocked(' int2str(prop) ') must NOT be locked when it is instantiated.'] ...
			)
		assert( ...
			~nncv.isLocked(TAG), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNCrossValidation.isLocked(' TAG ') must NOT be locked when it is instantiated.'] ...
			)
	end
	 
	nncv.lock()
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		switch NNCrossValidation.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA}
				assert( ...
					nncv.isLocked(prop), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.isLocked(' int2str(prop) ') must be locked because the element is now locked.'] ...
					)
			case {Category.CONSTANT, Category.METADATA, Category.RESULT, Category.QUERY, Category.EVANESCENT, Category.FIGURE, Category.GUI}
				assert( ...
					~nncv.isLocked(prop), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.isLocked(' int2str(prop) ') must NOT be locked even though the element is now locked.'] ...
					)
		end
	end
end

%% Test 5: Lock 2
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNCrossValidation();
	 
	warning_backup = warning('off', 'BRAPH2:NNCrossValidation');
	for prop = 1:1:NNCrossValidation.getPropNumber()
		nncv.lock(prop)
		switch NNCrossValidation.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					nncv.isLocked(prop), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.isLocked(' int2str(prop) ') must be locked.'] ...
					)
			case {Category.CONSTANT, Category.METADATA, Category.RESULT, Category.QUERY, Category.EVANESCENT}
				assert( ...
					~nncv.isLocked(prop), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.isLocked(' int2str(prop) ') must NOT be locked even though locking has been attempted.'] ...
					)
		end
	end
	warning(warning_backup)
end

%% Test 6: Check
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNCrossValidation();
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		TAG = upper(NNCrossValidation.getPropTag(prop));
		assert( ...
			nncv.isChecked(prop), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNCrossValidation.isChecked(' int2str(prop) ') must be checked when it is instantiated.'] ...
			)
		assert( ...
			nncv.isChecked(TAG), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNCrossValidation.isChecked(' TAG ') must be checked when it is instantiated.'] ...
			)
	end
	 
	nncv.unchecked()
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		assert( ...
			~nncv.isChecked(prop), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNCrossValidation.isChecked(' int2str(prop) ') must NOT be checked because it has been set to unchecked.'] ...
			)
	end
	 
	nncv.checked()
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		assert( ...
			nncv.isChecked(prop), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNCrossValidation.isChecked(' int2str(prop) ') must be checked because it has been set to checked.'] ...
			)
	end
end

%% Test 7: Callbacks
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	% basic NNCrossValidation
	nncv_0 = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.TEMPLATE), ...
		NNCrossValidation.ID, NNCrossValidation.getPropDefault(NNCrossValidation.ID), ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, NNCrossValidation.getPropDefault(NNCrossValidation.WAITBAR), ...
		NNCrossValidation.KFOLDS, NNCrossValidation.getPropDefault(NNCrossValidation.KFOLDS), ...
		NNCrossValidation.SPLIT, NNCrossValidation.getPropDefault(NNCrossValidation.SPLIT), ...
		NNCrossValidation.D, NNCrossValidation.getPropDefault(NNCrossValidation.D), ...
		NNCrossValidation.NN_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NN_TEMPLATE), ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, NNCrossValidation.getPropDefault(NNCrossValidation.EPOCHS), ...
		NNCrossValidation.BATCH, NNCrossValidation.getPropDefault(NNCrossValidation.BATCH), ...
		NNCrossValidation.SHUFFLE, NNCrossValidation.getPropDefault(NNCrossValidation.SHUFFLE), ...
		NNCrossValidation.SOLVER, NNCrossValidation.getPropDefault(NNCrossValidation.SOLVER), ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	% NNCrossValidation with 1st callbacks
	nncv_1 = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, nncv_0.getCallback(4), ..., ...
		NNCrossValidation.ID, nncv_0.getCallback(5), ..., ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, nncv_0.getCallback(9), ..., ...
		NNCrossValidation.KFOLDS, nncv_0.getCallback(10), ..., ...
		NNCrossValidation.SPLIT, nncv_0.getCallback(11), ..., ...
		NNCrossValidation.D, nncv_0.getCallback(12), ..., ...
		NNCrossValidation.NN_TEMPLATE, nncv_0.getCallback(13), ..., ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, nncv_0.getCallback(14), ..., ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, nncv_0.getCallback(23), ..., ...
		NNCrossValidation.BATCH, nncv_0.getCallback(24), ..., ...
		NNCrossValidation.SHUFFLE, nncv_0.getCallback(25), ..., ...
		NNCrossValidation.SOLVER, nncv_0.getCallback(26), ..., ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	prop_number = NNCrossValidation.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(NNCrossValidation.getPropTag(prop));
		switch NNCrossValidation.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(nncv_1.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(nncv_1.get(prop), nncv_0.get(prop)) && ~isa(nncv_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(nncv_1.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
	% NNCrossValidation with 2nd callbacks
	nncv_2 = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, nncv_1.getCallback(4), ..., ...
		NNCrossValidation.ID, nncv_1.getCallback(5), ..., ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, nncv_1.getCallback(9), ..., ...
		NNCrossValidation.KFOLDS, nncv_1.getCallback(10), ..., ...
		NNCrossValidation.SPLIT, nncv_1.getCallback(11), ..., ...
		NNCrossValidation.D, nncv_1.getCallback(12), ..., ...
		NNCrossValidation.NN_TEMPLATE, nncv_1.getCallback(13), ..., ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, nncv_1.getCallback(14), ..., ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, nncv_1.getCallback(23), ..., ...
		NNCrossValidation.BATCH, nncv_1.getCallback(24), ..., ...
		NNCrossValidation.SHUFFLE, nncv_1.getCallback(25), ..., ...
		NNCrossValidation.SOLVER, nncv_1.getCallback(26), ..., ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	prop_number = NNCrossValidation.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(NNCrossValidation.getPropTag(prop));
		switch NNCrossValidation.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(nncv_2.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(nncv_2.get(prop), nncv_0.get(prop)) && ~isa(nncv_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(nncv_2.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
	% NNCrossValidation with 3rd callbacks
	nncv_3 = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, nncv_2.getCallback(4), ..., ...
		NNCrossValidation.ID, nncv_2.getCallback(5), ..., ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, nncv_2.getCallback(9), ..., ...
		NNCrossValidation.KFOLDS, nncv_2.getCallback(10), ..., ...
		NNCrossValidation.SPLIT, nncv_2.getCallback(11), ..., ...
		NNCrossValidation.D, nncv_2.getCallback(12), ..., ...
		NNCrossValidation.NN_TEMPLATE, nncv_2.getCallback(13), ..., ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, nncv_2.getCallback(14), ..., ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, nncv_2.getCallback(23), ..., ...
		NNCrossValidation.BATCH, nncv_2.getCallback(24), ..., ...
		NNCrossValidation.SHUFFLE, nncv_2.getCallback(25), ..., ...
		NNCrossValidation.SOLVER, nncv_2.getCallback(26), ..., ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	prop_number = NNCrossValidation.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(NNCrossValidation.getPropTag(prop));
		switch NNCrossValidation.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(nncv_3.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(nncv_3.get(prop), nncv_0.get(prop)) && ~isa(nncv_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(nncv_3.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
end

%% Test 8: Copy
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	% copy empty element
	nncv = NNCrossValidation();
	 
	nncv_copy = nncv.copy();
	 
	assert(nncv_copy ~= nncv, ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.copy() does not work. A copied element must point to a copied element.')
	assert(isequal(nncv_copy, nncv), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.copy() does not work. A copied element must have the same property values of the original element.')
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		value = nncv.getr(prop);
		value_copy = nncv_copy.getr(prop);
		switch NNCrossValidation.getPropCategory(prop)
			case {Category.EVANESCENT}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNCrossValidation.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNCrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNCrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
				assert( ...
					nncv_copy.isLocked(prop) == nncv.isLocked(prop), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNCrossValidation.copy() does not work. The locked status of the copied and original elements must be the same.' ...
					)
				assert( ...
					nncv_copy.isChecked(prop) == nncv.isChecked(prop), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNCrossValidation.copy() does not work. The checked status of the copied and original elements must be the same.' ...
					)
				assert( ...
					nncv_copy.getPropSeed(prop) == nncv.getPropSeed(prop), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNCrossValidation.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
					)
		end
	end
	 
	% copy element with default initialization and memorization
	nncv = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.TEMPLATE), ...
		NNCrossValidation.ID, NNCrossValidation.getPropDefault(NNCrossValidation.ID), ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, NNCrossValidation.getPropDefault(NNCrossValidation.WAITBAR), ...
		NNCrossValidation.KFOLDS, NNCrossValidation.getPropDefault(NNCrossValidation.KFOLDS), ...
		NNCrossValidation.SPLIT, NNCrossValidation.getPropDefault(NNCrossValidation.SPLIT), ...
		NNCrossValidation.D, NNCrossValidation.getPropDefault(NNCrossValidation.D), ...
		NNCrossValidation.NN_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NN_TEMPLATE), ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, NNCrossValidation.getPropDefault(NNCrossValidation.EPOCHS), ...
		NNCrossValidation.BATCH, NNCrossValidation.getPropDefault(NNCrossValidation.BATCH), ...
		NNCrossValidation.SHUFFLE, NNCrossValidation.getPropDefault(NNCrossValidation.SHUFFLE), ...
		NNCrossValidation.SOLVER, NNCrossValidation.getPropDefault(NNCrossValidation.SOLVER), ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		if NNCrossValidation.getPropCategory(prop) == Category.QUERY
			% properties QUERY should not be memorized
			% warning_backup = warning('off', [BRAPH2.STR ':NNCrossValidation']);
			% nncv.memorize(prop);
			% warning(warning_backup)
		elseif NNCrossValidation.getPropCategory(prop) == Category.EVANESCENT && nncv.getPropFormat(prop) == Format.HANDLE
			nncv.memorize(prop);
			warning_backup = warning('off', 'BRAPH2:NNCrossValidation');
			delete(ancestor(nncv.get(prop), 'figure'))
			warning(warning_backup)
		else
			nncv.memorize(prop);
		end
	end
	 
	% copy element with default initialization
	nncv_copy = nncv.copy();
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		value = nncv.getr(prop);
		value_copy = nncv_copy.getr(prop);
		switch NNCrossValidation.getPropCategory(prop)
			case {Category.EVANESCENT Category.QUERY}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNCrossValidation.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNCrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNCrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
	 
					assert( ...
						nncv_copy.isLocked(prop) == nncv.isLocked(prop), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The locked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						nncv_copy.isChecked(prop) == nncv.isChecked(prop), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The checked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						nncv_copy.getPropSeed(prop) == nncv.getPropSeed(prop), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
						)
		end
	end
	 
	% copy element with callbacks
	nncv_0 = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.TEMPLATE), ...
		NNCrossValidation.ID, NNCrossValidation.getPropDefault(NNCrossValidation.ID), ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, NNCrossValidation.getPropDefault(NNCrossValidation.WAITBAR), ...
		NNCrossValidation.KFOLDS, NNCrossValidation.getPropDefault(NNCrossValidation.KFOLDS), ...
		NNCrossValidation.SPLIT, NNCrossValidation.getPropDefault(NNCrossValidation.SPLIT), ...
		NNCrossValidation.D, NNCrossValidation.getPropDefault(NNCrossValidation.D), ...
		NNCrossValidation.NN_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NN_TEMPLATE), ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, NNCrossValidation.getPropDefault(NNCrossValidation.EPOCHS), ...
		NNCrossValidation.BATCH, NNCrossValidation.getPropDefault(NNCrossValidation.BATCH), ...
		NNCrossValidation.SHUFFLE, NNCrossValidation.getPropDefault(NNCrossValidation.SHUFFLE), ...
		NNCrossValidation.SOLVER, NNCrossValidation.getPropDefault(NNCrossValidation.SOLVER), ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	nncv = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, nncv_0.getCallback(4), ..., ...
		NNCrossValidation.ID, nncv_0.getCallback(5), ..., ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, nncv_0.getCallback(9), ..., ...
		NNCrossValidation.KFOLDS, nncv_0.getCallback(10), ..., ...
		NNCrossValidation.SPLIT, nncv_0.getCallback(11), ..., ...
		NNCrossValidation.D, nncv_0.getCallback(12), ..., ...
		NNCrossValidation.NN_TEMPLATE, nncv_0.getCallback(13), ..., ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, nncv_0.getCallback(14), ..., ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, nncv_0.getCallback(23), ..., ...
		NNCrossValidation.BATCH, nncv_0.getCallback(24), ..., ...
		NNCrossValidation.SHUFFLE, nncv_0.getCallback(25), ..., ...
		NNCrossValidation.SOLVER, nncv_0.getCallback(26), ..., ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	nncv_copy = nncv.copy();
	nncv_0_copy = nncv_copy.getr('ID').get('EL');
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
		value = nncv.getr(prop);
		value_copy = nncv_copy.getr(prop);
		switch NNCrossValidation.getPropCategory(prop)
			case {Category.EVANESCENT}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNCrossValidation.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNCrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNCrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
				if isa(value, 'Callback')
					assert( ...
						value == nncv_0.getCallback(prop), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The callback should be obtained from NNCrossValidation.getCallback().' ...
						)
					assert( ...
						value_copy == nncv_0_copy.getCallback(prop), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The callback should be obtained from NNCrossValidation.getCallback().' ...
						)
				end
	 
					assert( ...
						nncv_copy.isLocked(prop) == nncv.isLocked(prop), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The locked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						nncv_copy.isChecked(prop) == nncv.isChecked(prop), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The checked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						nncv_copy.getPropSeed(prop) == nncv.getPropSeed(prop), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
						)
		end
	end
	 
end

%% Test 9: Template
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv_template = NNCrossValidation();
	nncv = NNCrossValidation('TEMPLATE', nncv_template);
	 
	for prop = 1:1:NNCrossValidation.getPropNumber()
	 
		% excluded props
		if any(prop == [])
			continue
		end
	 
		TAG = upper(NNCrossValidation.getPropTag(prop));
		switch NNCrossValidation.getPropCategory(prop)
			case {Category.PARAMETER}
				if prop == NNCrossValidation.TEMPLATE
					assert( ...
						isa(nncv.getr(prop), 'NNCrossValidation'), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation TEMPLATE does not work. NNCrossValidation.getr(''TEMPLATE'') should be a NNCrossValidation element.' ...
						)
					assert( ...
						isa(nncv_template.getr(prop), 'NoValue'), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNCrossValidation TEMPLATE does not work. NNCrossValidation_template.getr(''TEMPLATE'') should be a NoValue.' ...
						)
				else
					assert( ...
						isa(nncv.getr(prop), 'Callback'), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNCrossValidation TEMPLATE does not work. NNCrossValidation.getr(' TAG ') should be a Callback.'] ...
						)
					assert( ...
						nncv.getr(prop).get('EL') == nncv_template && nncv.getr(prop).get('PROP') == prop && strcmp(nncv.getr(prop).get('TAG'), TAG), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNCrossValidation TEMPLATE does not work. NNCrossValidation.getr(' TAG ') should be a Callback to nncv_template.' TAG '.'] ...
						)
					assert( ...
						isa(nncv_template.getr(prop), 'NoValue'), ...
						[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNCrossValidation TEMPLATE does not work. NNCrossValidation_template.getr(' TAG ') should be a NoValue.'] ...
						)
				end
			otherwise
				assert( ...
					isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation TEMPLATE does not work. NNCrossValidation.getr(' TAG ') should be a NoValue.'] ...
					)
				assert( ...
					isa(nncv_template.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNCrossValidation TEMPLATE does not work. NNCrossValidation_template.getr(' TAG ') should be a NoValue.'] ...
					)
		end
	end
end

%% Test 10: Save Load
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.TEMPLATE), ...
		NNCrossValidation.ID, NNCrossValidation.getPropDefault(NNCrossValidation.ID), ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, NNCrossValidation.getPropDefault(NNCrossValidation.WAITBAR), ...
		NNCrossValidation.KFOLDS, NNCrossValidation.getPropDefault(NNCrossValidation.KFOLDS), ...
		NNCrossValidation.SPLIT, NNCrossValidation.getPropDefault(NNCrossValidation.SPLIT), ...
		NNCrossValidation.D, NNCrossValidation.getPropDefault(NNCrossValidation.D), ...
		NNCrossValidation.NN_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NN_TEMPLATE), ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, NNCrossValidation.getPropDefault(NNCrossValidation.EPOCHS), ...
		NNCrossValidation.BATCH, NNCrossValidation.getPropDefault(NNCrossValidation.BATCH), ...
		NNCrossValidation.SHUFFLE, NNCrossValidation.getPropDefault(NNCrossValidation.SHUFFLE), ...
		NNCrossValidation.SOLVER, NNCrossValidation.getPropDefault(NNCrossValidation.SOLVER), ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	filename = [fileparts(which('test_braph2')) filesep 'nncrossvalidation_to_be_erased.b2'];
	 
	Element.save(nncv, filename)
	 
	nncv_loaded = Element.load(filename);
	 
	assert( ...
		isequal(nncv.copy(), nncv_loaded), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.save(nncv) and/or NNCrossValidation.load() do not work.' ...
		)
	 
	delete(filename)
end

%% Test 11: JSON
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNCrossValidation( ...
		NNCrossValidation.ELCLASS, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NAME, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DESCRIPTION, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.TEMPLATE), ...
		NNCrossValidation.ID, NNCrossValidation.getPropDefault(NNCrossValidation.ID), ...
		NNCrossValidation.LABEL, NNCrossValidation.getPropDefault(NNCrossValidation.LABEL), ...
		NNCrossValidation.NOTES, NNCrossValidation.getPropDefault(NNCrossValidation.NOTES), ...
		NNCrossValidation.TOSTRING, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.WAITBAR, NNCrossValidation.getPropDefault(NNCrossValidation.WAITBAR), ...
		NNCrossValidation.KFOLDS, NNCrossValidation.getPropDefault(NNCrossValidation.KFOLDS), ...
		NNCrossValidation.SPLIT, NNCrossValidation.getPropDefault(NNCrossValidation.SPLIT), ...
		NNCrossValidation.D, NNCrossValidation.getPropDefault(NNCrossValidation.D), ...
		NNCrossValidation.NN_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NN_TEMPLATE), ...
		NNCrossValidation.NNEVALUATOR_TEMPLATE, NNCrossValidation.getPropDefault(NNCrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNCrossValidation.DSP, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.DCO, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.D_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.NN_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EVALUATOR_LIST_IT, NNCrossValidation.getNoValue(), ...
		NNCrossValidation.EPOCHS, NNCrossValidation.getPropDefault(NNCrossValidation.EPOCHS), ...
		NNCrossValidation.BATCH, NNCrossValidation.getPropDefault(NNCrossValidation.BATCH), ...
		NNCrossValidation.SHUFFLE, NNCrossValidation.getPropDefault(NNCrossValidation.SHUFFLE), ...
		NNCrossValidation.SOLVER, NNCrossValidation.getPropDefault(NNCrossValidation.SOLVER), ...
		NNCrossValidation.VERBOSE, NNCrossValidation.getPropDefault(NNCrossValidation.VERBOSE), ...
		NNCrossValidation.PLOT_TRAINING, NNCrossValidation.getPropDefault(NNCrossValidation.PLOT_TRAINING), ...
		NNCrossValidation.TRAIN, NNCrossValidation.getNoValue() ...
		);
	 
	[json, struct, el_list] = encodeJSON(nncv);
	[nncv_dec, struct_dec, el_list_dec] = Element.decodeJSON(json);
	 
	assert(nncv_dec ~= nncv, ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNCrossValidation.encodeJSON() or NNCrossValidation.decodeJSON() does not work. A JSON encoded/decoded element must point to an element other than the original one.' ...
		)
	if all(cellfun(@(prop) NNCrossValidation.getPropFormat(prop), num2cell(NNCrossValidation.getProps())) == Format.HANDLE) && all(cellfun(@(prop) NNCrossValidation.getPropFormat(prop), num2cell(NNCrossValidation.getProps())) == Format.NET)
		assert(isequal(nncv_dec, nncv), ...
			[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNCrossValidation.encodeJSON() or NNCrossValidation.decodeJSON() does not work. A JSON encoded/decoded element must have the same property values of the original element.' ...
			)
	end
end

%% Test 12: Creating a cross-validation object
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	% create a NNData containing NNDataPoints 
	num_dp = 9; 
	dp_ids = cell(1, num_dp);
	
	for i = 1:num_dp
	    dp_ids{i} = ['dp_', num2str(i)];
	end
	
	d = NNDataset('DP_DICT', IndexedDictionary(...
	    'IT_CLASS', 'NNDataPoint', ...
	    'IT_LIST',  cellfun(@(x) NNDataPoint('ID', x), ...
	    dp_ids(1:num_dp), 'UniformOutput', false) ...
	    ));
	
	% create the cross-validation process
	nncv = NNCrossValidation('D', {d}, 'KFOLDS', 5);
	
	% Check whether the number of datapoint from all d_list matches
	d_list = nncv.get('D_LIST');
	num_dp_from_nncv = 0;
	for i = 1:length(d_list)
	    num_dp_from_nncv = num_dp_from_nncv + d_list{i}.get('DP_DICT').get('LENGTH');
	end
	assert(num_dp_from_nncv == num_dp, ...
	    [BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
	    'NNCrossValidation does not split the dataset correctly.' ...
	    )
	
	% create the cross-validation process with specifying the datapoints in each
	% fold
	nncv = NNCrossValidation('D', {d}, 'KFOLDS', 5, 'SPLIT', {[1 2], [3 4], [5 6], [7 8], [9]});
	
	% Check whether the number of datapoint in each fold matches
	split = nncv.get('SPLIT');
	d_list = nncv.get('D_LIST');
	for i = 1:length(split)
	    check(i) = d_list{i}.get('DP_DICT').get('LENGTH') == length(split{i});
	end
	assert(all(check), ...
	    [BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
	    'NNCrossValidation does not split the dataset correctly.' ...
	    )
end

%% Test 13: No Figures Left
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	assert(isempty(findall(0, 'type', 'figure')), ...
		[BRAPH2.STR ':NNCrossValidation:' BRAPH2.FAIL_TEST], ...
		[' When testing NNCrossValidation no figures should be left over, either visible or not. ' ...
		int2str(length(findall(0, 'type', 'figure'))) ' figure(s) were left over.'] ...
		)
end

%% Test 14: Delete Figures
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	delete(findall(0, 'type', 'figure'))
end

