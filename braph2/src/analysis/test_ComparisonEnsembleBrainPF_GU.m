%TEST_COMPARISONENSEMBLEBRAINPF_GU

%% Test 1: Inspection Methods
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	categories = num2cell(Category.getCategories());
	pf = ComparisonEnsembleBrainPF_GU();
	 
	% get('ELCLASS')
	if isa(ComparisonEnsembleBrainPF_GU, 'ConcreteElement')
		assert(strcmp(ComparisonEnsembleBrainPF_GU().get('ELCLASS'), 'ComparisonEnsembleBrainPF_GU'), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU().get(''ELCLASS'') should return ''ComparisonEnsembleBrainPF_GU''.')
	end
	 
	% getBuild()
	assert(ComparisonEnsembleBrainPF_GU.getBuild() == 1 && ComparisonEnsembleBrainPF_GU.getBuild() > 0, ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.getBuild() should return the ComparisonEnsembleBrainPF_GU build number.')
	assert(pf.getBuild() == 1 && pf.getBuild() > 0 , ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'pf.getBuild() should return the ComparisonEnsembleBrainPF_GU build number.')
	assert(Element.getBuild(pf) == 1 && Element.getBuild(pf) > 0, ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getBuild(pf) should return the ComparisonEnsembleBrainPF_GU build number.')
	assert(Element.getBuild('ComparisonEnsembleBrainPF_GU') == 1 && Element.getBuild('ComparisonEnsembleBrainPF_GU') > 0, ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getBuild(''ComparisonEnsembleBrainPF_GU'') should return the ComparisonEnsembleBrainPF_GU build number.')
	 
	% getClass()
	assert(strcmp(ComparisonEnsembleBrainPF_GU.getClass(), 'ComparisonEnsembleBrainPF_GU'), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.getClass() should return ''ComparisonEnsembleBrainPF_GU''.')
	assert(strcmp(pf.getClass(), 'ComparisonEnsembleBrainPF_GU'), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'pf.getClass() should return ''ComparisonEnsembleBrainPF_GU''.')
	assert(strcmp(Element.getClass(pf), 'ComparisonEnsembleBrainPF_GU'), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getClass(pf) should return ''ComparisonEnsembleBrainPF_GU''.')
	assert(strcmp(Element.getClass('ComparisonEnsembleBrainPF_GU'), 'ComparisonEnsembleBrainPF_GU'), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getClass(''ComparisonEnsembleBrainPF_GU'') should return ''ComparisonEnsembleBrainPF_GU''.')
	 
	% getSubclasses()
	assert(isequal(ComparisonEnsembleBrainPF_GU.getSubclasses(), subclasses('ComparisonEnsembleBrainPF_GU', [], [], true)), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.getSubclasses() should return the same result as subclasses(''ComparisonEnsembleBrainPF_GU'', [], [], true).')
	assert(isequal(pf.getSubclasses(), subclasses('ComparisonEnsembleBrainPF_GU', [], [], true)), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'el.getSubclasses() should return the same result as subclasses(''ComparisonEnsembleBrainPF_GU'', [], [], true).')
	assert(isequal(Element.getSubclasses(pf), subclasses('ComparisonEnsembleBrainPF_GU', [], [], true)), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getSubclasses(pf) should return the same result as subclasses(''ComparisonEnsembleBrainPF_GU'', [], [], true).')
	assert(isequal(Element.getSubclasses('ComparisonEnsembleBrainPF_GU'), subclasses('ComparisonEnsembleBrainPF_GU', [], [], true)), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getSubclasses(''ComparisonEnsembleBrainPF_GU'') should return the same result as subclasses(''ComparisonEnsembleBrainPF_GU'', [], [], true).')
	 
	% getProps()
	assert(isempty(ComparisonEnsembleBrainPF_GU.getProps()) || isequal(ComparisonEnsembleBrainPF_GU.getProps(), 1:1:length(ComparisonEnsembleBrainPF_GU.getProps())), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.getProps() should return a row vector [1:1:N].')
	assert(isempty(ComparisonEnsembleBrainPF_GU.getProps()) || isequal(pf.getProps(), 1:1:length(ComparisonEnsembleBrainPF_GU.getProps())), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'pf.getProps() should return a row vector [1:1:N].')
	assert(isempty(ComparisonEnsembleBrainPF_GU.getProps()) || isequal(Element.getProps(pf), 1:1:length(ComparisonEnsembleBrainPF_GU.getProps())), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(pf) should return a row vector [1:1:N].')
	assert(isempty(ComparisonEnsembleBrainPF_GU.getProps()) || isequal(Element.getProps('ComparisonEnsembleBrainPF_GU'), 1:1:length(ComparisonEnsembleBrainPF_GU.getProps())), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(''ComparisonEnsembleBrainPF_GU'') should return a row vector [1:1:N].')
	 
	% getProps(category)
	tmp = cellfun(@(category) ComparisonEnsembleBrainPF_GU.getProps(category), categories, 'UniformOutput', false);
	assert(isempty(ComparisonEnsembleBrainPF_GU.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(ComparisonEnsembleBrainPF_GU.getProps())), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.getProps(category) does not work.')
	tmp = cellfun(@(category) pf.getProps(category), categories, 'UniformOutput', false);
	assert(isempty(ComparisonEnsembleBrainPF_GU.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(ComparisonEnsembleBrainPF_GU.getProps())), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'pf.getProps(category) does not work.')
	tmp = cellfun(@(category) Element.getProps(pf, category), categories, 'UniformOutput', false);
	assert(isempty(ComparisonEnsembleBrainPF_GU.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(ComparisonEnsembleBrainPF_GU.getProps())), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(pf, category) does not work.')
	tmp = cellfun(@(category) Element.getProps('ComparisonEnsembleBrainPF_GU', category), categories, 'UniformOutput', false);
	assert(isempty(ComparisonEnsembleBrainPF_GU.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(ComparisonEnsembleBrainPF_GU.getProps())), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(''ComparisonEnsembleBrainPF_GU'', category) does not work.')
	 
	% getPropNumber()
	assert(ComparisonEnsembleBrainPF_GU.getPropNumber() == length(ComparisonEnsembleBrainPF_GU.getProps()), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.getPropNumber() should return the number of properties.')
	assert(pf.getPropNumber() == length(ComparisonEnsembleBrainPF_GU.getProps()), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'pf.getPropNumber() should return the number of properties.')
	assert(Element.getPropNumber(pf) == length(ComparisonEnsembleBrainPF_GU.getProps()), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(pf) should return the number of properties.')
	assert(Element.getPropNumber('ComparisonEnsembleBrainPF_GU') == length(ComparisonEnsembleBrainPF_GU.getProps()), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(''ComparisonEnsembleBrainPF_GU'') should return the number of properties.')
	 
	% getPropNumber(category)
	assert(sum(cellfun(@(category) ComparisonEnsembleBrainPF_GU.getPropNumber(category), categories)) == ComparisonEnsembleBrainPF_GU.getPropNumber(), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.getPropNumber(category) does not work.')
	assert(sum(cellfun(@(category) pf.getPropNumber(category), categories)) == ComparisonEnsembleBrainPF_GU.getPropNumber(), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'pf.getPropNumber(category) does not work.')
	assert(sum(cellfun(@(category) Element.getPropNumber(pf, category), categories)) == ComparisonEnsembleBrainPF_GU.getPropNumber(), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(pf, category) does not work.')
	assert(sum(cellfun(@(category) Element.getPropNumber('ComparisonEnsembleBrainPF_GU', category), categories)) == ComparisonEnsembleBrainPF_GU.getPropNumber(), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(''ComparisonEnsembleBrainPF_GU'', category) does not work.')
	 
	% existsProp(prop)
	assert(~ComparisonEnsembleBrainPF_GU.existsProp(NaN), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.existsProp(prop) does not work.')
	assert(~pf.existsProp(NaN), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'pf.existsProp(prop) does not work.')
	assert(~Element.existsProp(pf, NaN), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.existsProp(pf, prop) does not work.')
	assert(~Element.existsProp('ComparisonEnsembleBrainPF_GU', NaN), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.existsProp(''ComparisonEnsembleBrainPF_GU'', prop) does not work.')
	 
	assert_with_error('ComparisonEnsembleBrainPF_GU.existsProp(NaN)', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT])
	assert_with_error('varargin{1}.existsProp(NaN)', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], pf)
	assert_with_error('Element.existsProp(varargin{1}, NaN)', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], pf)
	assert_with_error('Element.existsProp(''ComparisonEnsembleBrainPF_GU'', NaN)', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT])
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		assert(ComparisonEnsembleBrainPF_GU.existsProp(prop), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.existsProp(prop) does not work.')
		assert(pf.existsProp(prop), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.existsProp(prop) does not work.')
		assert(Element.existsProp(pf, prop), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.existsProp(pf, prop) does not work.')
		assert(Element.existsProp('ComparisonEnsembleBrainPF_GU', prop), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.existsProp(''ComparisonEnsembleBrainPF_GU'', prop) does not work.')
	end
	 
	% existsTag(tag)
	assert(~ComparisonEnsembleBrainPF_GU.existsTag(''), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.existsTag(tag) does not work.')
	assert(~pf.existsTag(''), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'pf.existsTag(tag) does not work.')
	assert(~Element.existsTag(pf, ''), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.existsTag(pf, tag) does not work.')
	assert(~Element.existsTag('ComparisonEnsembleBrainPF_GU', ''), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'Element.existsTag(''ComparisonEnsembleBrainPF_GU'', tag) does not work.')
	 
	assert_with_error('ComparisonEnsembleBrainPF_GU.existsTag('''')', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT])
	assert_with_error('varargin{1}.existsTag('''')', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], pf)
	assert_with_error('Element.existsTag(varargin{1}, '''')', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], pf)
	assert_with_error('Element.existsTag(''ComparisonEnsembleBrainPF_GU'', '''')', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT])
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		tag = pf.getPropTag(prop);
		assert(ComparisonEnsembleBrainPF_GU.existsTag(tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.existsTag(tag) does not work.')
		assert(pf.existsTag(tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.existsTag(tag) does not work.')
		assert(Element.existsTag(pf, tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.existsTag(pf, tga) does not work.')
		assert(Element.existsTag('ComparisonEnsembleBrainPF_GU', tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.existsTag(''ComparisonEnsembleBrainPF_GU'', tag) does not work.')
	end
	 
	% getPropProp(pointer)
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		assert(ComparisonEnsembleBrainPF_GU.getPropProp(prop) == prop, ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.getPropProp(prop) does not work.')
		assert(pf.getPropProp(prop) == prop, ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.getPropProp(prop) does not work.')
		assert(Element.getPropProp(pf, prop) == prop, ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(pf, prop) does not work.')
		assert(Element.getPropProp('ComparisonEnsembleBrainPF_GU', prop) == prop, ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(''ComparisonEnsembleBrainPF_GU'', prop) does not work.')
	 
		tag = pf.getPropTag(prop);
		assert(ComparisonEnsembleBrainPF_GU.getPropProp(tag) == prop, ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.getPropProp(tag) does not work.')
		assert(pf.getPropProp(tag) == prop, ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.getPropProp(tag) does not work.')
		assert(Element.getPropProp(pf, tag) == prop, ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(pf, tag) does not work.')
		assert(Element.getPropProp('ComparisonEnsembleBrainPF_GU', prop) == prop, ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(''ComparisonEnsembleBrainPF_GU'', tag) does not work.')
	end
	 
	% getPropTag(pointer)
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		tag = pf.getPropTag(prop);
	 
		assert(strcmp(ComparisonEnsembleBrainPF_GU.getPropTag(prop), tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.getPropTag(prop) does not work.')
		assert(strcmp(pf.getPropTag(prop), tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.getPropTag(prop) does not work.')
		assert(strcmp(Element.getPropTag(pf, prop), tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(pf, prop) does not work.')
		assert(strcmp(Element.getPropTag('ComparisonEnsembleBrainPF_GU', prop), tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(''ComparisonEnsembleBrainPF_GU'', prop) does not work.')
	 
		assert(strcmp(ComparisonEnsembleBrainPF_GU.getPropTag(tag), tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.getPropTag(tag) does not work.')
		assert(strcmp(pf.getPropTag(tag), tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.getPropTag(tag) does not work.')
		assert(strcmp(Element.getPropTag(pf, tag), tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(pf, tag) does not work.')
		assert(strcmp(Element.getPropTag('ComparisonEnsembleBrainPF_GU', prop), tag), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(''ComparisonEnsembleBrainPF_GU'', tag) does not work.')
	end
	 
	% getPropCategory(pointer)
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		tag = pf.getPropTag(prop);
	 
		assert(Category.existsCategory(ComparisonEnsembleBrainPF_GU.getPropCategory(prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.getPropCategory(prop) does not work.')
		assert(Category.existsCategory(pf.getPropCategory(prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.getPropCategory(prop) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(pf, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(pf, prop) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(pf, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(''ComparisonEnsembleBrainPF_GU'', prop) does not work.')
	 
		assert(Category.existsCategory(ComparisonEnsembleBrainPF_GU.getPropCategory(tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.getPropCategory(tag) does not work.')
		assert(Category.existsCategory(pf.getPropCategory(tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.getPropCategory(tag) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(pf, tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(pf, tag) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(pf, tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(''ComparisonEnsembleBrainPF_GU'', tag) does not work.')
	end
	 
	% getPropFormat(pointer)
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		tag = pf.getPropTag(prop);
	 
		assert(Format.existsFormat(ComparisonEnsembleBrainPF_GU.getPropFormat(prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.getPropFormat(prop) does not work.')
		assert(Format.existsFormat(pf.getPropFormat(prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.getPropFormat(prop) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(pf, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(pf, prop) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(pf, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(''ComparisonEnsembleBrainPF_GU'', prop) does not work.')
	 
		assert(Format.existsFormat(ComparisonEnsembleBrainPF_GU.getPropFormat(tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.getPropFormat(tag) does not work.')
		assert(Format.existsFormat(pf.getPropFormat(tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.getPropFormat(tag) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(pf, tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(pf, tag) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(pf, tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(''ComparisonEnsembleBrainPF_GU'', tag) does not work.')
	end
	 
	% getPropDescription(pointer)
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		tag = pf.getPropTag(prop);
	 
		assert(ischar(ComparisonEnsembleBrainPF_GU.getPropDescription(prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.getPropDescription(prop) does not work.')
		assert(ischar(pf.getPropDescription(prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.getPropDescription(prop) does not work.')
		assert(ischar(Element.getPropDescription(pf, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(pf, prop) does not work.')
		assert(ischar(Element.getPropDescription(pf, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(''ComparisonEnsembleBrainPF_GU'', prop) does not work.')
	 
		assert(ischar(ComparisonEnsembleBrainPF_GU.getPropDescription(tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.getPropDescription(tag) does not work.')
		assert(ischar(pf.getPropDescription(tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.getPropDescription(tag) does not work.')
		assert(ischar(Element.getPropDescription(pf, tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(pf, tag) does not work.')
		assert(ischar(Element.getPropDescription(pf, tag)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(''ComparisonEnsembleBrainPF_GU'', tag) does not work.')
	end
	 
	% getPropSettings(pointer)
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		tag = pf.getPropTag(prop);
	 
		settings = ComparisonEnsembleBrainPF_GU.getPropSettings(prop);
		settings = pf.getPropSettings(prop);
		settings = Element.getPropSettings(pf, prop);
		settings = Element.getPropSettings('ComparisonEnsembleBrainPF_GU', prop);
	 
		settings = ComparisonEnsembleBrainPF_GU.getPropSettings(tag);
		settings = pf.getPropSettings(tag);
		settings = Element.getPropSettings(pf, tag);
		settings = Element.getPropSettings('ComparisonEnsembleBrainPF_GU', tag);
	end
	 
	% getPropDefault(pointer)
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		tag = pf.getPropTag(prop);
	 
		default = ComparisonEnsembleBrainPF_GU.getPropDefault(prop);
		default = pf.getPropDefault(prop);
		default = Element.getPropDefault(pf, prop);
		default = Element.getPropDefault('ComparisonEnsembleBrainPF_GU', prop);
	 
		default = ComparisonEnsembleBrainPF_GU.getPropDefault(tag);
		default = pf.getPropDefault(tag);
		default = Element.getPropDefault(pf, tag);
		default = Element.getPropDefault('ComparisonEnsembleBrainPF_GU', tag);
	end
	 
	% getPropDefaultConditioned(pointer)
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		tag = pf.getPropTag(prop);
	 
		conditioned_default = ComparisonEnsembleBrainPF_GU.getPropDefaultConditioned(prop);
		conditioned_default = pf.getPropDefaultConditioned(prop);
		conditioned_default = Element.getPropDefaultConditioned(pf, prop);
		conditioned_default = Element.getPropDefaultConditioned('ComparisonEnsembleBrainPF_GU', prop);
	 
		conditioned_default = ComparisonEnsembleBrainPF_GU.getPropDefaultConditioned(tag);
		conditioned_default = pf.getPropDefaultConditioned(tag);
		conditioned_default = Element.getPropDefaultConditioned(pf, tag);
		conditioned_default = Element.getPropDefaultConditioned('ComparisonEnsembleBrainPF_GU', tag);
	end
	 
	% checkProp(pointer, value)
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		tag = pf.getPropTag(prop);
	 
		assert(~ComparisonEnsembleBrainPF_GU.checkProp(prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.checkProp(prop, value) does not work.')
		assert(~pf.checkProp(prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.checkProp(prop, value) does not work.')
		assert(~Element.checkProp(pf, prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(pf, prop, value) does not work.')
		assert(~Element.checkProp('ComparisonEnsembleBrainPF_GU', prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''ComparisonEnsembleBrainPF_GU'', prop, value) does not work.')
	 
		assert_with_error('ComparisonEnsembleBrainPF_GU.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], prop)
		assert_with_error('varargin{2}.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], prop, pf)
		assert_with_error('Element.checkProp(varargin{2}, varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], prop, pf)
		assert_with_error('Element.checkProp(''ComparisonEnsembleBrainPF_GU'', varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], prop)
	 
		assert(~ComparisonEnsembleBrainPF_GU.checkProp(tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.checkProp(tag, value) does not work.')
		assert(~pf.checkProp(tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.checkProp(tag, value) does not work.')
		assert(~Element.checkProp(pf, tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(pf, tag, value) does not work.')
		assert(~Element.checkProp('ComparisonEnsembleBrainPF_GU', tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''ComparisonEnsembleBrainPF_GU'', tag, value) does not work.')
	 
		assert_with_error('ComparisonEnsembleBrainPF_GU.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], tag)
		assert_with_error('varargin{2}.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], tag, pf)
		assert_with_error('Element.checkProp(varargin{2}, varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], tag, pf)
		assert_with_error('Element.checkProp(''ComparisonEnsembleBrainPF_GU'', varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.WRONG_INPUT], tag)
	 
		assert(ComparisonEnsembleBrainPF_GU.checkProp(prop, Element.getPropDefaultConditioned(ComparisonEnsembleBrainPF_GU, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.checkProp(prop, <conditioned default value>) does not work.')
		assert(pf.checkProp(prop, Element.getPropDefaultConditioned(ComparisonEnsembleBrainPF_GU, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.checkProp(prop, <conditioned default value>) does not work.')
		assert(Element.checkProp(pf, prop, Element.getPropDefaultConditioned(ComparisonEnsembleBrainPF_GU, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(pf, prop, <conditioned default value>) does not work.')
		assert(Element.checkProp('ComparisonEnsembleBrainPF_GU', prop, Element.getPropDefaultConditioned(ComparisonEnsembleBrainPF_GU, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''ComparisonEnsembleBrainPF_GU'', prop, <conditioned default value>) does not work.')
	 
		assert(ComparisonEnsembleBrainPF_GU.checkProp(tag, Element.getPropDefaultConditioned(ComparisonEnsembleBrainPF_GU, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.checkProp(tag, <conditioned default value>) does not work.')
		assert(pf.checkProp(tag, Element.getPropDefaultConditioned(ComparisonEnsembleBrainPF_GU, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'pf.checkProp(tag, <conditioned default value>) does not work.')
		assert(Element.checkProp(pf, tag, Element.getPropDefaultConditioned(ComparisonEnsembleBrainPF_GU, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(pf, tag, <conditioned default value>) does not work.')
		assert(Element.checkProp('ComparisonEnsembleBrainPF_GU', tag, Element.getPropDefaultConditioned(ComparisonEnsembleBrainPF_GU, prop)), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''ComparisonEnsembleBrainPF_GU'', tag, <conditioned default value>) does not work.')
	 
	end
	 
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 2: Instantiation - defaults
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	pf = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.TEMPLATE), ...
		ComparisonEnsembleBrainPF_GU.ID, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID), ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.WAITBAR), ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.PARENT), ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BKGCOLOR), ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_POSITION), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.VIEW), ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AXIS), ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURFFILE), ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BRAIN), ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_SURFACE), ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AMBIENT), ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPHS), ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPH_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYMS), ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYM_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.IDS), ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABS), ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LAB_DICT), ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NODES) ...
		);
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
	 
		% excluded props
		if any(prop == [ComparisonEnsembleBrainPF_GU.PARENT ComparisonEnsembleBrainPF_GU.H ComparisonEnsembleBrainPF_GU.ST_POSITION ComparisonEnsembleBrainPF_GU.ST_AXIS ComparisonEnsembleBrainPF_GU.ST_SURFACE ComparisonEnsembleBrainPF_GU.ST_AMBIENT])
			continue
		end
	 
		TAG = upper(ComparisonEnsembleBrainPF_GU.getPropTag(prop));
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case {Category.CONSTANT, Category.RESULT, Category.QUERY}
				% getr
				assert( ...
					pf.getr(prop) == ComparisonEnsembleBrainPF_GU.getNoValue(), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['Being a ' ComparisonEnsembleBrainPF_GU.getCategoryName(ComparisonEnsembleBrainPF_GU.getPropCategory(prop)) ', ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					pf.getr(TAG) == ComparisonEnsembleBrainPF_GU.getNoValue(), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['Being a ' ComparisonEnsembleBrainPF_GU.getCategoryName(ComparisonEnsembleBrainPF_GU.getPropCategory(prop)) ', ComparisonEnsembleBrainPF_GU.getr(' TAG ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in ComparisonEnsembleBrainPF_GU.getr(' TAG ').'] ...
					)
				% get
				assert( ...
					~isa(pf.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				if isempty(pf.getPropSettings(prop))
					assert( ...
						pf.checkFormat(pf.getPropFormat(prop), pf.get(prop)), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				else
					assert( ...
						pf.checkFormat(pf.getPropFormat(prop), pf.get(prop), pf.getPropSettings(prop)), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				end
			case Category.EVANESCENT
				% getr
				assert( ...
					pf.getr(prop) == ComparisonEnsembleBrainPF_GU.getNoValue(), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['Being a ' ComparisonEnsembleBrainPF_GU.getCategoryName(ComparisonEnsembleBrainPF_GU.getPropCategory(prop)) ', ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					pf.getr(TAG) == ComparisonEnsembleBrainPF_GU.getNoValue(), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['Being a ' ComparisonEnsembleBrainPF_GU.getCategoryName(ComparisonEnsembleBrainPF_GU.getPropCategory(prop)) ', ComparisonEnsembleBrainPF_GU.getr(' TAG ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in ComparisonEnsembleBrainPF_GU.getr(' TAG ').'] ...
					)
				% get
				warning_backup = warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU']);
				assert( ...
					~isa(pf.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				if isempty(pf.getPropSettings(prop))
					assert( ...
						pf.checkFormat(pf.getPropFormat(prop), pf.get(prop)), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				else
					assert( ...
						pf.checkFormat(pf.getPropFormat(prop), pf.get(prop), pf.getPropSettings(prop)), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				end
				warning(warning_backup)
			otherwise % case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isequal(pf.getr(prop), ComparisonEnsembleBrainPF_GU.getPropDefaultConditioned(prop)), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must be inizialized to its default value ' ...
					'given by ComparisonEnsembleBrainPF_GU.getPropDefaultConditioned(' int2str(prop) '). ' ...
					'Or there could be an error in ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					isequal(pf.getr(TAG), ComparisonEnsembleBrainPF_GU.getPropDefaultConditioned(prop)), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' TAG ') must be inizialized to its default value ' ...
					'given by ComparisonEnsembleBrainPF_GU.getPropDefaultConditioned(' int2str(prop) '). ' ...
					'Or there could be an error in ComparisonEnsembleBrainPF_GU.getr(' TAG ').'] ...
					)
		end
	end
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 3: Memorize
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	pf = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.TEMPLATE), ...
		ComparisonEnsembleBrainPF_GU.ID, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID), ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.WAITBAR), ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.PARENT), ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BKGCOLOR), ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_POSITION), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.VIEW), ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AXIS), ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURFFILE), ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BRAIN), ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_SURFACE), ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AMBIENT), ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPHS), ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPH_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYMS), ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYM_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.IDS), ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABS), ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LAB_DICT), ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NODES) ...
		);
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
	 
		% excluded props
		if any(prop == [ComparisonEnsembleBrainPF_GU.PARENT ComparisonEnsembleBrainPF_GU.H ComparisonEnsembleBrainPF_GU.ST_POSITION ComparisonEnsembleBrainPF_GU.ST_AXIS ComparisonEnsembleBrainPF_GU.ST_SURFACE ComparisonEnsembleBrainPF_GU.ST_AMBIENT])
			continue
		end
	 
		TAG = upper(ComparisonEnsembleBrainPF_GU.getPropTag(prop));
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case Category.RESULT
				assert( ...
					~isa(pf.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					isa(pf.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
				assert( ...
					~isa(pf.memorize(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					~isa(pf.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
					)
				assert( ...
					pf.checkFormat(pf.getPropFormat(prop), pf.getr(prop),pf.getPropSettings(prop)), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			case Category.QUERY
	% 			warning_backup = warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU']);
				assert( ...
					~isa(pf.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					isa(pf.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
	% following tests excluded because properties QUERY should not be memorized
	% 			warning_backup = warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU']);
	% 			assert( ...
	% 				~isa(pf.memorize(prop), 'NoValue'), ...
	% 				[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
	% 				['ComparisonEnsembleBrainPF_GU.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
	% 				)
	% 			warning(warning_backup)
	% 			assert( ...
	% 				~isa(pf.getr(prop), 'NoValue'), ...
	% 				[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
	% 				['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
	% 				)
	% 			assert( ...
	% 				pf.checkFormat(pf.getPropFormat(prop), pf.getr(prop),pf.getPropSettings(prop)), ...
	% 				[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
	% 				['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
	% 				)
	% 			warning(warning_backup)
			case Category.EVANESCENT
				warning_backup = warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU']);
				assert( ...
					~isa(pf.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				warning(warning_backup)
				assert( ...
					isa(pf.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
				assert( ...
					~isa(pf.memorize(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					~isa(pf.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
					)
				assert( ...
					pf.checkFormat(pf.getPropFormat(prop), pf.getr(prop),pf.getPropSettings(prop)), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
				if pf.getPropFormat(prop) == Format.HANDLE
					warning_backup = warning('off', 'BRAPH2:ComparisonEnsembleBrainPF_GU');
					delete(ancestor(pf.get(prop), 'figure'))
					warning(warning_backup)
				end
		end
	end
	 
	if ~isempty(ComparisonEnsembleBrainPF_GU.getProps(Category.RESULT))
		for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
	 
			% excluded props
			if any(prop == [ComparisonEnsembleBrainPF_GU.PARENT ComparisonEnsembleBrainPF_GU.H ComparisonEnsembleBrainPF_GU.ST_POSITION ComparisonEnsembleBrainPF_GU.ST_AXIS ComparisonEnsembleBrainPF_GU.ST_SURFACE ComparisonEnsembleBrainPF_GU.ST_AMBIENT])
				continue
			end
	 
			switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
				case {Category.PARAMETER, Category.DATA}
					assert( ...
						pf.isLocked(prop), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						['ComparisonEnsembleBrainPF_GU.isLocked(' int2str(prop) ') must be locked because a result has been calculated.'] ...
						)
				otherwise
					assert( ...
						~pf.isLocked(prop), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						['ComparisonEnsembleBrainPF_GU.isLocked(' int2str(prop) ') must NOT be locked even though a result has been calculated.'] ...
						)
			end
		end
	end
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 4: Lock 1
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	pf = ComparisonEnsembleBrainPF_GU();
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		TAG = upper(ComparisonEnsembleBrainPF_GU.getPropTag(prop));
		assert( ...
			~pf.isLocked(prop), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			['ComparisonEnsembleBrainPF_GU.isLocked(' int2str(prop) ') must NOT be locked when it is instantiated.'] ...
			)
		assert( ...
			~pf.isLocked(TAG), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			['ComparisonEnsembleBrainPF_GU.isLocked(' TAG ') must NOT be locked when it is instantiated.'] ...
			)
	end
	 
	pf.lock()
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA}
				assert( ...
					pf.isLocked(prop), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.isLocked(' int2str(prop) ') must be locked because the element is now locked.'] ...
					)
			case {Category.CONSTANT, Category.METADATA, Category.RESULT, Category.QUERY, Category.EVANESCENT, Category.FIGURE, Category.GUI}
				assert( ...
					~pf.isLocked(prop), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.isLocked(' int2str(prop) ') must NOT be locked even though the element is now locked.'] ...
					)
		end
	end
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 5: Lock 2
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	pf = ComparisonEnsembleBrainPF_GU();
	 
	warning_backup = warning('off', 'BRAPH2:ComparisonEnsembleBrainPF_GU');
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		pf.lock(prop)
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					pf.isLocked(prop), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.isLocked(' int2str(prop) ') must be locked.'] ...
					)
			case {Category.CONSTANT, Category.METADATA, Category.RESULT, Category.QUERY, Category.EVANESCENT}
				assert( ...
					~pf.isLocked(prop), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.isLocked(' int2str(prop) ') must NOT be locked even though locking has been attempted.'] ...
					)
		end
	end
	warning(warning_backup)
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 6: Check
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	pf = ComparisonEnsembleBrainPF_GU();
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		TAG = upper(ComparisonEnsembleBrainPF_GU.getPropTag(prop));
		assert( ...
			pf.isChecked(prop), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			['ComparisonEnsembleBrainPF_GU.isChecked(' int2str(prop) ') must be checked when it is instantiated.'] ...
			)
		assert( ...
			pf.isChecked(TAG), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			['ComparisonEnsembleBrainPF_GU.isChecked(' TAG ') must be checked when it is instantiated.'] ...
			)
	end
	 
	pf.unchecked()
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		assert( ...
			~pf.isChecked(prop), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			['ComparisonEnsembleBrainPF_GU.isChecked(' int2str(prop) ') must NOT be checked because it has been set to unchecked.'] ...
			)
	end
	 
	pf.checked()
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		assert( ...
			pf.isChecked(prop), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			['ComparisonEnsembleBrainPF_GU.isChecked(' int2str(prop) ') must be checked because it has been set to checked.'] ...
			)
	end
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 7: Callbacks
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	% basic ComparisonEnsembleBrainPF_GU
	pf_0 = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.TEMPLATE), ...
		ComparisonEnsembleBrainPF_GU.ID, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID), ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.WAITBAR), ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.PARENT), ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BKGCOLOR), ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_POSITION), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.VIEW), ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AXIS), ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURFFILE), ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BRAIN), ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_SURFACE), ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AMBIENT), ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPHS), ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPH_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYMS), ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYM_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.IDS), ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABS), ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LAB_DICT), ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NODES) ...
		);
	 
	% ComparisonEnsembleBrainPF_GU with 1st callbacks
	pf_1 = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, pf_0.getCallback(4), ..., ...
		ComparisonEnsembleBrainPF_GU.ID, pf_0.getCallback(5), ..., ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, pf_0.getCallback(9), ..., ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, pf_0.getCallback(13), ..., ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, pf_0.getCallback(14), ..., ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, pf_0.getCallback(20), ..., ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, pf_0.getCallback(24), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, pf_0.getCallback(25), ..., ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, pf_0.getCallback(27), ..., ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, pf_0.getCallback(30), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, pf_0.getCallback(31), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, pf_0.getCallback(32), ..., ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, pf_0.getCallback(35), ..., ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, pf_0.getCallback(36), ..., ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, pf_0.getCallback(38), ..., ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, pf_0.getCallback(39), ..., ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, pf_0.getCallback(41), ..., ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, pf_0.getCallback(42), ..., ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, pf_0.getCallback(44), ..., ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, pf_0.getCallback(45), ..., ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, pf_0.getCallback(48) ... ...
		);
	 
	prop_number = ComparisonEnsembleBrainPF_GU.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(ComparisonEnsembleBrainPF_GU.getPropTag(prop));
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(pf_1.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(pf_1.get(prop), pf_0.get(prop)) && ~isa(pf_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(pf_1.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
	% ComparisonEnsembleBrainPF_GU with 2nd callbacks
	pf_2 = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, pf_1.getCallback(4), ..., ...
		ComparisonEnsembleBrainPF_GU.ID, pf_1.getCallback(5), ..., ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, pf_1.getCallback(9), ..., ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, pf_1.getCallback(13), ..., ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, pf_1.getCallback(14), ..., ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, pf_1.getCallback(20), ..., ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, pf_1.getCallback(24), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, pf_1.getCallback(25), ..., ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, pf_1.getCallback(27), ..., ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, pf_1.getCallback(30), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, pf_1.getCallback(31), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, pf_1.getCallback(32), ..., ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, pf_1.getCallback(35), ..., ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, pf_1.getCallback(36), ..., ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, pf_1.getCallback(38), ..., ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, pf_1.getCallback(39), ..., ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, pf_1.getCallback(41), ..., ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, pf_1.getCallback(42), ..., ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, pf_1.getCallback(44), ..., ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, pf_1.getCallback(45), ..., ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, pf_1.getCallback(48) ... ...
		);
	 
	prop_number = ComparisonEnsembleBrainPF_GU.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(ComparisonEnsembleBrainPF_GU.getPropTag(prop));
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(pf_2.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(pf_2.get(prop), pf_0.get(prop)) && ~isa(pf_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(pf_2.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
	% ComparisonEnsembleBrainPF_GU with 3rd callbacks
	pf_3 = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, pf_2.getCallback(4), ..., ...
		ComparisonEnsembleBrainPF_GU.ID, pf_2.getCallback(5), ..., ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, pf_2.getCallback(9), ..., ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, pf_2.getCallback(13), ..., ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, pf_2.getCallback(14), ..., ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, pf_2.getCallback(20), ..., ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, pf_2.getCallback(24), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, pf_2.getCallback(25), ..., ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, pf_2.getCallback(27), ..., ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, pf_2.getCallback(30), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, pf_2.getCallback(31), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, pf_2.getCallback(32), ..., ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, pf_2.getCallback(35), ..., ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, pf_2.getCallback(36), ..., ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, pf_2.getCallback(38), ..., ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, pf_2.getCallback(39), ..., ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, pf_2.getCallback(41), ..., ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, pf_2.getCallback(42), ..., ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, pf_2.getCallback(44), ..., ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, pf_2.getCallback(45), ..., ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, pf_2.getCallback(48) ... ...
		);
	 
	prop_number = ComparisonEnsembleBrainPF_GU.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(ComparisonEnsembleBrainPF_GU.getPropTag(prop));
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(pf_3.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(pf_3.get(prop), pf_0.get(prop)) && ~isa(pf_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(pf_3.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 8: Copy
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	% copy empty element
	pf = ComparisonEnsembleBrainPF_GU();
	 
	pf_copy = pf.copy();
	 
	assert(pf_copy ~= pf, ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.copy() does not work. A copied element must point to a copied element.')
	assert(isequal(pf_copy, pf), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.copy() does not work. A copied element must have the same property values of the original element.')
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		value = pf.getr(prop);
		value_copy = pf_copy.getr(prop);
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case {Category.EVANESCENT}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					'ComparisonEnsembleBrainPF_GU.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
							'ComparisonEnsembleBrainPF_GU.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
							'ComparisonEnsembleBrainPF_GU.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
				assert( ...
					pf_copy.isLocked(prop) == pf.isLocked(prop), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					'ComparisonEnsembleBrainPF_GU.copy() does not work. The locked status of the copied and original elements must be the same.' ...
					)
				assert( ...
					pf_copy.isChecked(prop) == pf.isChecked(prop), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					'ComparisonEnsembleBrainPF_GU.copy() does not work. The checked status of the copied and original elements must be the same.' ...
					)
				assert( ...
					pf_copy.getPropSeed(prop) == pf.getPropSeed(prop), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					'ComparisonEnsembleBrainPF_GU.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
					)
		end
	end
	 
	% copy element with default initialization and memorization
	pf = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.TEMPLATE), ...
		ComparisonEnsembleBrainPF_GU.ID, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID), ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.WAITBAR), ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.PARENT), ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BKGCOLOR), ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_POSITION), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.VIEW), ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AXIS), ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURFFILE), ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BRAIN), ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_SURFACE), ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AMBIENT), ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPHS), ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPH_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYMS), ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYM_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.IDS), ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABS), ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LAB_DICT), ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NODES) ...
		);
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		if ComparisonEnsembleBrainPF_GU.getPropCategory(prop) == Category.QUERY
			% properties QUERY should not be memorized
			% warning_backup = warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU']);
			% pf.memorize(prop);
			% warning(warning_backup)
		elseif ComparisonEnsembleBrainPF_GU.getPropCategory(prop) == Category.EVANESCENT && pf.getPropFormat(prop) == Format.HANDLE
			pf.memorize(prop);
			warning_backup = warning('off', 'BRAPH2:ComparisonEnsembleBrainPF_GU');
			delete(ancestor(pf.get(prop), 'figure'))
			warning(warning_backup)
		else
			pf.memorize(prop);
		end
	end
	 
	% copy element with default initialization
	pf_copy = pf.copy();
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		value = pf.getr(prop);
		value_copy = pf_copy.getr(prop);
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case {Category.EVANESCENT Category.QUERY}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					'ComparisonEnsembleBrainPF_GU.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
							'ComparisonEnsembleBrainPF_GU.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
							'ComparisonEnsembleBrainPF_GU.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
	 
					assert( ...
						pf_copy.isLocked(prop) == pf.isLocked(prop), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The locked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						pf_copy.isChecked(prop) == pf.isChecked(prop), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The checked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						pf_copy.getPropSeed(prop) == pf.getPropSeed(prop), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
						)
		end
	end
	 
	% copy element with callbacks
	pf_0 = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.TEMPLATE), ...
		ComparisonEnsembleBrainPF_GU.ID, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID), ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.WAITBAR), ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.PARENT), ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BKGCOLOR), ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_POSITION), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.VIEW), ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AXIS), ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURFFILE), ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BRAIN), ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_SURFACE), ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AMBIENT), ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPHS), ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPH_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYMS), ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYM_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.IDS), ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABS), ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LAB_DICT), ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NODES) ...
		);
	 
	pf = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, pf_0.getCallback(4), ..., ...
		ComparisonEnsembleBrainPF_GU.ID, pf_0.getCallback(5), ..., ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, pf_0.getCallback(9), ..., ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, pf_0.getCallback(13), ..., ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, pf_0.getCallback(14), ..., ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, pf_0.getCallback(20), ..., ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, pf_0.getCallback(24), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, pf_0.getCallback(25), ..., ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, pf_0.getCallback(27), ..., ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, pf_0.getCallback(30), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, pf_0.getCallback(31), ..., ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, pf_0.getCallback(32), ..., ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, pf_0.getCallback(35), ..., ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, pf_0.getCallback(36), ..., ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, pf_0.getCallback(38), ..., ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, pf_0.getCallback(39), ..., ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, pf_0.getCallback(41), ..., ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, pf_0.getCallback(42), ..., ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, pf_0.getCallback(44), ..., ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, pf_0.getCallback(45), ..., ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, pf_0.getCallback(48) ... ...
		);
	 
	pf_copy = pf.copy();
	pf_0_copy = pf_copy.getr('ID').get('EL');
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
		value = pf.getr(prop);
		value_copy = pf_copy.getr(prop);
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case {Category.EVANESCENT}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					'ComparisonEnsembleBrainPF_GU.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
							'ComparisonEnsembleBrainPF_GU.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
							'ComparisonEnsembleBrainPF_GU.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
				if isa(value, 'Callback')
					assert( ...
						value == pf_0.getCallback(prop), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The callback should be obtained from ComparisonEnsembleBrainPF_GU.getCallback().' ...
						)
					assert( ...
						value_copy == pf_0_copy.getCallback(prop), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The callback should be obtained from ComparisonEnsembleBrainPF_GU.getCallback().' ...
						)
				end
	 
					assert( ...
						pf_copy.isLocked(prop) == pf.isLocked(prop), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The locked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						pf_copy.isChecked(prop) == pf.isChecked(prop), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The checked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						pf_copy.getPropSeed(prop) == pf.getPropSeed(prop), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
						)
		end
	end
	 
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 9: Template
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	pf_template = ComparisonEnsembleBrainPF_GU();
	pf = ComparisonEnsembleBrainPF_GU('TEMPLATE', pf_template);
	 
	for prop = 1:1:ComparisonEnsembleBrainPF_GU.getPropNumber()
	 
		% excluded props
		if any(prop == [ComparisonEnsembleBrainPF_GU.PARENT ComparisonEnsembleBrainPF_GU.H ComparisonEnsembleBrainPF_GU.ST_POSITION ComparisonEnsembleBrainPF_GU.ST_AXIS ComparisonEnsembleBrainPF_GU.ST_SURFACE ComparisonEnsembleBrainPF_GU.ST_AMBIENT])
			continue
		end
	 
		TAG = upper(ComparisonEnsembleBrainPF_GU.getPropTag(prop));
		switch ComparisonEnsembleBrainPF_GU.getPropCategory(prop)
			case {Category.PARAMETER}
				if prop == ComparisonEnsembleBrainPF_GU.TEMPLATE
					assert( ...
						isa(pf.getr(prop), 'ComparisonEnsembleBrainPF_GU'), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU TEMPLATE does not work. ComparisonEnsembleBrainPF_GU.getr(''TEMPLATE'') should be a ComparisonEnsembleBrainPF_GU element.' ...
						)
					assert( ...
						isa(pf_template.getr(prop), 'NoValue'), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						'ComparisonEnsembleBrainPF_GU TEMPLATE does not work. ComparisonEnsembleBrainPF_GU_template.getr(''TEMPLATE'') should be a NoValue.' ...
						)
				else
					assert( ...
						isa(pf.getr(prop), 'Callback'), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						['ComparisonEnsembleBrainPF_GU TEMPLATE does not work. ComparisonEnsembleBrainPF_GU.getr(' TAG ') should be a Callback.'] ...
						)
					assert( ...
						pf.getr(prop).get('EL') == pf_template && pf.getr(prop).get('PROP') == prop && strcmp(pf.getr(prop).get('TAG'), TAG), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						['ComparisonEnsembleBrainPF_GU TEMPLATE does not work. ComparisonEnsembleBrainPF_GU.getr(' TAG ') should be a Callback to pf_template.' TAG '.'] ...
						)
					assert( ...
						isa(pf_template.getr(prop), 'NoValue'), ...
						[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
						['ComparisonEnsembleBrainPF_GU TEMPLATE does not work. ComparisonEnsembleBrainPF_GU_template.getr(' TAG ') should be a NoValue.'] ...
						)
				end
			otherwise
				assert( ...
					isa(pf.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU TEMPLATE does not work. ComparisonEnsembleBrainPF_GU.getr(' TAG ') should be a NoValue.'] ...
					)
				assert( ...
					isa(pf_template.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
					['ComparisonEnsembleBrainPF_GU TEMPLATE does not work. ComparisonEnsembleBrainPF_GU_template.getr(' TAG ') should be a NoValue.'] ...
					)
		end
	end
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 10: Save Load
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	pf = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.TEMPLATE), ...
		ComparisonEnsembleBrainPF_GU.ID, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID), ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.WAITBAR), ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.PARENT), ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BKGCOLOR), ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_POSITION), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.VIEW), ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AXIS), ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURFFILE), ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BRAIN), ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_SURFACE), ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AMBIENT), ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPHS), ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPH_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYMS), ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYM_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.IDS), ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABS), ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LAB_DICT), ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NODES) ...
		);
	 
	filename = [fileparts(which('test_braph2')) filesep 'comparisonensemblebrainpf_gu_to_be_erased.b2'];
	 
	Element.save(pf, filename)
	 
	pf_loaded = Element.load(filename);
	 
	assert( ...
		isequal(pf.copy(), pf_loaded), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.save(pf) and/or ComparisonEnsembleBrainPF_GU.load() do not work.' ...
		)
	 
	delete(filename)
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 11: JSON
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	pf = ComparisonEnsembleBrainPF_GU( ...
		ComparisonEnsembleBrainPF_GU.ELCLASS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NAME, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DESCRIPTION, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.TEMPLATE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.TEMPLATE), ...
		ComparisonEnsembleBrainPF_GU.ID, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID), ...
		ComparisonEnsembleBrainPF_GU.LABEL, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABEL), ...
		ComparisonEnsembleBrainPF_GU.NOTES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NOTES), ...
		ComparisonEnsembleBrainPF_GU.TOSTRING, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.WAITBAR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.WAITBAR), ...
		ComparisonEnsembleBrainPF_GU.H_WAITBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DRAWN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.PARENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.PARENT), ...
		ComparisonEnsembleBrainPF_GU.BKGCOLOR, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BKGCOLOR), ...
		ComparisonEnsembleBrainPF_GU.H, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SHOW, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.HIDE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.DELETE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.CLOSE, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.ST_POSITION, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_POSITION), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLBAR, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_TOOLS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.H_AXES, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.VIEW, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.VIEW), ...
		ComparisonEnsembleBrainPF_GU.ST_AXIS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AXIS), ...
		ComparisonEnsembleBrainPF_GU.LISTENER_ST_AXIS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SURFFILE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURFFILE), ...
		ComparisonEnsembleBrainPF_GU.SURF, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SURF), ...
		ComparisonEnsembleBrainPF_GU.H_BRAIN, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.BRAIN, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BRAIN), ...
		ComparisonEnsembleBrainPF_GU.ST_SURFACE, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_SURFACE), ...
		ComparisonEnsembleBrainPF_GU.ST_AMBIENT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ST_AMBIENT), ...
		ComparisonEnsembleBrainPF_GU.BA, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.BA), ...
		ComparisonEnsembleBrainPF_GU.H_SPHS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SPHS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPHS), ...
		ComparisonEnsembleBrainPF_GU.SPH_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SPH_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_SYMS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.SYMS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYMS), ...
		ComparisonEnsembleBrainPF_GU.SYM_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.SYM_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_IDS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.IDS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.IDS), ...
		ComparisonEnsembleBrainPF_GU.ID_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.ID_DICT), ...
		ComparisonEnsembleBrainPF_GU.H_LABS, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.LABS, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LABS), ...
		ComparisonEnsembleBrainPF_GU.LAB_DICT, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.LAB_DICT), ...
		ComparisonEnsembleBrainPF_GU.CP, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.CP), ...
		ComparisonEnsembleBrainPF_GU.SETUP, ComparisonEnsembleBrainPF_GU.getNoValue(), ...
		ComparisonEnsembleBrainPF_GU.NODES, ComparisonEnsembleBrainPF_GU.getPropDefault(ComparisonEnsembleBrainPF_GU.NODES) ...
		);
	 
	[json, struct, el_list] = encodeJSON(pf);
	[pf_dec, struct_dec, el_list_dec] = Element.decodeJSON(json);
	 
	assert(pf_dec ~= pf, ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		'ComparisonEnsembleBrainPF_GU.encodeJSON() or ComparisonEnsembleBrainPF_GU.decodeJSON() does not work. A JSON encoded/decoded element must point to an element other than the original one.' ...
		)
	if all(cellfun(@(prop) ComparisonEnsembleBrainPF_GU.getPropFormat(prop), num2cell(ComparisonEnsembleBrainPF_GU.getProps())) == Format.HANDLE) && all(cellfun(@(prop) ComparisonEnsembleBrainPF_GU.getPropFormat(prop), num2cell(ComparisonEnsembleBrainPF_GU.getProps())) == Format.NET)
		assert(isequal(pf_dec, pf), ...
			[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
			'ComparisonEnsembleBrainPF_GU.encodeJSON() or ComparisonEnsembleBrainPF_GU.decodeJSON() does not work. A JSON encoded/decoded element must have the same property values of the original element.' ...
			)
	end
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 12: Remove Figures
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	assert(length(findall(0, 'type', 'figure')) == 5)
	delete(findall(0, 'type', 'figure'))
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 13: No Figures Left
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	assert(isempty(findall(0, 'type', 'figure')), ...
		[BRAPH2.STR ':ComparisonEnsembleBrainPF_GU:' BRAPH2.FAIL_TEST], ...
		[' When testing ComparisonEnsembleBrainPF_GU no figures should be left over, either visible or not. ' ...
		int2str(length(findall(0, 'type', 'figure'))) ' figure(s) were left over.'] ...
		)
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

%% Test 14: Delete Figures
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	warning('off', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
	
	delete(findall(0, 'type', 'figure'))
	
	warning('on', [BRAPH2.STR ':ComparisonEnsembleBrainPF_GU'])
end

