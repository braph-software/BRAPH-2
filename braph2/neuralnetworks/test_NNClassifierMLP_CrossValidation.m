%TEST_NNCLASSIFIERMLP_CROSSVALIDATION

%% Test 1: Inspection Methods
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	categories = num2cell(Category.getCategories());
	nncv = NNClassifierMLP_CrossValidation();
	 
	% get('ELCLASS')
	if isa(NNClassifierMLP_CrossValidation, 'ConcreteElement')
		assert(strcmp(NNClassifierMLP_CrossValidation().get('ELCLASS'), 'NNClassifierMLP_CrossValidation'), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation().get(''ELCLASS'') should return ''NNClassifierMLP_CrossValidation''.')
	end
	 
	% getBuild()
	assert(NNClassifierMLP_CrossValidation.getBuild() == 1 && NNClassifierMLP_CrossValidation.getBuild() > 0, ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.getBuild() should return the NNClassifierMLP_CrossValidation build number.')
	assert(nncv.getBuild() == 1 && nncv.getBuild() > 0 , ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getBuild() should return the NNClassifierMLP_CrossValidation build number.')
	assert(Element.getBuild(nncv) == 1 && Element.getBuild(nncv) > 0, ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getBuild(nncv) should return the NNClassifierMLP_CrossValidation build number.')
	assert(Element.getBuild('NNClassifierMLP_CrossValidation') == 1 && Element.getBuild('NNClassifierMLP_CrossValidation') > 0, ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getBuild(''NNClassifierMLP_CrossValidation'') should return the NNClassifierMLP_CrossValidation build number.')
	 
	% getClass()
	assert(strcmp(NNClassifierMLP_CrossValidation.getClass(), 'NNClassifierMLP_CrossValidation'), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.getClass() should return ''NNClassifierMLP_CrossValidation''.')
	assert(strcmp(nncv.getClass(), 'NNClassifierMLP_CrossValidation'), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getClass() should return ''NNClassifierMLP_CrossValidation''.')
	assert(strcmp(Element.getClass(nncv), 'NNClassifierMLP_CrossValidation'), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getClass(nncv) should return ''NNClassifierMLP_CrossValidation''.')
	assert(strcmp(Element.getClass('NNClassifierMLP_CrossValidation'), 'NNClassifierMLP_CrossValidation'), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getClass(''NNClassifierMLP_CrossValidation'') should return ''NNClassifierMLP_CrossValidation''.')
	 
	% getSubclasses()
	assert(isequal(NNClassifierMLP_CrossValidation.getSubclasses(), subclasses('NNClassifierMLP_CrossValidation', [], [], true)), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.getSubclasses() should return the same result as subclasses(''NNClassifierMLP_CrossValidation'', [], [], true).')
	assert(isequal(nncv.getSubclasses(), subclasses('NNClassifierMLP_CrossValidation', [], [], true)), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'el.getSubclasses() should return the same result as subclasses(''NNClassifierMLP_CrossValidation'', [], [], true).')
	assert(isequal(Element.getSubclasses(nncv), subclasses('NNClassifierMLP_CrossValidation', [], [], true)), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getSubclasses(nncv) should return the same result as subclasses(''NNClassifierMLP_CrossValidation'', [], [], true).')
	assert(isequal(Element.getSubclasses('NNClassifierMLP_CrossValidation'), subclasses('NNClassifierMLP_CrossValidation', [], [], true)), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getSubclasses(''NNClassifierMLP_CrossValidation'') should return the same result as subclasses(''NNClassifierMLP_CrossValidation'', [], [], true).')
	 
	% getProps()
	assert(isempty(NNClassifierMLP_CrossValidation.getProps()) || isequal(NNClassifierMLP_CrossValidation.getProps(), 1:1:length(NNClassifierMLP_CrossValidation.getProps())), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.getProps() should return a row vector [1:1:N].')
	assert(isempty(NNClassifierMLP_CrossValidation.getProps()) || isequal(nncv.getProps(), 1:1:length(NNClassifierMLP_CrossValidation.getProps())), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getProps() should return a row vector [1:1:N].')
	assert(isempty(NNClassifierMLP_CrossValidation.getProps()) || isequal(Element.getProps(nncv), 1:1:length(NNClassifierMLP_CrossValidation.getProps())), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(nncv) should return a row vector [1:1:N].')
	assert(isempty(NNClassifierMLP_CrossValidation.getProps()) || isequal(Element.getProps('NNClassifierMLP_CrossValidation'), 1:1:length(NNClassifierMLP_CrossValidation.getProps())), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(''NNClassifierMLP_CrossValidation'') should return a row vector [1:1:N].')
	 
	% getProps(category)
	tmp = cellfun(@(category) NNClassifierMLP_CrossValidation.getProps(category), categories, 'UniformOutput', false);
	assert(isempty(NNClassifierMLP_CrossValidation.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(NNClassifierMLP_CrossValidation.getProps())), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.getProps(category) does not work.')
	tmp = cellfun(@(category) nncv.getProps(category), categories, 'UniformOutput', false);
	assert(isempty(NNClassifierMLP_CrossValidation.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(NNClassifierMLP_CrossValidation.getProps())), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getProps(category) does not work.')
	tmp = cellfun(@(category) Element.getProps(nncv, category), categories, 'UniformOutput', false);
	assert(isempty(NNClassifierMLP_CrossValidation.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(NNClassifierMLP_CrossValidation.getProps())), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(nncv, category) does not work.')
	tmp = cellfun(@(category) Element.getProps('NNClassifierMLP_CrossValidation', category), categories, 'UniformOutput', false);
	assert(isempty(NNClassifierMLP_CrossValidation.getProps()) || isequal(sort(horzcat(tmp{:})), 1:1:length(NNClassifierMLP_CrossValidation.getProps())), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getProps(''NNClassifierMLP_CrossValidation'', category) does not work.')
	 
	% getPropNumber()
	assert(NNClassifierMLP_CrossValidation.getPropNumber() == length(NNClassifierMLP_CrossValidation.getProps()), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.getPropNumber() should return the number of properties.')
	assert(nncv.getPropNumber() == length(NNClassifierMLP_CrossValidation.getProps()), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getPropNumber() should return the number of properties.')
	assert(Element.getPropNumber(nncv) == length(NNClassifierMLP_CrossValidation.getProps()), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(nncv) should return the number of properties.')
	assert(Element.getPropNumber('NNClassifierMLP_CrossValidation') == length(NNClassifierMLP_CrossValidation.getProps()), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(''NNClassifierMLP_CrossValidation'') should return the number of properties.')
	 
	% getPropNumber(category)
	assert(sum(cellfun(@(category) NNClassifierMLP_CrossValidation.getPropNumber(category), categories)) == NNClassifierMLP_CrossValidation.getPropNumber(), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.getPropNumber(category) does not work.')
	assert(sum(cellfun(@(category) nncv.getPropNumber(category), categories)) == NNClassifierMLP_CrossValidation.getPropNumber(), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.getPropNumber(category) does not work.')
	assert(sum(cellfun(@(category) Element.getPropNumber(nncv, category), categories)) == NNClassifierMLP_CrossValidation.getPropNumber(), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(nncv, category) does not work.')
	assert(sum(cellfun(@(category) Element.getPropNumber('NNClassifierMLP_CrossValidation', category), categories)) == NNClassifierMLP_CrossValidation.getPropNumber(), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.getPropNumber(''NNClassifierMLP_CrossValidation'', category) does not work.')
	 
	% existsProp(prop)
	assert(~NNClassifierMLP_CrossValidation.existsProp(NaN), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.existsProp(prop) does not work.')
	assert(~nncv.existsProp(NaN), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.existsProp(prop) does not work.')
	assert(~Element.existsProp(nncv, NaN), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.existsProp(nncv, prop) does not work.')
	assert(~Element.existsProp('NNClassifierMLP_CrossValidation', NaN), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.existsProp(''NNClassifierMLP_CrossValidation'', prop) does not work.')
	 
	assert_with_error('NNClassifierMLP_CrossValidation.existsProp(NaN)', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT])
	assert_with_error('varargin{1}.existsProp(NaN)', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], nncv)
	assert_with_error('Element.existsProp(varargin{1}, NaN)', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], nncv)
	assert_with_error('Element.existsProp(''NNClassifierMLP_CrossValidation'', NaN)', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT])
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		assert(NNClassifierMLP_CrossValidation.existsProp(prop), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.existsProp(prop) does not work.')
		assert(nncv.existsProp(prop), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.existsProp(prop) does not work.')
		assert(Element.existsProp(nncv, prop), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.existsProp(nncv, prop) does not work.')
		assert(Element.existsProp('NNClassifierMLP_CrossValidation', prop), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.existsProp(''NNClassifierMLP_CrossValidation'', prop) does not work.')
	end
	 
	% existsTag(tag)
	assert(~NNClassifierMLP_CrossValidation.existsTag(''), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.existsTag(tag) does not work.')
	assert(~nncv.existsTag(''), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'nncv.existsTag(tag) does not work.')
	assert(~Element.existsTag(nncv, ''), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.existsTag(nncv, tag) does not work.')
	assert(~Element.existsTag('NNClassifierMLP_CrossValidation', ''), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'Element.existsTag(''NNClassifierMLP_CrossValidation'', tag) does not work.')
	 
	assert_with_error('NNClassifierMLP_CrossValidation.existsTag('''')', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT])
	assert_with_error('varargin{1}.existsTag('''')', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], nncv)
	assert_with_error('Element.existsTag(varargin{1}, '''')', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], nncv)
	assert_with_error('Element.existsTag(''NNClassifierMLP_CrossValidation'', '''')', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT])
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
		assert(NNClassifierMLP_CrossValidation.existsTag(tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.existsTag(tag) does not work.')
		assert(nncv.existsTag(tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.existsTag(tag) does not work.')
		assert(Element.existsTag(nncv, tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.existsTag(nncv, tga) does not work.')
		assert(Element.existsTag('NNClassifierMLP_CrossValidation', tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.existsTag(''NNClassifierMLP_CrossValidation'', tag) does not work.')
	end
	 
	% getPropProp(pointer)
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		assert(NNClassifierMLP_CrossValidation.getPropProp(prop) == prop, ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.getPropProp(prop) does not work.')
		assert(nncv.getPropProp(prop) == prop, ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropProp(prop) does not work.')
		assert(Element.getPropProp(nncv, prop) == prop, ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(nncv, prop) does not work.')
		assert(Element.getPropProp('NNClassifierMLP_CrossValidation', prop) == prop, ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(''NNClassifierMLP_CrossValidation'', prop) does not work.')
	 
		tag = nncv.getPropTag(prop);
		assert(NNClassifierMLP_CrossValidation.getPropProp(tag) == prop, ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.getPropProp(tag) does not work.')
		assert(nncv.getPropProp(tag) == prop, ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropProp(tag) does not work.')
		assert(Element.getPropProp(nncv, tag) == prop, ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(nncv, tag) does not work.')
		assert(Element.getPropProp('NNClassifierMLP_CrossValidation', prop) == prop, ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropProp(''NNClassifierMLP_CrossValidation'', tag) does not work.')
	end
	 
	% getPropTag(pointer)
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		assert(strcmp(NNClassifierMLP_CrossValidation.getPropTag(prop), tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.getPropTag(prop) does not work.')
		assert(strcmp(nncv.getPropTag(prop), tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropTag(prop) does not work.')
		assert(strcmp(Element.getPropTag(nncv, prop), tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(nncv, prop) does not work.')
		assert(strcmp(Element.getPropTag('NNClassifierMLP_CrossValidation', prop), tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(''NNClassifierMLP_CrossValidation'', prop) does not work.')
	 
		assert(strcmp(NNClassifierMLP_CrossValidation.getPropTag(tag), tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.getPropTag(tag) does not work.')
		assert(strcmp(nncv.getPropTag(tag), tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropTag(tag) does not work.')
		assert(strcmp(Element.getPropTag(nncv, tag), tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(nncv, tag) does not work.')
		assert(strcmp(Element.getPropTag('NNClassifierMLP_CrossValidation', prop), tag), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropTag(''NNClassifierMLP_CrossValidation'', tag) does not work.')
	end
	 
	% getPropCategory(pointer)
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		assert(Category.existsCategory(NNClassifierMLP_CrossValidation.getPropCategory(prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.getPropCategory(prop) does not work.')
		assert(Category.existsCategory(nncv.getPropCategory(prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropCategory(prop) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(nncv, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(nncv, prop) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(nncv, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(''NNClassifierMLP_CrossValidation'', prop) does not work.')
	 
		assert(Category.existsCategory(NNClassifierMLP_CrossValidation.getPropCategory(tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.getPropCategory(tag) does not work.')
		assert(Category.existsCategory(nncv.getPropCategory(tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropCategory(tag) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(nncv, tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(nncv, tag) does not work.')
		assert(Category.existsCategory(Element.getPropCategory(nncv, tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropCategory(''NNClassifierMLP_CrossValidation'', tag) does not work.')
	end
	 
	% getPropFormat(pointer)
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		assert(Format.existsFormat(NNClassifierMLP_CrossValidation.getPropFormat(prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.getPropFormat(prop) does not work.')
		assert(Format.existsFormat(nncv.getPropFormat(prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropFormat(prop) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(nncv, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(nncv, prop) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(nncv, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(''NNClassifierMLP_CrossValidation'', prop) does not work.')
	 
		assert(Format.existsFormat(NNClassifierMLP_CrossValidation.getPropFormat(tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.getPropFormat(tag) does not work.')
		assert(Format.existsFormat(nncv.getPropFormat(tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropFormat(tag) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(nncv, tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(nncv, tag) does not work.')
		assert(Format.existsFormat(Element.getPropFormat(nncv, tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropFormat(''NNClassifierMLP_CrossValidation'', tag) does not work.')
	end
	 
	% getPropDescription(pointer)
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		assert(ischar(NNClassifierMLP_CrossValidation.getPropDescription(prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.getPropDescription(prop) does not work.')
		assert(ischar(nncv.getPropDescription(prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropDescription(prop) does not work.')
		assert(ischar(Element.getPropDescription(nncv, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(nncv, prop) does not work.')
		assert(ischar(Element.getPropDescription(nncv, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(''NNClassifierMLP_CrossValidation'', prop) does not work.')
	 
		assert(ischar(NNClassifierMLP_CrossValidation.getPropDescription(tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.getPropDescription(tag) does not work.')
		assert(ischar(nncv.getPropDescription(tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.getPropDescription(tag) does not work.')
		assert(ischar(Element.getPropDescription(nncv, tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(nncv, tag) does not work.')
		assert(ischar(Element.getPropDescription(nncv, tag)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.getPropDescription(''NNClassifierMLP_CrossValidation'', tag) does not work.')
	end
	 
	% getPropSettings(pointer)
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		settings = NNClassifierMLP_CrossValidation.getPropSettings(prop);
		settings = nncv.getPropSettings(prop);
		settings = Element.getPropSettings(nncv, prop);
		settings = Element.getPropSettings('NNClassifierMLP_CrossValidation', prop);
	 
		settings = NNClassifierMLP_CrossValidation.getPropSettings(tag);
		settings = nncv.getPropSettings(tag);
		settings = Element.getPropSettings(nncv, tag);
		settings = Element.getPropSettings('NNClassifierMLP_CrossValidation', tag);
	end
	 
	% getPropDefault(pointer)
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		default = NNClassifierMLP_CrossValidation.getPropDefault(prop);
		default = nncv.getPropDefault(prop);
		default = Element.getPropDefault(nncv, prop);
		default = Element.getPropDefault('NNClassifierMLP_CrossValidation', prop);
	 
		default = NNClassifierMLP_CrossValidation.getPropDefault(tag);
		default = nncv.getPropDefault(tag);
		default = Element.getPropDefault(nncv, tag);
		default = Element.getPropDefault('NNClassifierMLP_CrossValidation', tag);
	end
	 
	% getPropDefaultConditioned(pointer)
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		conditioned_default = NNClassifierMLP_CrossValidation.getPropDefaultConditioned(prop);
		conditioned_default = nncv.getPropDefaultConditioned(prop);
		conditioned_default = Element.getPropDefaultConditioned(nncv, prop);
		conditioned_default = Element.getPropDefaultConditioned('NNClassifierMLP_CrossValidation', prop);
	 
		conditioned_default = NNClassifierMLP_CrossValidation.getPropDefaultConditioned(tag);
		conditioned_default = nncv.getPropDefaultConditioned(tag);
		conditioned_default = Element.getPropDefaultConditioned(nncv, tag);
		conditioned_default = Element.getPropDefaultConditioned('NNClassifierMLP_CrossValidation', tag);
	end
	 
	% checkProp(pointer, value)
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		tag = nncv.getPropTag(prop);
	 
		assert(~NNClassifierMLP_CrossValidation.checkProp(prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.checkProp(prop, value) does not work.')
		assert(~nncv.checkProp(prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.checkProp(prop, value) does not work.')
		assert(~Element.checkProp(nncv, prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(nncv, prop, value) does not work.')
		assert(~Element.checkProp('NNClassifierMLP_CrossValidation', prop, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''NNClassifierMLP_CrossValidation'', prop, value) does not work.')
	 
		assert_with_error('NNClassifierMLP_CrossValidation.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], prop)
		assert_with_error('varargin{2}.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], prop, nncv)
		assert_with_error('Element.checkProp(varargin{2}, varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], prop, nncv)
		assert_with_error('Element.checkProp(''NNClassifierMLP_CrossValidation'', varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], prop)
	 
		assert(~NNClassifierMLP_CrossValidation.checkProp(tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.checkProp(tag, value) does not work.')
		assert(~nncv.checkProp(tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.checkProp(tag, value) does not work.')
		assert(~Element.checkProp(nncv, tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(nncv, tag, value) does not work.')
		assert(~Element.checkProp('NNClassifierMLP_CrossValidation', tag, {'probably wrong value', 1}), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''NNClassifierMLP_CrossValidation'', tag, value) does not work.')
	 
		assert_with_error('NNClassifierMLP_CrossValidation.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], tag)
		assert_with_error('varargin{2}.checkProp(varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], tag, nncv)
		assert_with_error('Element.checkProp(varargin{2}, varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], tag, nncv)
		assert_with_error('Element.checkProp(''NNClassifierMLP_CrossValidation'', varargin{1}, {''probably wrong value'', 1})', [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.WRONG_INPUT], tag)
	 
		assert(NNClassifierMLP_CrossValidation.checkProp(prop, Element.getPropDefaultConditioned(NNClassifierMLP_CrossValidation, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.checkProp(prop, <conditioned default value>) does not work.')
		assert(nncv.checkProp(prop, Element.getPropDefaultConditioned(NNClassifierMLP_CrossValidation, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.checkProp(prop, <conditioned default value>) does not work.')
		assert(Element.checkProp(nncv, prop, Element.getPropDefaultConditioned(NNClassifierMLP_CrossValidation, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(nncv, prop, <conditioned default value>) does not work.')
		assert(Element.checkProp('NNClassifierMLP_CrossValidation', prop, Element.getPropDefaultConditioned(NNClassifierMLP_CrossValidation, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''NNClassifierMLP_CrossValidation'', prop, <conditioned default value>) does not work.')
	 
		assert(NNClassifierMLP_CrossValidation.checkProp(tag, Element.getPropDefaultConditioned(NNClassifierMLP_CrossValidation, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.checkProp(tag, <conditioned default value>) does not work.')
		assert(nncv.checkProp(tag, Element.getPropDefaultConditioned(NNClassifierMLP_CrossValidation, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'nncv.checkProp(tag, <conditioned default value>) does not work.')
		assert(Element.checkProp(nncv, tag, Element.getPropDefaultConditioned(NNClassifierMLP_CrossValidation, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(nncv, tag, <conditioned default value>) does not work.')
		assert(Element.checkProp('NNClassifierMLP_CrossValidation', tag, Element.getPropDefaultConditioned(NNClassifierMLP_CrossValidation, prop)), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'Element.checkProp(''NNClassifierMLP_CrossValidation'', tag, <conditioned default value>) does not work.')
	 
	end
	 
end

%% Test 2: Instantiation - defaults
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.TEMPLATE), ...
		NNClassifierMLP_CrossValidation.ID, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.ID), ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.WAITBAR), ...
		NNClassifierMLP_CrossValidation.KFOLDS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.KFOLDS), ...
		NNClassifierMLP_CrossValidation.SPLIT, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SPLIT), ...
		NNClassifierMLP_CrossValidation.D, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.D), ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NN_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.EPOCHS), ...
		NNClassifierMLP_CrossValidation.BATCH, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.BATCH), ...
		NNClassifierMLP_CrossValidation.SHUFFLE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SHUFFLE), ...
		NNClassifierMLP_CrossValidation.SOLVER, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SOLVER), ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PFROC), ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
	 
		% excluded props
		if any(prop == [NNClassifierMLP_CrossValidation.PFROC])
			continue
		end
	 
		TAG = upper(NNClassifierMLP_CrossValidation.getPropTag(prop));
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case {Category.CONSTANT, Category.RESULT, Category.QUERY}
				% getr
				assert( ...
					nncv.getr(prop) == NNClassifierMLP_CrossValidation.getNoValue(), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['Being a ' NNClassifierMLP_CrossValidation.getCategoryName(NNClassifierMLP_CrossValidation.getPropCategory(prop)) ', NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in NNClassifierMLP_CrossValidation.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					nncv.getr(TAG) == NNClassifierMLP_CrossValidation.getNoValue(), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['Being a ' NNClassifierMLP_CrossValidation.getCategoryName(NNClassifierMLP_CrossValidation.getPropCategory(prop)) ', NNClassifierMLP_CrossValidation.getr(' TAG ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in NNClassifierMLP_CrossValidation.getr(' TAG ').'] ...
					)
				% get
				assert( ...
					~isa(nncv.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				if isempty(nncv.getPropSettings(prop))
					assert( ...
						nncv.checkFormat(nncv.getPropFormat(prop), nncv.get(prop)), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				else
					assert( ...
						nncv.checkFormat(nncv.getPropFormat(prop), nncv.get(prop), nncv.getPropSettings(prop)), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				end
			case Category.EVANESCENT
				% getr
				assert( ...
					nncv.getr(prop) == NNClassifierMLP_CrossValidation.getNoValue(), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['Being a ' NNClassifierMLP_CrossValidation.getCategoryName(NNClassifierMLP_CrossValidation.getPropCategory(prop)) ', NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in NNClassifierMLP_CrossValidation.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					nncv.getr(TAG) == NNClassifierMLP_CrossValidation.getNoValue(), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['Being a ' NNClassifierMLP_CrossValidation.getCategoryName(NNClassifierMLP_CrossValidation.getPropCategory(prop)) ', NNClassifierMLP_CrossValidation.getr(' TAG ') must be inizialized to NoValue(). ' ...
					'Or there could be an error in NNClassifierMLP_CrossValidation.getr(' TAG ').'] ...
					)
				% get
				warning_backup = warning('off', [BRAPH2.STR ':NNClassifierMLP_CrossValidation']);
				assert( ...
					~isa(nncv.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				if isempty(nncv.getPropSettings(prop))
					assert( ...
						nncv.checkFormat(nncv.getPropFormat(prop), nncv.get(prop)), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				else
					assert( ...
						nncv.checkFormat(nncv.getPropFormat(prop), nncv.get(prop), nncv.getPropSettings(prop)), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') returns a value with the wrong format.'] ...
						)
				end
				warning(warning_backup)
			otherwise % case {Category.METADATA, Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isequal(nncv.getr(prop), NNClassifierMLP_CrossValidation.getPropDefaultConditioned(prop)), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must be inizialized to its default value ' ...
					'given by NNClassifierMLP_CrossValidation.getPropDefaultConditioned(' int2str(prop) '). ' ...
					'Or there could be an error in NNClassifierMLP_CrossValidation.getr(' int2str(prop) ').'] ...
					)
				assert( ...
					isequal(nncv.getr(TAG), NNClassifierMLP_CrossValidation.getPropDefaultConditioned(prop)), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' TAG ') must be inizialized to its default value ' ...
					'given by NNClassifierMLP_CrossValidation.getPropDefaultConditioned(' int2str(prop) '). ' ...
					'Or there could be an error in NNClassifierMLP_CrossValidation.getr(' TAG ').'] ...
					)
		end
	end
end

%% Test 3: Memorize
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.TEMPLATE), ...
		NNClassifierMLP_CrossValidation.ID, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.ID), ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.WAITBAR), ...
		NNClassifierMLP_CrossValidation.KFOLDS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.KFOLDS), ...
		NNClassifierMLP_CrossValidation.SPLIT, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SPLIT), ...
		NNClassifierMLP_CrossValidation.D, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.D), ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NN_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.EPOCHS), ...
		NNClassifierMLP_CrossValidation.BATCH, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.BATCH), ...
		NNClassifierMLP_CrossValidation.SHUFFLE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SHUFFLE), ...
		NNClassifierMLP_CrossValidation.SOLVER, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SOLVER), ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PFROC), ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
	 
		% excluded props
		if any(prop == [NNClassifierMLP_CrossValidation.PFROC])
			continue
		end
	 
		TAG = upper(NNClassifierMLP_CrossValidation.getPropTag(prop));
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case Category.RESULT
				assert( ...
					~isa(nncv.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
				assert( ...
					~isa(nncv.memorize(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					~isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
					)
				assert( ...
					nncv.checkFormat(nncv.getPropFormat(prop), nncv.getr(prop),nncv.getPropSettings(prop)), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
			case Category.QUERY
	% 			warning_backup = warning('off', [BRAPH2.STR ':NNClassifierMLP_CrossValidation']);
				assert( ...
					~isa(nncv.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
	% following tests excluded because properties QUERY should not be memorized
	% 			warning_backup = warning('off', [BRAPH2.STR ':NNClassifierMLP_CrossValidation']);
	% 			assert( ...
	% 				~isa(nncv.memorize(prop), 'NoValue'), ...
	% 				[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
	% 				['NNClassifierMLP_CrossValidation.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
	% 				)
	% 			warning(warning_backup)
	% 			assert( ...
	% 				~isa(nncv.getr(prop), 'NoValue'), ...
	% 				[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
	% 				['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
	% 				)
	% 			assert( ...
	% 				nncv.checkFormat(nncv.getPropFormat(prop), nncv.getr(prop),nncv.getPropSettings(prop)), ...
	% 				[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
	% 				['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
	% 				)
	% 			warning(warning_backup)
			case Category.EVANESCENT
				warning_backup = warning('off', [BRAPH2.STR ':NNClassifierMLP_CrossValidation']);
				assert( ...
					~isa(nncv.get(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				warning(warning_backup)
				assert( ...
					isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must be a NoValue, because it should NOT have been memorized.'] ...
					)
				assert( ...
					~isa(nncv.memorize(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.memorize(' int2str(prop) ') must NOT be a NoValue, because it should have been calculated.'] ...
					)
				assert( ...
					~isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must NOT be a NoValue, because it should have been memorized.'] ...
					)
				assert( ...
					nncv.checkFormat(nncv.getPropFormat(prop), nncv.getr(prop),nncv.getPropSettings(prop)), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') returns a value with the wrong format.'] ...
					)
				if nncv.getPropFormat(prop) == Format.HANDLE
					warning_backup = warning('off', 'BRAPH2:NNClassifierMLP_CrossValidation');
					delete(ancestor(nncv.get(prop), 'figure'))
					warning(warning_backup)
				end
		end
	end
	 
	if ~isempty(NNClassifierMLP_CrossValidation.getProps(Category.RESULT))
		for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
	 
			% excluded props
			if any(prop == [NNClassifierMLP_CrossValidation.PFROC])
				continue
			end
	 
			switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
				case {Category.PARAMETER, Category.DATA}
					assert( ...
						nncv.isLocked(prop), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNClassifierMLP_CrossValidation.isLocked(' int2str(prop) ') must be locked because a result has been calculated.'] ...
						)
				otherwise
					assert( ...
						~nncv.isLocked(prop), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNClassifierMLP_CrossValidation.isLocked(' int2str(prop) ') must NOT be locked even though a result has been calculated.'] ...
						)
			end
		end
	end
end

%% Test 4: Lock 1
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNClassifierMLP_CrossValidation();
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		TAG = upper(NNClassifierMLP_CrossValidation.getPropTag(prop));
		assert( ...
			~nncv.isLocked(prop), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNClassifierMLP_CrossValidation.isLocked(' int2str(prop) ') must NOT be locked when it is instantiated.'] ...
			)
		assert( ...
			~nncv.isLocked(TAG), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNClassifierMLP_CrossValidation.isLocked(' TAG ') must NOT be locked when it is instantiated.'] ...
			)
	end
	 
	nncv.lock()
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA}
				assert( ...
					nncv.isLocked(prop), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.isLocked(' int2str(prop) ') must be locked because the element is now locked.'] ...
					)
			case {Category.CONSTANT, Category.METADATA, Category.RESULT, Category.QUERY, Category.EVANESCENT, Category.FIGURE, Category.GUI}
				assert( ...
					~nncv.isLocked(prop), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.isLocked(' int2str(prop) ') must NOT be locked even though the element is now locked.'] ...
					)
		end
	end
end

%% Test 5: Lock 2
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNClassifierMLP_CrossValidation();
	 
	warning_backup = warning('off', 'BRAPH2:NNClassifierMLP_CrossValidation');
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		nncv.lock(prop)
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					nncv.isLocked(prop), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.isLocked(' int2str(prop) ') must be locked.'] ...
					)
			case {Category.CONSTANT, Category.METADATA, Category.RESULT, Category.QUERY, Category.EVANESCENT}
				assert( ...
					~nncv.isLocked(prop), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.isLocked(' int2str(prop) ') must NOT be locked even though locking has been attempted.'] ...
					)
		end
	end
	warning(warning_backup)
end

%% Test 6: Check
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNClassifierMLP_CrossValidation();
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		TAG = upper(NNClassifierMLP_CrossValidation.getPropTag(prop));
		assert( ...
			nncv.isChecked(prop), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNClassifierMLP_CrossValidation.isChecked(' int2str(prop) ') must be checked when it is instantiated.'] ...
			)
		assert( ...
			nncv.isChecked(TAG), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNClassifierMLP_CrossValidation.isChecked(' TAG ') must be checked when it is instantiated.'] ...
			)
	end
	 
	nncv.unchecked()
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		assert( ...
			~nncv.isChecked(prop), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNClassifierMLP_CrossValidation.isChecked(' int2str(prop) ') must NOT be checked because it has been set to unchecked.'] ...
			)
	end
	 
	nncv.checked()
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		assert( ...
			nncv.isChecked(prop), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			['NNClassifierMLP_CrossValidation.isChecked(' int2str(prop) ') must be checked because it has been set to checked.'] ...
			)
	end
end

%% Test 7: Callbacks
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	% basic NNClassifierMLP_CrossValidation
	nncv_0 = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.TEMPLATE), ...
		NNClassifierMLP_CrossValidation.ID, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.ID), ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.WAITBAR), ...
		NNClassifierMLP_CrossValidation.KFOLDS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.KFOLDS), ...
		NNClassifierMLP_CrossValidation.SPLIT, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SPLIT), ...
		NNClassifierMLP_CrossValidation.D, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.D), ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NN_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.EPOCHS), ...
		NNClassifierMLP_CrossValidation.BATCH, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.BATCH), ...
		NNClassifierMLP_CrossValidation.SHUFFLE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SHUFFLE), ...
		NNClassifierMLP_CrossValidation.SOLVER, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SOLVER), ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PFROC), ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	% NNClassifierMLP_CrossValidation with 1st callbacks
	nncv_1 = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, nncv_0.getCallback(4), ..., ...
		NNClassifierMLP_CrossValidation.ID, nncv_0.getCallback(5), ..., ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, nncv_0.getCallback(9), ..., ...
		NNClassifierMLP_CrossValidation.KFOLDS, nncv_0.getCallback(10), ..., ...
		NNClassifierMLP_CrossValidation.SPLIT, nncv_0.getCallback(11), ..., ...
		NNClassifierMLP_CrossValidation.D, nncv_0.getCallback(12), ..., ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, nncv_0.getCallback(13), ..., ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, nncv_0.getCallback(14), ..., ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, nncv_0.getCallback(23), ..., ...
		NNClassifierMLP_CrossValidation.BATCH, nncv_0.getCallback(24), ..., ...
		NNClassifierMLP_CrossValidation.SHUFFLE, nncv_0.getCallback(25), ..., ...
		NNClassifierMLP_CrossValidation.SOLVER, nncv_0.getCallback(26), ..., ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, nncv_0.getCallback(31), ..., ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	prop_number = NNClassifierMLP_CrossValidation.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(NNClassifierMLP_CrossValidation.getPropTag(prop));
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(nncv_1.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(nncv_1.get(prop), nncv_0.get(prop)) && ~isa(nncv_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(nncv_1.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
	% NNClassifierMLP_CrossValidation with 2nd callbacks
	nncv_2 = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, nncv_1.getCallback(4), ..., ...
		NNClassifierMLP_CrossValidation.ID, nncv_1.getCallback(5), ..., ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, nncv_1.getCallback(9), ..., ...
		NNClassifierMLP_CrossValidation.KFOLDS, nncv_1.getCallback(10), ..., ...
		NNClassifierMLP_CrossValidation.SPLIT, nncv_1.getCallback(11), ..., ...
		NNClassifierMLP_CrossValidation.D, nncv_1.getCallback(12), ..., ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, nncv_1.getCallback(13), ..., ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, nncv_1.getCallback(14), ..., ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, nncv_1.getCallback(23), ..., ...
		NNClassifierMLP_CrossValidation.BATCH, nncv_1.getCallback(24), ..., ...
		NNClassifierMLP_CrossValidation.SHUFFLE, nncv_1.getCallback(25), ..., ...
		NNClassifierMLP_CrossValidation.SOLVER, nncv_1.getCallback(26), ..., ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, nncv_1.getCallback(31), ..., ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	prop_number = NNClassifierMLP_CrossValidation.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(NNClassifierMLP_CrossValidation.getPropTag(prop));
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(nncv_2.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(nncv_2.get(prop), nncv_0.get(prop)) && ~isa(nncv_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(nncv_2.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
	% NNClassifierMLP_CrossValidation with 3rd callbacks
	nncv_3 = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, nncv_2.getCallback(4), ..., ...
		NNClassifierMLP_CrossValidation.ID, nncv_2.getCallback(5), ..., ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, nncv_2.getCallback(9), ..., ...
		NNClassifierMLP_CrossValidation.KFOLDS, nncv_2.getCallback(10), ..., ...
		NNClassifierMLP_CrossValidation.SPLIT, nncv_2.getCallback(11), ..., ...
		NNClassifierMLP_CrossValidation.D, nncv_2.getCallback(12), ..., ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, nncv_2.getCallback(13), ..., ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, nncv_2.getCallback(14), ..., ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, nncv_2.getCallback(23), ..., ...
		NNClassifierMLP_CrossValidation.BATCH, nncv_2.getCallback(24), ..., ...
		NNClassifierMLP_CrossValidation.SHUFFLE, nncv_2.getCallback(25), ..., ...
		NNClassifierMLP_CrossValidation.SOLVER, nncv_2.getCallback(26), ..., ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, nncv_2.getCallback(31), ..., ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	prop_number = NNClassifierMLP_CrossValidation.getPropNumber();
	for prop = 1:1:prop_number
		TAG = upper(NNClassifierMLP_CrossValidation.getPropTag(prop));
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case {Category.PARAMETER, Category.DATA, Category.FIGURE, Category.GUI}
				assert( ...
					isa(nncv_3.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must be a callback.'] ...
					)
				assert( ...
					isequal(nncv_3.get(prop), nncv_0.get(prop)) && ~isa(nncv_1.get(prop), 'Callback'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.get(' int2str(prop) ') must be the actual property and NOT a callback.'] ...
					)
			otherwise
				assert( ...
					~isa(nncv_3.getr(prop), 'Callback'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation.getr(' int2str(prop) ') must NOT be a callback.'] ...
					)
		end
	end
	 
end

%% Test 8: Copy
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	% copy empty element
	nncv = NNClassifierMLP_CrossValidation();
	 
	nncv_copy = nncv.copy();
	 
	assert(nncv_copy ~= nncv, ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.copy() does not work. A copied element must point to a copied element.')
	assert(isequal(nncv_copy, nncv), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.copy() does not work. A copied element must have the same property values of the original element.')
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		value = nncv.getr(prop);
		value_copy = nncv_copy.getr(prop);
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case {Category.EVANESCENT}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNClassifierMLP_CrossValidation.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNClassifierMLP_CrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNClassifierMLP_CrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
				assert( ...
					nncv_copy.isLocked(prop) == nncv.isLocked(prop), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNClassifierMLP_CrossValidation.copy() does not work. The locked status of the copied and original elements must be the same.' ...
					)
				assert( ...
					nncv_copy.isChecked(prop) == nncv.isChecked(prop), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNClassifierMLP_CrossValidation.copy() does not work. The checked status of the copied and original elements must be the same.' ...
					)
				assert( ...
					nncv_copy.getPropSeed(prop) == nncv.getPropSeed(prop), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNClassifierMLP_CrossValidation.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
					)
		end
	end
	 
	% copy element with default initialization and memorization
	nncv = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.TEMPLATE), ...
		NNClassifierMLP_CrossValidation.ID, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.ID), ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.WAITBAR), ...
		NNClassifierMLP_CrossValidation.KFOLDS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.KFOLDS), ...
		NNClassifierMLP_CrossValidation.SPLIT, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SPLIT), ...
		NNClassifierMLP_CrossValidation.D, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.D), ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NN_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.EPOCHS), ...
		NNClassifierMLP_CrossValidation.BATCH, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.BATCH), ...
		NNClassifierMLP_CrossValidation.SHUFFLE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SHUFFLE), ...
		NNClassifierMLP_CrossValidation.SOLVER, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SOLVER), ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PFROC), ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		if NNClassifierMLP_CrossValidation.getPropCategory(prop) == Category.QUERY
			% properties QUERY should not be memorized
			% warning_backup = warning('off', [BRAPH2.STR ':NNClassifierMLP_CrossValidation']);
			% nncv.memorize(prop);
			% warning(warning_backup)
		elseif NNClassifierMLP_CrossValidation.getPropCategory(prop) == Category.EVANESCENT && nncv.getPropFormat(prop) == Format.HANDLE
			nncv.memorize(prop);
			warning_backup = warning('off', 'BRAPH2:NNClassifierMLP_CrossValidation');
			delete(ancestor(nncv.get(prop), 'figure'))
			warning(warning_backup)
		else
			nncv.memorize(prop);
		end
	end
	 
	% copy element with default initialization
	nncv_copy = nncv.copy();
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		value = nncv.getr(prop);
		value_copy = nncv_copy.getr(prop);
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case {Category.EVANESCENT Category.QUERY}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNClassifierMLP_CrossValidation.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNClassifierMLP_CrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNClassifierMLP_CrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
	 
					assert( ...
						nncv_copy.isLocked(prop) == nncv.isLocked(prop), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The locked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						nncv_copy.isChecked(prop) == nncv.isChecked(prop), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The checked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						nncv_copy.getPropSeed(prop) == nncv.getPropSeed(prop), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
						)
		end
	end
	 
	% copy element with callbacks
	nncv_0 = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.TEMPLATE), ...
		NNClassifierMLP_CrossValidation.ID, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.ID), ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.WAITBAR), ...
		NNClassifierMLP_CrossValidation.KFOLDS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.KFOLDS), ...
		NNClassifierMLP_CrossValidation.SPLIT, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SPLIT), ...
		NNClassifierMLP_CrossValidation.D, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.D), ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NN_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.EPOCHS), ...
		NNClassifierMLP_CrossValidation.BATCH, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.BATCH), ...
		NNClassifierMLP_CrossValidation.SHUFFLE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SHUFFLE), ...
		NNClassifierMLP_CrossValidation.SOLVER, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SOLVER), ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PFROC), ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	nncv = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, nncv_0.getCallback(4), ..., ...
		NNClassifierMLP_CrossValidation.ID, nncv_0.getCallback(5), ..., ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, nncv_0.getCallback(9), ..., ...
		NNClassifierMLP_CrossValidation.KFOLDS, nncv_0.getCallback(10), ..., ...
		NNClassifierMLP_CrossValidation.SPLIT, nncv_0.getCallback(11), ..., ...
		NNClassifierMLP_CrossValidation.D, nncv_0.getCallback(12), ..., ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, nncv_0.getCallback(13), ..., ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, nncv_0.getCallback(14), ..., ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, nncv_0.getCallback(23), ..., ...
		NNClassifierMLP_CrossValidation.BATCH, nncv_0.getCallback(24), ..., ...
		NNClassifierMLP_CrossValidation.SHUFFLE, nncv_0.getCallback(25), ..., ...
		NNClassifierMLP_CrossValidation.SOLVER, nncv_0.getCallback(26), ..., ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, nncv_0.getCallback(31), ..., ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	nncv_copy = nncv.copy();
	nncv_0_copy = nncv_copy.getr('ID').get('EL');
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
		value = nncv.getr(prop);
		value_copy = nncv_copy.getr(prop);
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case {Category.EVANESCENT}
				assert( ...
					isa(value_copy, 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					'NNClassifierMLP_CrossValidation.copy() does not work. The copied value of an EVANESCENT property must be NoValue.' ...
					)
			otherwise
				if isa(value, 'NoValue')
					assert( ...
						value_copy == value, ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. There should be a unique instance of NoValue.' ...
						)
				elseif isa(value, 'Element')
					assert( ...
						value_copy ~= value, ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
						)
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
						)
				elseif iscell(value) && all(all(cellfun(@(x) isa(x, 'Element'), value)))
					for j = 1:1:length(value)
						assert( ...
							value_copy ~= value, ...
							[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNClassifierMLP_CrossValidation.copy() does not work. The handle of a copied element should point to a copied element.' ...
							)
						assert( ...
							isequal(value_copy, value), ...
							[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
							'NNClassifierMLP_CrossValidation.copy() does not work. When empty, a copied element should be equal to the element.' ...
							)
					end
				else
					assert( ...
						isequal(value_copy, value), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The value copy should be equal to the original.' ...
						)
				end
				if isa(value, 'Callback')
					assert( ...
						value == nncv_0.getCallback(prop), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The callback should be obtained from NNClassifierMLP_CrossValidation.getCallback().' ...
						)
					assert( ...
						value_copy == nncv_0_copy.getCallback(prop), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The callback should be obtained from NNClassifierMLP_CrossValidation.getCallback().' ...
						)
				end
	 
					assert( ...
						nncv_copy.isLocked(prop) == nncv.isLocked(prop), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The locked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						nncv_copy.isChecked(prop) == nncv.isChecked(prop), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The checked status of the copied and original elements must be the same.' ...
						)
	 
					assert( ...
						nncv_copy.getPropSeed(prop) == nncv.getPropSeed(prop), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation.copy() does not work. The randomization seeds of the copied and original elements must be the same.' ...
						)
		end
	end
	 
end

%% Test 9: Template
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv_template = NNClassifierMLP_CrossValidation();
	nncv = NNClassifierMLP_CrossValidation('TEMPLATE', nncv_template);
	 
	for prop = 1:1:NNClassifierMLP_CrossValidation.getPropNumber()
	 
		% excluded props
		if any(prop == [NNClassifierMLP_CrossValidation.PFROC])
			continue
		end
	 
		TAG = upper(NNClassifierMLP_CrossValidation.getPropTag(prop));
		switch NNClassifierMLP_CrossValidation.getPropCategory(prop)
			case {Category.PARAMETER}
				if prop == NNClassifierMLP_CrossValidation.TEMPLATE
					assert( ...
						isa(nncv.getr(prop), 'NNClassifierMLP_CrossValidation'), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation TEMPLATE does not work. NNClassifierMLP_CrossValidation.getr(''TEMPLATE'') should be a NNClassifierMLP_CrossValidation element.' ...
						)
					assert( ...
						isa(nncv_template.getr(prop), 'NoValue'), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						'NNClassifierMLP_CrossValidation TEMPLATE does not work. NNClassifierMLP_CrossValidation_template.getr(''TEMPLATE'') should be a NoValue.' ...
						)
				else
					assert( ...
						isa(nncv.getr(prop), 'Callback'), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNClassifierMLP_CrossValidation TEMPLATE does not work. NNClassifierMLP_CrossValidation.getr(' TAG ') should be a Callback.'] ...
						)
					assert( ...
						nncv.getr(prop).get('EL') == nncv_template && nncv.getr(prop).get('PROP') == prop && strcmp(nncv.getr(prop).get('TAG'), TAG), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNClassifierMLP_CrossValidation TEMPLATE does not work. NNClassifierMLP_CrossValidation.getr(' TAG ') should be a Callback to nncv_template.' TAG '.'] ...
						)
					assert( ...
						isa(nncv_template.getr(prop), 'NoValue'), ...
						[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
						['NNClassifierMLP_CrossValidation TEMPLATE does not work. NNClassifierMLP_CrossValidation_template.getr(' TAG ') should be a NoValue.'] ...
						)
				end
			otherwise
				assert( ...
					isa(nncv.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation TEMPLATE does not work. NNClassifierMLP_CrossValidation.getr(' TAG ') should be a NoValue.'] ...
					)
				assert( ...
					isa(nncv_template.getr(prop), 'NoValue'), ...
					[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
					['NNClassifierMLP_CrossValidation TEMPLATE does not work. NNClassifierMLP_CrossValidation_template.getr(' TAG ') should be a NoValue.'] ...
					)
		end
	end
end

%% Test 10: Save Load
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.TEMPLATE), ...
		NNClassifierMLP_CrossValidation.ID, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.ID), ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.WAITBAR), ...
		NNClassifierMLP_CrossValidation.KFOLDS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.KFOLDS), ...
		NNClassifierMLP_CrossValidation.SPLIT, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SPLIT), ...
		NNClassifierMLP_CrossValidation.D, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.D), ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NN_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.EPOCHS), ...
		NNClassifierMLP_CrossValidation.BATCH, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.BATCH), ...
		NNClassifierMLP_CrossValidation.SHUFFLE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SHUFFLE), ...
		NNClassifierMLP_CrossValidation.SOLVER, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SOLVER), ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PFROC), ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	filename = [fileparts(which('test_braph2')) filesep 'nnclassifiermlp_crossvalidation_to_be_erased.b2'];
	 
	Element.save(nncv, filename)
	 
	nncv_loaded = Element.load(filename);
	 
	assert( ...
		isequal(nncv.copy(), nncv_loaded), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.save(nncv) and/or NNClassifierMLP_CrossValidation.load() do not work.' ...
		)
	 
	delete(filename)
end

%% Test 11: JSON
if rand() >= (1 - .01) * BRAPH2TEST.RANDOM
	nncv = NNClassifierMLP_CrossValidation( ...
		NNClassifierMLP_CrossValidation.ELCLASS, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NAME, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DESCRIPTION, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.TEMPLATE), ...
		NNClassifierMLP_CrossValidation.ID, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.ID), ...
		NNClassifierMLP_CrossValidation.LABEL, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.LABEL), ...
		NNClassifierMLP_CrossValidation.NOTES, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NOTES), ...
		NNClassifierMLP_CrossValidation.TOSTRING, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.WAITBAR, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.WAITBAR), ...
		NNClassifierMLP_CrossValidation.KFOLDS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.KFOLDS), ...
		NNClassifierMLP_CrossValidation.SPLIT, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SPLIT), ...
		NNClassifierMLP_CrossValidation.D, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.D), ...
		NNClassifierMLP_CrossValidation.NN_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NN_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.NNEVALUATOR_TEMPLATE), ...
		NNClassifierMLP_CrossValidation.DSP, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.DCO, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.D_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.NN_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EVALUATOR_LIST_IT, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.EPOCHS, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.EPOCHS), ...
		NNClassifierMLP_CrossValidation.BATCH, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.BATCH), ...
		NNClassifierMLP_CrossValidation.SHUFFLE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SHUFFLE), ...
		NNClassifierMLP_CrossValidation.SOLVER, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.SOLVER), ...
		NNClassifierMLP_CrossValidation.VERBOSE, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.VERBOSE), ...
		NNClassifierMLP_CrossValidation.PLOT_TRAINING, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PLOT_TRAINING), ...
		NNClassifierMLP_CrossValidation.TRAIN, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.AV_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.PFROC, NNClassifierMLP_CrossValidation.getPropDefault(NNClassifierMLP_CrossValidation.PFROC), ...
		NNClassifierMLP_CrossValidation.AV_MACRO_AUC, NNClassifierMLP_CrossValidation.getNoValue(), ...
		NNClassifierMLP_CrossValidation.C_MATRIX, NNClassifierMLP_CrossValidation.getNoValue() ...
		);
	 
	[json, struct, el_list] = encodeJSON(nncv);
	[nncv_dec, struct_dec, el_list_dec] = Element.decodeJSON(json);
	 
	assert(nncv_dec ~= nncv, ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		'NNClassifierMLP_CrossValidation.encodeJSON() or NNClassifierMLP_CrossValidation.decodeJSON() does not work. A JSON encoded/decoded element must point to an element other than the original one.' ...
		)
	if all(cellfun(@(prop) NNClassifierMLP_CrossValidation.getPropFormat(prop), num2cell(NNClassifierMLP_CrossValidation.getProps())) == Format.HANDLE) && all(cellfun(@(prop) NNClassifierMLP_CrossValidation.getPropFormat(prop), num2cell(NNClassifierMLP_CrossValidation.getProps())) == Format.NET)
		assert(isequal(nncv_dec, nncv), ...
			[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
			'NNClassifierMLP_CrossValidation.encodeJSON() or NNClassifierMLP_CrossValidation.decodeJSON() does not work. A JSON encoded/decoded element must have the same property values of the original element.' ...
			)
	end
end

%% Test 12: evaluate a classifier cross-validation with the example data
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	% ensure the example data is generated
	if ~isfile([fileparts(which('NNDataPoint_CON_CLA')) filesep 'Example data NN CLA CON XLS' filesep 'atlas.xlsx'])
	    create_data_NN_CLA_CON_XLS() % create example files
	end
	
	% Load BrainAtlas
	im_ba = ImporterBrainAtlasXLS( ...
	    'FILE', [fileparts(which('NNDataPoint_CON_CLA')) filesep 'Example data NN CLA CON XLS' filesep 'atlas.xlsx'], ...
	    'WAITBAR', true ...
	    );
	
	ba = im_ba.get('BA');
	
	% Load Groups of SubjectCON
	im_gr1 = ImporterGroupSubjectCON_XLS( ...
	    'DIRECTORY', [fileparts(which('NNDataPoint_CON_CLA')) filesep 'Example data NN CLA CON XLS' filesep 'CON_Group_1_XLS'], ...
	    'BA', ba, ...
	    'WAITBAR', true ...
	    );
	
	gr1 = im_gr1.get('GR');
	
	im_gr2 = ImporterGroupSubjectCON_XLS( ...
	    'DIRECTORY', [fileparts(which('NNDataPoint_CON_CLA')) filesep 'Example data NN CLA CON XLS' filesep 'CON_Group_2_XLS'], ...
	    'BA', ba, ...
	    'WAITBAR', true ...
	    );
	
	gr2 = im_gr2.get('GR');
	
	% create item lists of NNDataPoint_CON_CLA
	[~, group_folder_name] = fileparts(im_gr1.get('DIRECTORY'));
	it_list1 = cellfun(@(x) NNDataPoint_CON_CLA( ...
	    'ID', x.get('ID'), ...
	    'SUB', x, ...
	    'TARGET_CLASS', {group_folder_name}), ...
	    gr1.get('SUB_DICT').get('IT_LIST'), ...
	    'UniformOutput', false);
	
	[~, group_folder_name] = fileparts(im_gr2.get('DIRECTORY'));
	it_list2 = cellfun(@(x) NNDataPoint_CON_CLA( ...
	    'ID', x.get('ID'), ...
	    'SUB', x, ...
	    'TARGET_CLASS', {group_folder_name}), ...
	    gr2.get('SUB_DICT').get('IT_LIST'), ...
	    'UniformOutput', false);
	
	% create NNDataPoint_CON_CLA DICT items
	dp_list1 = IndexedDictionary(...
	        'IT_CLASS', 'NNDataPoint_CON_CLA', ...
	        'IT_LIST', it_list1 ...
	        );
	
	dp_list2 = IndexedDictionary(...
	        'IT_CLASS', 'NNDataPoint_CON_CLA', ...
	        'IT_LIST', it_list2 ...
	        );
	
	% create a NNDataset containing the NNDataPoint_CON_CLA DICT
	d1 = NNDataset( ...
	    'DP_CLASS', 'NNDataPoint_CON_CLA', ...
	    'DP_DICT', dp_list1 ...
	    );
	
	d2 = NNDataset( ...
	    'DP_CLASS', 'NNDataPoint_CON_CLA', ...
	    'DP_DICT', dp_list2 ...
	    );
	
	kfolds = 7;
	nncv = NNClassifierMLP_CrossValidation('KFOLDS', kfolds, 'D', {d1, d2});
	
	nn_list = nncv.get('NN_LIST');
	assert(length(nn_list) == kfolds, ...
	    [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
	    'NNClassifierMLP_CrossValidation does not calculate the neural network list correctly.' ...
	    )
	e_list = nncv.get('EVALUATOR_LIST');
	assert(length(e_list) == kfolds, ...
	    [BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
	    'NNClassifierMLP_CrossValidation does not calculate the evaluator list correctly.' ...
	    )
end

%% Test 13: No Figures Left
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	assert(isempty(findall(0, 'type', 'figure')), ...
		[BRAPH2.STR ':NNClassifierMLP_CrossValidation:' BRAPH2.FAIL_TEST], ...
		[' When testing NNClassifierMLP_CrossValidation no figures should be left over, either visible or not. ' ...
		int2str(length(findall(0, 'type', 'figure'))) ' figure(s) were left over.'] ...
		)
end

%% Test 14: Delete Figures
if rand() >= (1 - 1) * BRAPH2TEST.RANDOM
	delete(findall(0, 'type', 'figure'))
end

