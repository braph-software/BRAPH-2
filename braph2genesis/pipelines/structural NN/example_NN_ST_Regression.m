%% EXAMPLE_NN_ST_REGRESSION
% Script example pipeline for NN regression with the input of ROI values

clear variables %#ok<*NASGU>

%% Load brain atlas
im_ba = ImporterBrainAtlasXLS( ...
    'FILE', [fileparts(which('example_NN_ST_Regression')) filesep 'example data ST NN' filesep 'regression' filesep 'desikan_atlas.xlsx'], ...
    'WAITBAR', true ...
    );

ba = im_ba.get('BA');

%% Load groups of SubjectST
im_gr = ImporterGroupSubjectST_XLS( ...
    'FILE', [fileparts(which('example_NN_ST_Classification')) filesep 'example data ST NN' filesep 'regression' filesep 'xls' filesep 'ST_group.xlsx'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr = im_gr.get('GR');

%% Construct the dataset
nnd = NNData_ST( ...
    'GR', gr, ...
    'INPUT_TYPE', 'structural_data', ...
    'TARGET_NAME', 'age' ...
    );

gr_nn = nnd.get('GR_NN');

%% Split the dataset
nnds = NNRegressorDataSplit( ...
    'GR', gr_nn, ...
    'SPLIT', 0.2 ...
    );

gr_train = nnds.get('GR_TRAIN_FS');
gr_val = nnds.get('GR_VAL_FS');

%% Train the neural network regressor with the training set
regressor = NNRegressorDNN( ...
    'GR', gr_train, ...
    'EPOCHS', 120, ...
    'LAYERS', [200 200], ...
    'VERBOSE', false, ...
    'PLOT_TRAINING', false, ...
    'SHUFFLE', 'every-epoch' ...
    );

regressor.memorize('MODEL');

%% Evaluate the regressor for the training set
nne_train = NNRegressorEvaluator( ...
    'GR', gr_train, ...
    'NN', regressor ...
    );

rmse_train = nne_train.get('RMSE');

%% Evaluate the regressor for the validation set
nne_val = NNRegressorEvaluator( ...
    'GR', gr_val, ...
    'NN', regressor ...
    );

rmse_val = nne_val.get('RMSE');

close all