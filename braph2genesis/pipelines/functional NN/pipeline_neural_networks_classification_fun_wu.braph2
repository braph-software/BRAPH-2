%% Pipeline Neural Networks Classification Functional WU
%
% This is the pipeline script to perform classification by neural networks for two groups of subjects with functional data and weighted undirected graphs.
% 1. It loads a brain atlas from an XLS file (e.g., aal90_atlas.xlsx).
% 2. It loads the data of two groups of subjects from two directories (e.g., GroupName1 and GroupName2) containing XLS files of each subject.
% 3. It constructs the dataset using with functional matrices (FUN) based on graphs (WU).
% 4. It splits the dataset into training set and testing set.
% 5. It trains the neural network model.
% 6. It evaluates the performance on the training set and the validation set.

%% Brain Atlas
ba = ImporterBrainAtlasXLS('WAITBAR', true).get('BA'); % Load a Brain Atlas XLS % Brain Atlas

%% Groups
gr1 = ImporterGroupSubjectFUN_XLS('BA', ba, 'WAITBAR', true).get('GR'); % Load Group CON 1 from XLS % Group FUN 1
gr2 = ImporterGroupSubjectFUN_XLS('BA', ba, 'WAITBAR', true).get('GR'); % Load Group CON 2 from XLS % Group FUN 2

%% Dataset Construction
nnd1 = NNData_FUN_WU('GR', gr1, 'TARGET_NAME', gr1.get('ID')); % NN Dataset for Group 1 % NN Group FUN 1
nnd2 = NNData_FUN_WU('GR', gr2, 'TARGET_NAME', gr2.get('ID'), 'TEMPLATE', nnd1); % NN Dataset for Group 2 % NN Group FUN 2

%% Dataset Splitting
nnds = NNClassifierDataSplit('GR1', nnd1.get('GR_NN'), 'GR2', nnd2.get('GR_NN'), 'SPLIT_GR1', 0.2, 'SPLIT_GR2', 0.2); % Split the dataset % NN Dataset

%% Model Training
classifier = NNClassifierDNN('GR', nnds.get('GR_TRAIN_FS'), 'VERBOSE', true, 'SHUFFLE', 'every-epoch'); % Train the NN % NN Classifier

%% Model Evaluation
nne_train = NNClassifierEvaluator('GR', nnds.get('GR_TRAIN_FS'), 'NN', classifier); % Evaluate on Training Set % Training Set
nne_val = NNClassifierEvaluator('GR', nnds.get('GR_VAL_FS'), 'NN', classifier); % Evaluate on Validation Set % Validation Set
