%% Pipeline Classification Cross-Validation Functional BUD Measure  

% This is the pipeline script to execute cross-validation with multi-layer perceptron classifier using the graph measures with binary undirected graph at fix densities obtained from functional data.
% The functional data can be derived from imaging modalities like functional MRI (fMRI), electroencephalography (EEG) or magnetoencephalography (MEG).
% 1. It loads a brain atlas from an XLS file (e.g., desikan_atlas.xlsx).
% 2. It loads data for three groups of subjects from the directories (e.g., FUN_Group_1_XLS, FUN_Group_2_XLS, and FUN_Group_3_XLS) FUNtaining XLS files for each subject.
% 3. It analyzes these groups using functional analyses (FUN) based on binary undirected graph at fix densities (BUD).
% 4. It executes the cross-validation process.

% PDF: 
% README: 

%% Brain Atlas
ba = ImporterBrainAtlasXLS('WAITBAR', true).get('GET_FILE').get('BA'); % Load a Brain Atlas XLS % Brain Atlas

%% Groups
gr1 = ImporterGroupSubjectFUN_XLS('BA', ba, 'WAITBAR', true).get('GET_DIR').get('GR'); % Load Group FUN 1 from XLS % Group FUN 1
gr2 = ImporterGroupSubjectFUN_XLS('BA', ba, 'WAITBAR', true).get('GET_DIR').get('GR'); % Load Group FUN 2 from XLS % Group FUN 2

%% Analysis
a_BUD1 = AnalyzeEnsemble_FUN_BUD('GR', gr1, 'DENSITIES', 1:1:2); % Analyze Group 1 % Group 1 Analysis
a_BUD2 = AnalyzeEnsemble_FUN_BUD('GR', gr2, 'TEMPLATE', a_BUD1); % Analyze Group 2 % Group 2 Analysis

%% Cross-Validation
nncv = NNClassifierMLP_CrossValidation('D', {NNDataset('DP_CLASS', 'NNDataPoint_Measure_CLA', 'DP_DICT', IndexedDictionary('IT_CLASS', 'NNDataPoint_Measure_CLA', 'IT_LIST', cellfun(@(g, sub) NNDataPoint_Measure_CLA('ID', g.get('ID'), 'G', g, 'M_LIST', a_BUD1.get('ME_DICT').get('KEYS'), 'TARGET_CLASS', {gr1.get('ID')}), a_BUD1.get('G_DICT').get('IT_LIST'), 'UniformOutput', false))), NNDataset('DP_CLASS', 'NNDataPoint_Measure_CLA', 'DP_DICT', IndexedDictionary('IT_CLASS', 'NNDataPoint_Measure_CLA', 'IT_LIST', cellfun(@(g) NNDataPoint_Measure_CLA('ID', g.get('ID'), 'G', g, 'M_LIST', a_BUD2.get('ME_DICT').get('KEYS'), 'TARGET_CLASS', {gr2.get('ID')}), a_BUD2.get('G_DICT').get('IT_LIST'), 'UniformOutput', false)))}); % Cross-Validation % Cross-Validation Process