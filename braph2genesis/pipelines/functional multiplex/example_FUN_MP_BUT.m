%EXAMPLE_FUN_MP_BUT
% Script example pipeline FUN MP BUT

clear variables %#ok<*NASGU>

%% Load BrainAtlas
im_ba = ImporterBrainAtlasXLS( ...
    'FILE', [fileparts(which('example_FUN_MP_BUT')) filesep 'example data FUN_MP (fMRI)' filesep 'aal90_atlas.xlsx'], ...
    'WAITBAR', true ...
    );

ba = im_ba.get('BA');

%% Load Groups of SubjectFUN_MP

im_gr1 = ImporterGroupSubjectFUN_MP_XLS( ...
    'DIRECTORY', [fileparts(which('example_FUN_MP_BUT')) filesep 'example data FUN_MP (fMRI)' filesep 'xls' filesep 'GroupName1'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr1 = im_gr1.get('GR');

im_gr2 = ImporterGroupSubjectFUN_MP_XLS( ...
    'DIRECTORY', [fileparts(which('example_FUN_MP_BUT')) filesep 'example data FUN_MP (fMRI)' filesep 'xls' filesep 'GroupName2'], ...
    'BA', ba, ...
    'WAITBAR', true ...
    );

gr2 = im_gr2.get('GR');

%% Analysis FUN MP BUT
thresholds = .7:.1:.9;

a_BUT1 = AnalyzeEnsemble_FUN_MP_BUT( ...
    'GR', gr1, ...
    'THRESHOLDS', thresholds ...
    );

a_BUT2 = AnalyzeEnsemble_FUN_MP_BUT( ... 
    'GR', gr2, ...
    'THRESHOLDS', thresholds ...
    );

% measure calculation
mpc_BUT1 = a_BUT1.getMeasureEnsemble('MultiplexParticipation').get('M');
mpc_av_BUT1 = a_BUT1.getMeasureEnsemble('MultiplexParticipationAv').get('M');
edgeov_BUT1 = a_BUT1.getMeasureEnsemble('EdgeOverlap').get('M');

degree_BUT2 = a_BUT2.getMeasureEnsemble('MultiplexParticipation').get('M');
degree_av_BUT2 = a_BUT2.getMeasureEnsemble('MultiplexParticipationAv').get('M');
edgeov_BUT2 = a_BUT2.getMeasureEnsemble('EdgeOverlap').get('M');

% comparison
c_BUT = CompareEnsemble( ...
    'P', 10, ...
    'A1', a_BUT1, ...
    'A2', a_BUT2, ...
    'WAITBAR', true, ...
    'VERBOSE', false, ...
    'MEMORIZE', true ...
    );

mpc_BUT_diff = c_BUT.getComparison('MultiplexParticipation').get('DIFF');
mpc_BUT_p1 = c_BUT.getComparison('MultiplexParticipation').get('P1');
mpc_BUT_p2 = c_BUT.getComparison('MultiplexParticipation').get('P2');
mpc_BUT_cil = c_BUT.getComparison('MultiplexParticipation').get('CIL');
mpc_BUT_ciu = c_BUT.getComparison('MultiplexParticipation').get('CIU');

mpc_av_BUT_diff = c_BUT.getComparison('MultiplexParticipationAv').get('DIFF');
mpc_av_BUT_p1 = c_BUT.getComparison('MultiplexParticipationAv').get('P1');
mpc_av_BUT_p2 = c_BUT.getComparison('MultiplexParticipationAv').get('P2');
mpc_av_BUT_cil = c_BUT.getComparison('MultiplexParticipationAv').get('CIL');
mpc_av_BUT_ciu = c_BUT.getComparison('MultiplexParticipationAv').get('CIU');