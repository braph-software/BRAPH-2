%% Pipeline Classification Cross-Validation Connectivity-Functional Multiplex BUT Measure  

% This is the pipeline script to execute cross-validation with multi-layer perceptron classifier using the graph measures with binary undirected graph at fix thresholds obtained from connectivity-functional multiplex data.
% The connectivity data can be derived from imaging modalities like diffusion weighted imaging (DWI). 
% The functional data can be derived from imaging modalities like functional MRI (fMRI), electroencephalography (EEG) or magnetoencephalography (MEG).
% 1. It loads a brain atlas from an XLS file (e.g., aal90_atlas.xlsx).
% 2.1 It loads the connectivity data of two groups of subjects from three directories (e.g., CON_Group1_XLS, CON_Group2_XLS, and CON_Group3_XLS) containing XLS files of each subject.
% 2.2 It loads the functional data of two groups of subjects from three directories (e.g., CON_Group1_XLS, CON_Group2_XLS, and CON_Group3_XLS) containing XLS files of each subject.
% 3. It analyzes these groups using connectivity-functional analyses (CON-FUN) based on binary undirected multiplex at fix thresholds (MultiplexBUT).
% 4. It executes the cross-validation process.

% PDF: 
% README: 

%% Brain Atlas
ba = ImporterBrainAtlasXLS('WAITBAR', true).get('GET_FILE').get('BA'); % Load a Brain Atlas XLS % Brain Atlas

%% Connectivity Groups
gr1_CON = ImporterGroupSubjectCON_XLS('BA', ba, 'WAITBAR', true).get('GET_DIR').get('GR'); % Load Group CON 1 from XLS % Group CON 1
gr2_CON = ImporterGroupSubjectCON_XLS('BA', ba, 'WAITBAR', true).get('GET_DIR').get('GR'); % Load Group CON 2 from XLS % Group CON 2
gr3_CON = ImporterGroupSubjectCON_XLS('BA', ba, 'WAITBAR', true).get('GET_DIR').get('GR'); % Load Group CON 3 from XLS % Group CON 3

%% Functional Groups
gr1_FUN = ImporterGroupSubjectFUN_XLS('BA', ba, 'WAITBAR', true).get('GET_DIR').get('GR'); % Load Group FUN 1 from XLS % Group FUN 1
gr2_FUN = ImporterGroupSubjectFUN_XLS('BA', ba, 'WAITBAR', true).get('GET_DIR').get('GR'); % Load Group FUN 2 from XLS % Group FUN 2
gr3_FUN = ImporterGroupSubjectFUN_XLS('BA', ba, 'WAITBAR', true).get('GET_DIR').get('GR'); % Load Group FUN 3 from XLS % Group FUN 3

%% Group Combination
gr1 = CombineGroups_CON_FUN_MP('GR_CON', gr1_CON, 'GR_FUN', gr1_FUN, 'WAITBAR', true).get('GR_CON_FUN_MP'); % Combine Groups 1 % Group CON-FUN_MP 1
gr2 = CombineGroups_CON_FUN_MP('GR_CON', gr2_CON, 'GR_FUN', gr2_FUN, 'WAITBAR', true).get('GR_CON_FUN_MP'); % Combine Groups 2 % Group CON-FUN_MP 2
gr3 = CombineGroups_CON_FUN_MP('GR_CON', gr3_CON, 'GR_FUN', gr3_FUN, 'WAITBAR', true).get('GR_CON_FUN_MP'); % Combine Groups 3 % Group CON-FUN_MP 3

%% Analysis
a_BUT1 = AnalyzeEnsemble_CON_FUN_MP_BUT('GR', gr1, 'THRESHOLDS', .1:.1:.2); % Analyze Group 1 % Group 1 Analysis
a_BUT2 = AnalyzeEnsemble_CON_FUN_MP_BUT('GR', gr2, 'TEMPLATE', a_BUT1); % Analyze Group 2 % Group 2 Analysis
a_BUT3 = AnalyzeEnsemble_CON_FUN_MP_BUT('GR', gr3, 'TEMPLATE', a_BUT1); % Analyze Group 3 % Group 3 Analysis

%% Cross-Validation
nncv = NNClassifierMLP_CrossValidation('BA', ba, 'D', {NNDataset('DP_CLASS', 'NNDataPoint_Measure_CLA', 'DP_DICT', IndexedDictionary('IT_CLASS', 'NNDataPoint_Measure_CLA', 'IT_LIST', cellfun(@(g, sub) NNDataPoint_Measure_CLA('ID', g.get('ID'), 'G', g, 'M_LIST', a_BUT1.get('ME_DICT').get('KEYS'), 'TARGET_IDS', {gr1.get('ID')}), a_BUT1.get('G_DICT').get('IT_LIST'), 'UniformOutput', false))), NNDataset('DP_CLASS', 'NNDataPoint_Measure_CLA', 'DP_DICT', IndexedDictionary('IT_CLASS', 'NNDataPoint_Measure_CLA', 'IT_LIST', cellfun(@(g) NNDataPoint_Measure_CLA('ID', g.get('ID'), 'G', g, 'M_LIST', a_BUT2.get('ME_DICT').get('KEYS'), 'TARGET_IDS', {gr2.get('ID')}), a_BUT2.get('G_DICT').get('IT_LIST'), 'UniformOutput', false))), NNDataset('DP_CLASS', 'NNDataPoint_Measure_CLA', 'DP_DICT', IndexedDictionary('IT_CLASS', 'NNDataPoint_Measure_CLA', 'IT_LIST', cellfun(@(g) NNDataPoint_Measure_CLA('ID', g.get('ID'), 'G', g, 'M_LIST', a_BUT3.get('ME_DICT').get('KEYS'), 'TARGET_IDS', {gr3.get('ID')}), a_BUT3.get('G_DICT').get('IT_LIST'), 'UniformOutput', false)))}); % Cross-Validation % Cross-Validation Process